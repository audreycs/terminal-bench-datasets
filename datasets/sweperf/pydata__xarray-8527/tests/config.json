{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-8527",
  "patch": "diff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex bedcbc62efa..a4a66494e9f 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -24,6 +24,8 @@ v2023.12.1 (unreleased)\n New Features\n ~~~~~~~~~~~~\n \n+- :py:meth:`xr.cov` and :py:meth:`xr.corr` now support using weights (:issue:`8527`, :pull:`7392`).\n+  By `Lloren\u00e7 Lled\u00f3 <https://github.com/lluritu>`_.\n \n Breaking changes\n ~~~~~~~~~~~~~~~~\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex ed2c733d4ca..c6c7ef97e42 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -9,7 +9,7 @@\n import warnings\n from collections import Counter\n from collections.abc import Hashable, Iterable, Iterator, Mapping, Sequence, Set\n-from typing import TYPE_CHECKING, Any, Callable, Literal, TypeVar, Union, overload\n+from typing import TYPE_CHECKING, Any, Callable, Literal, TypeVar, Union, cast, overload\n \n import numpy as np\n \n@@ -1281,7 +1281,11 @@ def apply_ufunc(\n \n \n def cov(\n-    da_a: T_DataArray, da_b: T_DataArray, dim: Dims = None, ddof: int = 1\n+    da_a: T_DataArray,\n+    da_b: T_DataArray,\n+    dim: Dims = None,\n+    ddof: int = 1,\n+    weights: T_DataArray | None = None,\n ) -> T_DataArray:\n     \"\"\"\n     Compute covariance between two DataArray objects along a shared dimension.\n@@ -1297,6 +1301,8 @@ def cov(\n     ddof : int, default: 1\n         If ddof=1, covariance is normalized by N-1, giving an unbiased estimate,\n         else normalization is by N.\n+    weights : DataArray, optional\n+        Array of weights.\n \n     Returns\n     -------\n@@ -1350,6 +1356,23 @@ def cov(\n     array([ 0.2       , -0.5       ,  1.69333333])\n     Coordinates:\n       * space    (space) <U2 'IA' 'IL' 'IN'\n+    >>> weights = DataArray(\n+    ...     [4, 2, 1],\n+    ...     dims=(\"space\"),\n+    ...     coords=[\n+    ...         (\"space\", [\"IA\", \"IL\", \"IN\"]),\n+    ...     ],\n+    ... )\n+    >>> weights\n+    <xarray.DataArray (space: 3)>\n+    array([4, 2, 1])\n+    Coordinates:\n+      * space    (space) <U2 'IA' 'IL' 'IN'\n+    >>> xr.cov(da_a, da_b, dim=\"space\", weights=weights)\n+    <xarray.DataArray (time: 3)>\n+    array([-4.69346939, -4.49632653, -3.37959184])\n+    Coordinates:\n+      * time     (time) datetime64[ns] 2000-01-01 2000-01-02 2000-01-03\n     \"\"\"\n     from xarray.core.dataarray import DataArray\n \n@@ -1358,11 +1381,18 @@ def cov(\n             \"Only xr.DataArray is supported.\"\n             f\"Given {[type(arr) for arr in [da_a, da_b]]}.\"\n         )\n+    if weights is not None:\n+        if not isinstance(weights, DataArray):\n+            raise TypeError(\"Only xr.DataArray is supported.\" f\"Given {type(weights)}.\")\n+    return _cov_corr(da_a, da_b, weights=weights, dim=dim, ddof=ddof, method=\"cov\")\n \n-    return _cov_corr(da_a, da_b, dim=dim, ddof=ddof, method=\"cov\")\n \n-\n-def corr(da_a: T_DataArray, da_b: T_DataArray, dim: Dims = None) -> T_DataArray:\n+def corr(\n+    da_a: T_DataArray,\n+    da_b: T_DataArray,\n+    dim: Dims = None,\n+    weights: T_DataArray | None = None,\n+) -> T_DataArray:\n     \"\"\"\n     Compute the Pearson correlation coefficient between\n     two DataArray objects along a shared dimension.\n@@ -1375,6 +1405,8 @@ def corr(da_a: T_DataArray, da_b: T_DataArray, dim: Dims = None) -> T_DataArray:\n         Array to compute.\n     dim : str, iterable of hashable, \"...\" or None, optional\n         The dimension along which the correlation will be computed\n+    weights : DataArray, optional\n+        Array of weights.\n \n     Returns\n     -------\n@@ -1428,6 +1460,23 @@ def corr(da_a: T_DataArray, da_b: T_DataArray, dim: Dims = None) -> T_DataArray:\n     array([ 1., -1.,  1.])\n     Coordinates:\n       * space    (space) <U2 'IA' 'IL' 'IN'\n+    >>> weights = DataArray(\n+    ...     [4, 2, 1],\n+    ...     dims=(\"space\"),\n+    ...     coords=[\n+    ...         (\"space\", [\"IA\", \"IL\", \"IN\"]),\n+    ...     ],\n+    ... )\n+    >>> weights\n+    <xarray.DataArray (space: 3)>\n+    array([4, 2, 1])\n+    Coordinates:\n+      * space    (space) <U2 'IA' 'IL' 'IN'\n+    >>> xr.corr(da_a, da_b, dim=\"space\", weights=weights)\n+    <xarray.DataArray (time: 3)>\n+    array([-0.50240504, -0.83215028, -0.99057446])\n+    Coordinates:\n+      * time     (time) datetime64[ns] 2000-01-01 2000-01-02 2000-01-03\n     \"\"\"\n     from xarray.core.dataarray import DataArray\n \n@@ -1436,13 +1485,16 @@ def corr(da_a: T_DataArray, da_b: T_DataArray, dim: Dims = None) -> T_DataArray:\n             \"Only xr.DataArray is supported.\"\n             f\"Given {[type(arr) for arr in [da_a, da_b]]}.\"\n         )\n-\n-    return _cov_corr(da_a, da_b, dim=dim, method=\"corr\")\n+    if weights is not None:\n+        if not isinstance(weights, DataArray):\n+            raise TypeError(\"Only xr.DataArray is supported.\" f\"Given {type(weights)}.\")\n+    return _cov_corr(da_a, da_b, weights=weights, dim=dim, method=\"corr\")\n \n \n def _cov_corr(\n     da_a: T_DataArray,\n     da_b: T_DataArray,\n+    weights: T_DataArray | None = None,\n     dim: Dims = None,\n     ddof: int = 0,\n     method: Literal[\"cov\", \"corr\", None] = None,\n@@ -1458,28 +1510,46 @@ def _cov_corr(\n     valid_values = da_a.notnull() & da_b.notnull()\n     da_a = da_a.where(valid_values)\n     da_b = da_b.where(valid_values)\n-    valid_count = valid_values.sum(dim) - ddof\n \n     # 3. Detrend along the given dim\n-    demeaned_da_a = da_a - da_a.mean(dim=dim)\n-    demeaned_da_b = da_b - da_b.mean(dim=dim)\n+    if weights is not None:\n+        demeaned_da_a = da_a - da_a.weighted(weights).mean(dim=dim)\n+        demeaned_da_b = da_b - da_b.weighted(weights).mean(dim=dim)\n+    else:\n+        demeaned_da_a = da_a - da_a.mean(dim=dim)\n+        demeaned_da_b = da_b - da_b.mean(dim=dim)\n \n     # 4. Compute covariance along the given dim\n     # N.B. `skipna=True` is required or auto-covariance is computed incorrectly. E.g.\n     # Try xr.cov(da,da) for da = xr.DataArray([[1, 2], [1, np.nan]], dims=[\"x\", \"time\"])\n-    cov = (demeaned_da_a.conj() * demeaned_da_b).sum(\n-        dim=dim, skipna=True, min_count=1\n-    ) / (valid_count)\n+    if weights is not None:\n+        cov = (\n+            (demeaned_da_a.conj() * demeaned_da_b)\n+            .weighted(weights)\n+            .mean(dim=dim, skipna=True)\n+        )\n+    else:\n+        cov = (demeaned_da_a.conj() * demeaned_da_b).mean(dim=dim, skipna=True)\n \n     if method == \"cov\":\n-        return cov\n+        # Adjust covariance for degrees of freedom\n+        valid_count = valid_values.sum(dim)\n+        adjust = valid_count / (valid_count - ddof)\n+        # I think the cast is required because of `T_DataArray` + `T_Xarray` (would be\n+        # the same with `T_DatasetOrArray`)\n+        # https://github.com/pydata/xarray/pull/8384#issuecomment-1784228026\n+        return cast(T_DataArray, cov * adjust)\n \n     else:\n-        # compute std + corr\n-        da_a_std = da_a.std(dim=dim)\n-        da_b_std = da_b.std(dim=dim)\n+        # Compute std and corr\n+        if weights is not None:\n+            da_a_std = da_a.weighted(weights).std(dim=dim)\n+            da_b_std = da_b.weighted(weights).std(dim=dim)\n+        else:\n+            da_a_std = da_a.std(dim=dim)\n+            da_b_std = da_b.std(dim=dim)\n         corr = cov / (da_a_std * da_b_std)\n-        return corr\n+        return cast(T_DataArray, corr)\n \n \n def cross(\n",
  "test_patch": "diff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py\nindex 0d9b7c88ae1..68c20c4f51b 100644\n--- a/xarray/tests/test_computation.py\n+++ b/xarray/tests/test_computation.py\n@@ -1775,6 +1775,97 @@ def test_complex_cov() -> None:\n     assert abs(actual.item()) == 2\n \n \n+@pytest.mark.parametrize(\"weighted\", [True, False])\n+def test_bilinear_cov_corr(weighted: bool) -> None:\n+    # Test the bilinear properties of covariance and correlation\n+    da = xr.DataArray(\n+        np.random.random((3, 21, 4)),\n+        coords={\"time\": pd.date_range(\"2000-01-01\", freq=\"1D\", periods=21)},\n+        dims=(\"a\", \"time\", \"x\"),\n+    )\n+    db = xr.DataArray(\n+        np.random.random((3, 21, 4)),\n+        coords={\"time\": pd.date_range(\"2000-01-01\", freq=\"1D\", periods=21)},\n+        dims=(\"a\", \"time\", \"x\"),\n+    )\n+    dc = xr.DataArray(\n+        np.random.random((3, 21, 4)),\n+        coords={\"time\": pd.date_range(\"2000-01-01\", freq=\"1D\", periods=21)},\n+        dims=(\"a\", \"time\", \"x\"),\n+    )\n+    if weighted:\n+        weights = xr.DataArray(\n+            np.abs(np.random.random(4)),\n+            dims=(\"x\"),\n+        )\n+    else:\n+        weights = None\n+    k = np.random.random(1)[0]\n+\n+    # Test covariance properties\n+    assert_allclose(\n+        xr.cov(da + k, db, weights=weights), xr.cov(da, db, weights=weights)\n+    )\n+    assert_allclose(\n+        xr.cov(da, db + k, weights=weights), xr.cov(da, db, weights=weights)\n+    )\n+    assert_allclose(\n+        xr.cov(da + dc, db, weights=weights),\n+        xr.cov(da, db, weights=weights) + xr.cov(dc, db, weights=weights),\n+    )\n+    assert_allclose(\n+        xr.cov(da, db + dc, weights=weights),\n+        xr.cov(da, db, weights=weights) + xr.cov(da, dc, weights=weights),\n+    )\n+    assert_allclose(\n+        xr.cov(k * da, db, weights=weights), k * xr.cov(da, db, weights=weights)\n+    )\n+    assert_allclose(\n+        xr.cov(da, k * db, weights=weights), k * xr.cov(da, db, weights=weights)\n+    )\n+\n+    # Test correlation properties\n+    assert_allclose(\n+        xr.corr(da + k, db, weights=weights), xr.corr(da, db, weights=weights)\n+    )\n+    assert_allclose(\n+        xr.corr(da, db + k, weights=weights), xr.corr(da, db, weights=weights)\n+    )\n+    assert_allclose(\n+        xr.corr(k * da, db, weights=weights), xr.corr(da, db, weights=weights)\n+    )\n+    assert_allclose(\n+        xr.corr(da, k * db, weights=weights), xr.corr(da, db, weights=weights)\n+    )\n+\n+\n+def test_equally_weighted_cov_corr() -> None:\n+    # Test that equal weights for all values produces same results as weights=None\n+    da = xr.DataArray(\n+        np.random.random((3, 21, 4)),\n+        coords={\"time\": pd.date_range(\"2000-01-01\", freq=\"1D\", periods=21)},\n+        dims=(\"a\", \"time\", \"x\"),\n+    )\n+    db = xr.DataArray(\n+        np.random.random((3, 21, 4)),\n+        coords={\"time\": pd.date_range(\"2000-01-01\", freq=\"1D\", periods=21)},\n+        dims=(\"a\", \"time\", \"x\"),\n+    )\n+    #\n+    assert_allclose(\n+        xr.cov(da, db, weights=None), xr.cov(da, db, weights=xr.DataArray(1))\n+    )\n+    assert_allclose(\n+        xr.cov(da, db, weights=None), xr.cov(da, db, weights=xr.DataArray(2))\n+    )\n+    assert_allclose(\n+        xr.corr(da, db, weights=None), xr.corr(da, db, weights=xr.DataArray(1))\n+    )\n+    assert_allclose(\n+        xr.corr(da, db, weights=None), xr.corr(da, db, weights=xr.DataArray(2))\n+    )\n+\n+\n @requires_dask\n def test_vectorize_dask_new_output_dims() -> None:\n     # regression test for GH3574\n",
  "base_commit": "8ad0b832aa78a9100ffb2df85ea8997a52835505",
  "head_commit": "2a1467b98661a9ff234a0a28b1d6ed80bbf60452",
  "created_at": 1701877738000,
  "version": "2023.07",
  "duration_changes": "[{\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.13604999333620071, \"head\": 0.09505484253168106}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.201788067817688, \"head\": 0.1808565855026245}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11518612131476402, \"head\": 0.11068187281489372}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.11550180241465569, \"head\": 0.07514607161283493}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10879068449139595, \"head\": 0.075002521276474}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11765459924936295, \"head\": 0.08948246389627457}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.11221235990524292, \"head\": 0.07993068173527718}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10638101398944855, \"head\": 0.06977393850684166}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11358199641108513, \"head\": 0.08487607911229134}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.1202269159257412, \"head\": 0.08274424076080322}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12007149681448936, \"head\": 0.08945475146174431}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11452164873480797, \"head\": 0.08851386234164238}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10644163936376572, \"head\": 0.07626646757125854}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.1065584346652031, \"head\": 0.082093246281147}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11372123286128044, \"head\": 0.08436251431703568}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.10701783373951912, \"head\": 0.0820629671216011}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11339355260133743, \"head\": 0.08336618170142174}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11113036423921585, \"head\": 0.08258917927742004}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.1278350092470646, \"head\": 0.09267197921872139}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10491402447223663, \"head\": 0.07118715718388557}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11698376014828682, \"head\": 0.11420615762472153}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.1112477146089077, \"head\": 0.07926042750477791}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10715505853295326, \"head\": 0.06899196282029152}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.1203494630753994, \"head\": 0.0798254981637001}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06344610825181007, \"head\": 0.04780004546046257}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06379540264606476, \"head\": 0.046800363808870316}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.0628512054681778, \"head\": 0.04653026536107063}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06294231116771698, \"head\": 0.04659970477223396}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.0672244019806385, \"head\": 0.051815737038850784}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06778581440448761, \"head\": 0.05094540864229202}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06480837985873222, \"head\": 0.046921804547309875}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07168516144156456, \"head\": 0.05496090278029442}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07232404500246048, \"head\": 0.05481436476111412}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06966989114880562, \"head\": 0.04967422038316727}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06720269098877907, \"head\": 0.056601837277412415}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06864131614565849, \"head\": 0.0478227362036705}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06846367195248604, \"head\": 0.05005834996700287}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07367831841111183, \"head\": 0.05179312452673912}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.07020053640007973, \"head\": 0.0475318506360054}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06836061552166939, \"head\": 0.05184101313352585}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.0905410461127758, \"head\": 0.060600705444812775}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.0892709493637085, \"head\": 0.09556986391544342}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.156309612095356, \"head\": 0.15124500542879105}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.187656469643116, \"head\": 0.1832861788570881}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.26197465509176254, \"head\": 0.2554253078997135}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.043497003614902496, \"head\": 0.0371989868581295}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.061196859925985336, \"head\": 0.05605735257267952}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.020606808364391327, \"head\": 0.01909865438938141}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3077108599245548, \"head\": 1.421114768832922}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.09148695692420006, \"head\": 0.022625789046287537}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8894459567964077, \"head\": 1.965061791241169}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8268929608166218, \"head\": 0.8890184685587883}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9697625711560249, \"head\": 0.8977128490805626}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 1.0981969758868217, \"head\": 0.9017413258552551}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9052106738090515, \"head\": 0.9911793060600758}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12521206587553024, \"head\": 0.09419156983494759}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.25151193514466286, \"head\": 0.1960042230784893}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11540556326508522, \"head\": 0.07648965716362}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10273096710443497, \"head\": 0.06941185519099236}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.1065693162381649, \"head\": 0.07389724254608154}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11337980255484581, \"head\": 0.09322771057486534}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.11511485651135445, \"head\": 0.07920926064252853}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.11271122470498085, \"head\": 0.0728214681148529}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11080461367964745, \"head\": 0.08092686161398888}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11377651989459991, \"head\": 0.08006125688552856}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12107044830918312, \"head\": 0.08749715983867645}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11401113122701645, \"head\": 0.0821816734969616}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10410444438457489, \"head\": 0.07375772297382355}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10707676038146019, \"head\": 0.07680341973900795}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11605248972773552, \"head\": 0.08519304543733597}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11189479008316994, \"head\": 0.08058236539363861}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11690863221883774, \"head\": 0.0824446901679039}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11782888695597649, \"head\": 0.08150990679860115}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.1317346915602684, \"head\": 0.09242819249629974}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10672246664762497, \"head\": 0.06987626105546951}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.1110212504863739, \"head\": 0.08176656067371368}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10757434740662575, \"head\": 0.08732937276363373}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10155828669667244, \"head\": 0.07074436545372009}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11198049411177635, \"head\": 0.0816662535071373}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06334413215517998, \"head\": 0.04986349493265152}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.062497492879629135, \"head\": 0.05813939869403839}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06531259417533875, \"head\": 0.055511996150016785}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06569348275661469, \"head\": 0.05298005789518356}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06670993193984032, \"head\": 0.05377376824617386}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06696313992142677, \"head\": 0.05132855102419853}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06287737563252449, \"head\": 0.047038912773132324}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07082284986972809, \"head\": 0.055372145026922226}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07066697627305984, \"head\": 0.05528606101870537}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06787656247615814, \"head\": 0.049628693610429764}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06655104458332062, \"head\": 0.0479322150349617}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.0661633163690567, \"head\": 0.04775489494204521}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06550341472029686, \"head\": 0.04778313264250755}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.0693812184035778, \"head\": 0.052259910851716995}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.0646752156317234, \"head\": 0.04828197881579399}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06530995294451714, \"head\": 0.04802756756544113}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07381784170866013, \"head\": 0.056731823831796646}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.0786939486861229, \"head\": 0.08234871551394463}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.14531490951776505, \"head\": 0.14968884736299515}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.179489366710186, \"head\": 0.1929774284362793}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.24583814293146133, \"head\": 0.26322467625141144}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03838527947664261, \"head\": 0.04087434709072113}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05657050013542175, \"head\": 0.06549005210399628}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01905721426010132, \"head\": 0.023731518536806107}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3896605521440506, \"head\": 1.351625856012106}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.012852389365434647, \"head\": 0.09936658293008804}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.899234488606453, \"head\": 1.8757238909602165}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9856526702642441, \"head\": 0.8941536210477352}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9928027987480164, \"head\": 0.995763324201107}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9091341719031334, \"head\": 0.9985220395028591}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9061302095651627, \"head\": 0.8185524083673954}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12591606751084328, \"head\": 0.09405181556940079}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.2718227356672287, \"head\": 0.18140210956335068}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11190690100193024, \"head\": 0.07904738560318947}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10175597295165062, \"head\": 0.0694144107401371}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10458816587924957, \"head\": 0.07230424508452415}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11356299743056297, \"head\": 0.08650873228907585}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.1083206981420517, \"head\": 0.07668568566441536}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10115459933876991, \"head\": 0.06954453885555267}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11192695423960686, \"head\": 0.08207878842949867}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11515292525291443, \"head\": 0.07980682700872421}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.13932102546095848, \"head\": 0.08970022201538086}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.1230602115392685, \"head\": 0.07811279967427254}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10817544907331467, \"head\": 0.07091092690825462}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.11500038951635361, \"head\": 0.07469402253627777}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.12989535555243492, \"head\": 0.08313136920332909}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11656086891889572, \"head\": 0.08107909932732582}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11787769198417664, \"head\": 0.08126122131943703}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11938351392745972, \"head\": 0.08114148676395416}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12747398018836975, \"head\": 0.08957435563206673}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10268419981002808, \"head\": 0.06871946901082993}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11418312788009644, \"head\": 0.08452113345265388}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11009632796049118, \"head\": 0.07582082226872444}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10253463685512543, \"head\": 0.06826799362897873}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11298185214400291, \"head\": 0.0783359594643116}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06261464580893517, \"head\": 0.04764354228973389}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06406841427087784, \"head\": 0.04731475189328194}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06310151144862175, \"head\": 0.04732039198279381}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06660545617341995, \"head\": 0.04688316211104393}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06937264651060104, \"head\": 0.05440448597073555}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06829264760017395, \"head\": 0.05204157158732414}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06378019973635674, \"head\": 0.04727571830153465}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07314988970756531, \"head\": 0.055861786007881165}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07132383435964584, \"head\": 0.05569840595126152}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.0680120475590229, \"head\": 0.04986823350191116}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06932037696242332, \"head\": 0.04798593372106552}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.0681552104651928, \"head\": 0.04885422810912132}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.07183059304952621, \"head\": 0.04833908751606941}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07423670217394829, \"head\": 0.0522422194480896}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06830516085028648, \"head\": 0.048269469290971756}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.07005161792039871, \"head\": 0.048115406185388565}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.0748727098107338, \"head\": 0.05659778043627739}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08063801005482674, \"head\": 0.07966235280036926}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.17326244339346886, \"head\": 0.14415448158979416}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18406490236520767, \"head\": 0.18460798263549805}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.2519119344651699, \"head\": 0.2735636383295059}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03881482407450676, \"head\": 0.03898152709007263}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05961443483829498, \"head\": 0.06443941593170166}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018575236201286316, \"head\": 0.018422555178403854}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3205676041543484, \"head\": 1.2641535885632038}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.08161463215947151, \"head\": 0.10161036998033524}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 2.004029419273138, \"head\": 1.8967652469873428}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9037540256977081, \"head\": 0.889025554060936}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8771493397653103, \"head\": 1.0050940103828907}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9165445528924465, \"head\": 0.8200606517493725}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 1.059645552188158, \"head\": 0.9013398513197899}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12514247000217438, \"head\": 0.0925685241818428}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.23069309443235397, \"head\": 0.18983925879001617}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.1102130077779293, \"head\": 0.07666826620697975}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10142093896865845, \"head\": 0.07025771960616112}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10399821773171425, \"head\": 0.07410384342074394}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11282290145754814, \"head\": 0.0803913064301014}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10767905041575432, \"head\": 0.07407811284065247}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.0998762995004654, \"head\": 0.06691247597336769}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11032580211758614, \"head\": 0.07773053273558617}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11413158848881721, \"head\": 0.0781940221786499}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12007240206003189, \"head\": 0.08916603401303291}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11237925291061401, \"head\": 0.07770828902721405}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10427016019821167, \"head\": 0.07049818709492683}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10693782940506935, \"head\": 0.07386735826730728}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.1200847327709198, \"head\": 0.08160856366157532}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11156361550092697, \"head\": 0.07732539996504784}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11664019897580147, \"head\": 0.08087028563022614}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12112611532211304, \"head\": 0.08076537027955055}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12325260788202286, \"head\": 0.08914942666888237}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.1015515886247158, \"head\": 0.06831936538219452}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11282429471611977, \"head\": 0.08289891108870506}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10799899697303772, \"head\": 0.07501860335469246}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10631745308637619, \"head\": 0.0680108331143856}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11447316035628319, \"head\": 0.07892871648073196}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06387249380350113, \"head\": 0.051513802260160446}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06289300695061684, \"head\": 0.053886525332927704}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06273682415485382, \"head\": 0.047187402844429016}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06311636045575142, \"head\": 0.04828396439552307}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.0690385289490223, \"head\": 0.051278527826070786}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.068443164229393, \"head\": 0.05266672372817993}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06380089744925499, \"head\": 0.04985801503062248}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07211457937955856, \"head\": 0.05540167912840843}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07112782448530197, \"head\": 0.05675854906439781}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06875798478722572, \"head\": 0.04995284974575043}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06905057653784752, \"head\": 0.04988871142268181}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06934188678860664, \"head\": 0.0481838658452034}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06634661927819252, \"head\": 0.049166783690452576}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07075528427958488, \"head\": 0.052506223320961}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06619827449321747, \"head\": 0.04988311231136322}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06949161365628242, \"head\": 0.048154979944229126}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07454974949359894, \"head\": 0.05746852979063988}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08091280236840248, \"head\": 0.08497723937034607}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.15633230283856392, \"head\": 0.15140271186828613}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.1987573504447937, \"head\": 0.18704603239893913}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.26324230059981346, \"head\": 0.25390370935201645}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.037741392850875854, \"head\": 0.03985542058944702}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.054997339844703674, \"head\": 0.05967501550912857}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018354743719100952, \"head\": 0.01878530904650688}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3004983700811863, \"head\": 1.340347658842802}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.015148945152759552, \"head\": 0.09934442862868309}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.959094949066639, \"head\": 1.7776631638407707}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8187367096543312, \"head\": 0.8968558385968208}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 1.080253440886736, \"head\": 0.9204045906662941}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.8841738551855087, \"head\": 0.9763872139155865}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 1.0099528394639492, \"head\": 0.9132228679955006}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.1276143118739128, \"head\": 0.09306880459189415}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.29586510732769966, \"head\": 0.2410854585468769}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11146983876824379, \"head\": 0.0928441770374775}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10443077608942986, \"head\": 0.06898722052574158}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10519586876034737, \"head\": 0.07682233303785324}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11600785329937935, \"head\": 0.08805709332227707}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.12627729028463364, \"head\": 0.07783583179116249}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10452716052532196, \"head\": 0.07022344321012497}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.1146828681230545, \"head\": 0.08205818012356758}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11593213304877281, \"head\": 0.08029209822416306}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12407846376299858, \"head\": 0.08943603560328484}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.1146010234951973, \"head\": 0.07809831202030182}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10574095696210861, \"head\": 0.07050655782222748}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10763420909643173, \"head\": 0.07382530719041824}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11821382492780685, \"head\": 0.08325420692563057}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11782881245017052, \"head\": 0.07813137397170067}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11402478814125061, \"head\": 0.07998572662472725}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.1161549985408783, \"head\": 0.0798272043466568}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12656975165009499, \"head\": 0.0890594981610775}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10380562767386436, \"head\": 0.06716553494334221}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11568275094032288, \"head\": 0.0784449353814125}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11271710321307182, \"head\": 0.07414992898702621}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10322393104434013, \"head\": 0.06721054017543793}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11466532573103905, \"head\": 0.07784683257341385}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06304097548127174, \"head\": 0.046870436519384384}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06246553361415863, \"head\": 0.046421993523836136}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06239796429872513, \"head\": 0.04651440680027008}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.0626460537314415, \"head\": 0.046492986381053925}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.0675695352256298, \"head\": 0.05042146518826485}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.07288118079304695, \"head\": 0.05074407905340195}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06347775459289551, \"head\": 0.04649059474468231}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07091062143445015, \"head\": 0.054846782237291336}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07749761641025543, \"head\": 0.054582759737968445}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.0701298639178276, \"head\": 0.04987969622015953}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06832054257392883, \"head\": 0.04770530387759209}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06797317042946815, \"head\": 0.048011597245931625}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06863120943307877, \"head\": 0.04770779237151146}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07463399693369865, \"head\": 0.0518631748855114}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06696250289678574, \"head\": 0.04758691415190697}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06871291995048523, \"head\": 0.0475325882434845}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.0751415453851223, \"head\": 0.05610073730349541}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08885816857218742, \"head\": 0.07733748853206635}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.14785241708159447, \"head\": 0.14290140196681023}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18162020295858383, \"head\": 0.17927228286862373}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.24939749017357826, \"head\": 0.24479085206985474}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03852597996592522, \"head\": 0.03719661012291908}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05699743703007698, \"head\": 0.05417969822883606}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01854555308818817, \"head\": 0.01768152415752411}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3609368093311787, \"head\": 1.3253666013479233}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.015427809208631516, \"head\": 0.10018104687333107}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.984739489853382, \"head\": 1.9017229303717613}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9849559292197227, \"head\": 0.8081578500568867}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9120047762989998, \"head\": 0.9823943339288235}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.8899888060986996, \"head\": 0.8900950960814953}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9840608909726143, \"head\": 0.9960219822824001}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.1251588836312294, \"head\": 0.09355869889259338}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.20174682512879372, \"head\": 0.08987881988286972}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.1126682311296463, \"head\": 0.07718179002404213}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10348779708147049, \"head\": 0.06932787969708443}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10418268665671349, \"head\": 0.07541068270802498}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11027742922306061, \"head\": 0.08494187518954277}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10623225197196007, \"head\": 0.07856782898306847}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.098387960344553, \"head\": 0.06936701014637947}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.1089133471250534, \"head\": 0.07974613085389137}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11268540099263191, \"head\": 0.0791878029704094}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.1214965172111988, \"head\": 0.08962753787636757}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11278823763132095, \"head\": 0.07783210277557373}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10317380353808403, \"head\": 0.06969103962182999}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.1060226783156395, \"head\": 0.07506715133786201}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11346853896975517, \"head\": 0.0830393023788929}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11023351922631264, \"head\": 0.07761837914586067}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11478007212281227, \"head\": 0.08503039926290512}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11705630645155907, \"head\": 0.08293195441365242}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.1309329718351364, \"head\": 0.08967436477541924}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10661901533603668, \"head\": 0.06873501464724541}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11730743944644928, \"head\": 0.0797259658575058}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11248684674501419, \"head\": 0.07900537922978401}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10488811880350113, \"head\": 0.0686868354678154}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11579596623778343, \"head\": 0.08110034093260765}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06462525576353073, \"head\": 0.0476553849875927}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06415781378746033, \"head\": 0.04785957559943199}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06491170451045036, \"head\": 0.04688490182161331}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06518812850117683, \"head\": 0.04887901246547699}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06947822496294975, \"head\": 0.05298035591840744}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06893472000956535, \"head\": 0.05217590555548668}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06785336136817932, \"head\": 0.047516658902168274}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07468503341078758, \"head\": 0.055651869624853134}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07403542846441269, \"head\": 0.05703950300812721}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.07112153619527817, \"head\": 0.049274325370788574}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06808095052838326, \"head\": 0.04798141494393349}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.08359003067016602, \"head\": 0.048015229403972626}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06680025532841682, \"head\": 0.04885616898536682}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.0700218677520752, \"head\": 0.05235285684466362}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06643987819552422, \"head\": 0.05427198484539986}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.0729571171104908, \"head\": 0.04933447763323784}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.08056046068668365, \"head\": 0.05772429332137108}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.07893145084381104, \"head\": 0.08973212167620659}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.1641228348016739, \"head\": 0.14707568660378456}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.19131606444716454, \"head\": 0.17956358566880226}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.28664580732584, \"head\": 0.25050732120871544}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.046530865132808685, \"head\": 0.03808773308992386}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06298348307609558, \"head\": 0.06028718873858452}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.02155858278274536, \"head\": 0.017801016569137573}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.297419436275959, \"head\": 1.2716965936124325}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009304434061050415, \"head\": 0.09790949150919914}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.9851929545402527, \"head\": 1.8960997089743614}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8986511826515198, \"head\": 0.8773696236312389}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9967796131968498, \"head\": 0.9375900514423847}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 1.0005867928266525, \"head\": 1.0553321912884712}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9855318255722523, \"head\": 0.8967422246932983}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12838197126984596, \"head\": 0.09188279509544373}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.20666419714689255, \"head\": 0.2642279118299484}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11298184841871262, \"head\": 0.08201082423329353}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10401339828968048, \"head\": 0.07129200547933578}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.1111857257783413, \"head\": 0.07376858964562416}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11617707461118698, \"head\": 0.08480247110128403}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.11057376861572266, \"head\": 0.07675876468420029}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10263118147850037, \"head\": 0.06908291950821877}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11480986699461937, \"head\": 0.0800052285194397}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11708417534828186, \"head\": 0.0827474370598793}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12547743320465088, \"head\": 0.08896094188094139}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11598753556609154, \"head\": 0.08551587164402008}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10707347840070724, \"head\": 0.07185649499297142}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.11085404828190804, \"head\": 0.08339006826281548}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11822636052966118, \"head\": 0.0909258984029293}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11370773985981941, \"head\": 0.07873070985078812}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11609678342938423, \"head\": 0.08006374910473824}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11767681688070297, \"head\": 0.07924699410796165}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12783559039235115, \"head\": 0.09109343215823174}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.11506447941064835, \"head\": 0.06819784641265869}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11728234961628914, \"head\": 0.08174353837966919}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10959227755665779, \"head\": 0.07951603084802628}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10502715036273003, \"head\": 0.06673677265644073}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11475924402475357, \"head\": 0.07964453101158142}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06533633545041084, \"head\": 0.047893911600112915}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.0625724233686924, \"head\": 0.04634943604469299}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06276103854179382, \"head\": 0.046111758798360825}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06349312886595726, \"head\": 0.04647155478596687}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.0674816220998764, \"head\": 0.05089108645915985}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.0670485645532608, \"head\": 0.05420127883553505}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.0630713626742363, \"head\": 0.056473508477211}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07164411246776581, \"head\": 0.054712165147066116}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07204217091202736, \"head\": 0.05563141033053398}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.0683877095580101, \"head\": 0.04995068907737732}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.0669591836631298, \"head\": 0.04861042648553848}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06714285165071487, \"head\": 0.04807794839143753}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.07185031101107597, \"head\": 0.04941486194729805}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07377360761165619, \"head\": 0.05247751995921135}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06629370152950287, \"head\": 0.04747490957379341}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06834849715232849, \"head\": 0.04768769443035126}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07557909935712814, \"head\": 0.06502273678779602}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08236581832170486, \"head\": 0.08862673863768578}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.1532159149646759, \"head\": 0.15337025001645088}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18813573941588402, \"head\": 0.18581810593605042}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.27081863582134247, \"head\": 0.24784239754080772}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.04204868897795677, \"head\": 0.038187433034181595}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06376181542873383, \"head\": 0.06429991498589516}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.02086026594042778, \"head\": 0.018280047923326492}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3296359032392502, \"head\": 1.419634997844696}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.012481976300477982, \"head\": 0.00891895592212677}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.9856117330491543, \"head\": 1.870909083634615}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8946304805576801, \"head\": 1.0133913457393646}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.89744683355093, \"head\": 0.9777282290160656}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9938562326133251, \"head\": 0.8943042643368244}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.8978457935154438, \"head\": 0.9084821790456772}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12481291219592094, \"head\": 0.09499625116586685}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.24832579866051674, \"head\": 0.2172236479818821}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11330140382051468, \"head\": 0.07790157571434975}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10426418110728264, \"head\": 0.07023469731211662}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10355391353368759, \"head\": 0.07417135313153267}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11153268814086914, \"head\": 0.08830249682068825}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.1084541343152523, \"head\": 0.0789964310824871}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.09988773986697197, \"head\": 0.07004962861537933}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.12053848057985306, \"head\": 0.08065497875213623}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.1160520389676094, \"head\": 0.0794423446059227}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12596659734845161, \"head\": 0.08876705914735794}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11766966059803963, \"head\": 0.08110060915350914}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10698835551738739, \"head\": 0.07668663933873177}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.11011821031570435, \"head\": 0.08410567790269852}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.12173691764473915, \"head\": 0.08628518879413605}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.1181078776717186, \"head\": 0.0810774564743042}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11895527690649033, \"head\": 0.08190368115901947}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12064509838819504, \"head\": 0.08125339075922966}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12923958152532578, \"head\": 0.09178781509399414}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10687396302819252, \"head\": 0.06822305917739868}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11643696948885918, \"head\": 0.08014742657542229}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11093607172369957, \"head\": 0.07639362663030624}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10304684564471245, \"head\": 0.06954123079776764}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11259537190198898, \"head\": 0.08072199299931526}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.0631764642894268, \"head\": 0.04801972955465317}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06342864781618118, \"head\": 0.047748394310474396}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06293806433677673, \"head\": 0.047687944024801254}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06333295628428459, \"head\": 0.047400690615177155}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06733953580260277, \"head\": 0.05220915377140045}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.0678727887570858, \"head\": 0.051937371492385864}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.062966488301754, \"head\": 0.04730915278196335}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07092249020934105, \"head\": 0.055699672549963}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07195089012384415, \"head\": 0.05563860759139061}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.07150512933731079, \"head\": 0.05032067373394966}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.07134225964546204, \"head\": 0.048703983426094055}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06728532910346985, \"head\": 0.0489322729408741}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06590355560183525, \"head\": 0.04932961240410805}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07031300663948059, \"head\": 0.053960029035806656}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.0661570318043232, \"head\": 0.04913359507918358}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.0689040869474411, \"head\": 0.04977508634328842}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07523185387253761, \"head\": 0.0572335347533226}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08048864081501961, \"head\": 0.07920466363430023}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.15102438256144524, \"head\": 0.15119801089167595}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18768073618412018, \"head\": 0.18527308106422424}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.25462038069963455, \"head\": 0.25099633261561394}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03886393457651138, \"head\": 0.03798326104879379}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05996895581483841, \"head\": 0.05916975811123848}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018659915775060654, \"head\": 0.018726374953985214}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.406874168664217, \"head\": 1.403447337448597}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.010230816900730133, \"head\": 0.00947880744934082}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8817221857607365, \"head\": 1.8835427090525627}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9002275541424751, \"head\": 0.9928962327539921}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8983263820409775, \"head\": 0.8184482529759407}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9919969849288464, \"head\": 1.0002842955291271}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9003072865307331, \"head\": 0.9825553447008133}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12752362713217735, \"head\": 0.09405174106359482}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.23648271337151527, \"head\": 0.1649114266037941}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.10981093347072601, \"head\": 0.0759187825024128}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10430380702018738, \"head\": 0.06848027557134628}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.1053294762969017, \"head\": 0.07178954780101776}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11391116306185722, \"head\": 0.08162286132574081}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.11055370047688484, \"head\": 0.07605886831879616}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10173825174570084, \"head\": 0.0685189999639988}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11410477757453918, \"head\": 0.07872949168086052}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11607066169381142, \"head\": 0.07880881056189537}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12289335951209068, \"head\": 0.08692442998290062}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11459428444504738, \"head\": 0.07847237959504128}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10671281442046165, \"head\": 0.07075272873044014}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10981585457921028, \"head\": 0.07451890036463737}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11709706112742424, \"head\": 0.08279630169272423}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11413446068763733, \"head\": 0.08842088654637337}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11894821003079414, \"head\": 0.0919400043785572}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11845838278532028, \"head\": 0.08132116496562958}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12606755644083023, \"head\": 0.09045974910259247}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10224984586238861, \"head\": 0.06810909882187843}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11390909552574158, \"head\": 0.0793112963438034}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10847542434930801, \"head\": 0.07527174800634384}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10572955757379532, \"head\": 0.0681641735136509}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11280423030257225, \"head\": 0.07870050519704819}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06291539594531059, \"head\": 0.047446779906749725}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06306257471442223, \"head\": 0.04685357213020325}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06293065473437309, \"head\": 0.04692455753684044}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06428152695298195, \"head\": 0.04698191583156586}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06685883179306984, \"head\": 0.051052313297986984}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06671478971838951, \"head\": 0.05118381977081299}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.062334854155778885, \"head\": 0.047122757881879807}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07094846293330193, \"head\": 0.05553989112377167}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07106616348028183, \"head\": 0.055576927959918976}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06927099823951721, \"head\": 0.05032353848218918}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06713521108031273, \"head\": 0.048265889286994934}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06867963448166847, \"head\": 0.04847902059555054}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06819624453783035, \"head\": 0.048352062702178955}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07103611901402473, \"head\": 0.052480895072221756}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06732829660177231, \"head\": 0.04800485074520111}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06789709627628326, \"head\": 0.0480680987238884}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07575657218694687, \"head\": 0.05676771700382233}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08217892795801163, \"head\": 0.07917715236544609}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.154936071485281, \"head\": 0.14766277745366096}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.2031066194176674, \"head\": 0.18204990774393082}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.28349536284804344, \"head\": 0.25641363114118576}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.038646385073661804, \"head\": 0.03921562805771828}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05968670919537544, \"head\": 0.06132381781935692}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018348097801208496, \"head\": 0.018211729824543}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.4207004979252815, \"head\": 1.3928091824054718}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009082827717065811, \"head\": 0.009473487734794617}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.9944812320172787, \"head\": 1.8880680426955223}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9001644104719162, \"head\": 0.9080066457390785}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9900178946554661, \"head\": 0.9785835556685925}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9833925664424896, \"head\": 0.9234855845570564}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.8902704045176506, \"head\": 0.8998626209795475}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.130514457821846, \"head\": 0.10419157519936562}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.22359642758965492, \"head\": 0.1696886532008648}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.1214493066072464, \"head\": 0.07794053480029106}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.09994428232312202, \"head\": 0.07034622505307198}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.11224265769124031, \"head\": 0.07488614320755005}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.112831711769104, \"head\": 0.08369128033518791}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10783981531858444, \"head\": 0.07782077416777611}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10097770392894745, \"head\": 0.07001615315675735}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11142779886722565, \"head\": 0.08023972064256668}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11307696998119354, \"head\": 0.08068357780575752}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.1202632375061512, \"head\": 0.08899981528520584}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11299006640911102, \"head\": 0.08005567640066147}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10604937002062798, \"head\": 0.07209005206823349}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10941917449235916, \"head\": 0.0775621049106121}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11572366207838058, \"head\": 0.08662030845880508}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11128324642777443, \"head\": 0.07912960276007652}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11590324714779854, \"head\": 0.08130143582820892}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11593692377209663, \"head\": 0.08233797922730446}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12373466417193413, \"head\": 0.09180318936705589}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10087260976433754, \"head\": 0.06875432282686234}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11249060183763504, \"head\": 0.07983224838972092}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10804255679249763, \"head\": 0.07612811028957367}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10157976672053337, \"head\": 0.06868356838822365}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11171093583106995, \"head\": 0.08005987107753754}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.062142644077539444, \"head\": 0.047673266381025314}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06193489208817482, \"head\": 0.0474366620182991}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06214471906423569, \"head\": 0.046919677406549454}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.062080979347229004, \"head\": 0.047329921275377274}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06638232246041298, \"head\": 0.05106445401906967}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06608546897768974, \"head\": 0.051694851368665695}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.062458187341690063, \"head\": 0.046996861696243286}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07059630006551743, \"head\": 0.055577993392944336}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07085588946938515, \"head\": 0.05511258542537689}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06691743060946465, \"head\": 0.04970001429319382}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06536301597952843, \"head\": 0.04817039147019386}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06591753289103508, \"head\": 0.048133209347724915}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.0653710663318634, \"head\": 0.04843593016266823}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07009915634989738, \"head\": 0.05236143246293068}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.0652109868824482, \"head\": 0.047881197184324265}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06556538864970207, \"head\": 0.04828624799847603}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07375511899590492, \"head\": 0.05702250823378563}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.07886870205402374, \"head\": 0.07980161905288696}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.1512645222246647, \"head\": 0.14824436232447624}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18050642684102058, \"head\": 0.1842840015888214}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.24428705126047134, \"head\": 0.2500268593430519}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03777402639389038, \"head\": 0.039236802607774734}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.061778027564287186, \"head\": 0.05845844745635986}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01882672682404518, \"head\": 0.019160494208335876}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.256647128611803, \"head\": 1.2959235273301601}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009318303316831589, \"head\": 0.009070329368114471}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.884526900947094, \"head\": 1.8920328095555305}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8992257937788963, \"head\": 0.8977534025907516}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9979087822139263, \"head\": 0.992787916213274}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9971551336348057, \"head\": 0.9982888959348202}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.997543103992939, \"head\": 0.8165488988161087}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.13107401132583618, \"head\": 0.09257975965738297}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.28707418218255043, \"head\": 0.19247836247086525}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.1157543770968914, \"head\": 0.07638812065124512}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10905037075281143, \"head\": 0.07186124473810196}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.11302287131547928, \"head\": 0.0750075913965702}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.12248095497488976, \"head\": 0.08006816729903221}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.11279699578881264, \"head\": 0.07578803971409798}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.114975955337286, \"head\": 0.06846233457326889}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11363256722688675, \"head\": 0.07994154095649719}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11461981758475304, \"head\": 0.07968233525753021}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12236836180090904, \"head\": 0.08788296580314636}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11374421045184135, \"head\": 0.07822367176413536}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10600683838129044, \"head\": 0.07090873271226883}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10812373459339142, \"head\": 0.0758342370390892}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.1173381432890892, \"head\": 0.08318435028195381}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.1175488717854023, \"head\": 0.07860708981752396}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.1147465705871582, \"head\": 0.08101151511073112}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11873932182788849, \"head\": 0.0801837258040905}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.13328171521425247, \"head\": 0.09060485288500786}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.12059886753559113, \"head\": 0.06832341104745865}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11710095033049583, \"head\": 0.08044836297631264}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10850764065980911, \"head\": 0.07483693957328796}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10219717398285866, \"head\": 0.06774415820837021}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11243785172700882, \"head\": 0.07892439886927605}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.062112849205732346, \"head\": 0.04722083359956741}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06408625096082687, \"head\": 0.0469830147922039}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.062223926186561584, \"head\": 0.047083985060453415}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06320985034108162, \"head\": 0.04682549089193344}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06688547879457474, \"head\": 0.05075227469205856}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06840245425701141, \"head\": 0.05085138604044914}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06279751658439636, \"head\": 0.04722938314080238}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07042378187179565, \"head\": 0.055754404515028}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.0710257962346077, \"head\": 0.0556328259408474}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06763240322470665, \"head\": 0.049890827387571335}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06596507504582405, \"head\": 0.04804042726755142}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06623776257038116, \"head\": 0.04861756041646004}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06607375666499138, \"head\": 0.04910734295845032}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07033901289105415, \"head\": 0.05265762284398079}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.0660632848739624, \"head\": 0.04891011118888855}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.0658378005027771, \"head\": 0.04852038994431496}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07401686906814575, \"head\": 0.057673994451761246}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08031045645475388, \"head\": 0.07975906878709793}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.15694870054721832, \"head\": 0.15223880857229233}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18427778035402298, \"head\": 0.18427826091647148}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.2595326155424118, \"head\": 0.2534676305949688}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03885278105735779, \"head\": 0.039696741849184036}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06231597438454628, \"head\": 0.06050519645214081}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01968899369239807, \"head\": 0.018578078597784042}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.4307280406355858, \"head\": 1.285131361335516}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.0157228522002697, \"head\": 0.01113918051123619}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.9761353470385075, \"head\": 1.8834573738276958}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8947891816496849, \"head\": 0.8924582153558731}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 1.0118531212210655, \"head\": 0.9027786739170551}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.7958385981619358, \"head\": 0.99543896317482}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9920857511460781, \"head\": 0.8069709166884422}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.1249438039958477, \"head\": 0.09304104372859001}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.22092314064502716, \"head\": 0.2418537549674511}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11214325949549675, \"head\": 0.08193572983145714}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10166620835661888, \"head\": 0.07285033166408539}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10413449257612228, \"head\": 0.07457641884684563}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11405789852142334, \"head\": 0.08180724829435349}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10898986086249352, \"head\": 0.07732823863625526}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10108612850308418, \"head\": 0.07031264156103134}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.10960578918457031, \"head\": 0.0853152871131897}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11461464315652847, \"head\": 0.08383984118700027}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12547635659575462, \"head\": 0.09247299656271935}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11594389006495476, \"head\": 0.08412347361445427}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10686324164271355, \"head\": 0.0753425844013691}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10833889618515968, \"head\": 0.0796324610710144}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.1146066002547741, \"head\": 0.08679337799549103}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11237570643424988, \"head\": 0.08097315207123756}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.12050778418779373, \"head\": 0.0900995247066021}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12229156494140625, \"head\": 0.08651991188526154}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.1253763996064663, \"head\": 0.09554498270154}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10233588889241219, \"head\": 0.07019243389368057}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.13277363032102585, \"head\": 0.08263226971030235}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11942274868488312, \"head\": 0.07854148000478745}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10284952446818352, \"head\": 0.07041832059621811}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11670899391174316, \"head\": 0.0808081217110157}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.0655580461025238, \"head\": 0.049618303775787354}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06979230791330338, \"head\": 0.04755452647805214}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06478827819228172, \"head\": 0.047701310366392136}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06529682502150536, \"head\": 0.047984588891267776}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.07050394266843796, \"head\": 0.05225270986557007}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.07098410651087761, \"head\": 0.05574231222271919}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06600963324308395, \"head\": 0.047981247305870056}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07500745356082916, \"head\": 0.08132070675492287}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.0740840695798397, \"head\": 0.06576403975486755}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.07183767110109329, \"head\": 0.051402680575847626}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.0682523213326931, \"head\": 0.04920966550707817}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.0671800747513771, \"head\": 0.04928014054894447}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06952530890703201, \"head\": 0.04960682988166809}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07565254718065262, \"head\": 0.05345664173364639}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.07157434895634651, \"head\": 0.048377592116594315}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06589701399207115, \"head\": 0.050271619111299515}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07445736601948738, \"head\": 0.058944232761859894}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08463757857680321, \"head\": 0.08895186334848404}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.15693270415067673, \"head\": 0.1601015403866768}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.20881964266300201, \"head\": 0.18341880291700363}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.26523324474692345, \"head\": 0.24853204935789108}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03817996755242348, \"head\": 0.03793582320213318}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05828949809074402, \"head\": 0.057868022471666336}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018469493836164474, \"head\": 0.018536347895860672}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3929707780480385, \"head\": 1.259833686053753}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009584110230207443, \"head\": 0.08683580532670021}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.976878497749567, \"head\": 1.8804282769560814}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8794571235775948, \"head\": 0.8135479167103767}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9259110689163208, \"head\": 0.8910728730261326}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 1.0685473531484604, \"head\": 0.9061047807335854}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9963264651596546, \"head\": 0.815383780747652}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.1295819692313671, \"head\": 0.0914321281015873}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.2871003746986389, \"head\": 0.174387589097023}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11225484684109688, \"head\": 0.07587956264615059}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10390443727374077, \"head\": 0.06898043677210808}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10728778690099716, \"head\": 0.07859575375914574}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11512451246380806, \"head\": 0.08043093234300613}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10958167910575867, \"head\": 0.07436243817210197}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10172244533896446, \"head\": 0.06781290099024773}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11595379188656807, \"head\": 0.08214016631245613}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11991893872618675, \"head\": 0.07686212658882141}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.128707405179739, \"head\": 0.08746542036533356}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.1267942264676094, \"head\": 0.07765469327569008}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.11417719349265099, \"head\": 0.06980481743812561}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.11740205436944962, \"head\": 0.07388049364089966}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.12793861329555511, \"head\": 0.08135813474655151}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.12212393432855606, \"head\": 0.0784369707107544}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.12386386469006538, \"head\": 0.07959362491965294}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12076137214899063, \"head\": 0.08182840049266815}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.13259964436292648, \"head\": 0.08880354836583138}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10583016648888588, \"head\": 0.06639981269836426}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11937511712312698, \"head\": 0.07824485003948212}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11503520607948303, \"head\": 0.07478880882263184}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10743323341012001, \"head\": 0.06862745434045792}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.12046941369771957, \"head\": 0.0773531049489975}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06616545468568802, \"head\": 0.04754629731178284}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06731615960597992, \"head\": 0.04682007059454918}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06535128876566887, \"head\": 0.04732717573642731}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06718993186950684, \"head\": 0.04918135702610016}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.07135971263051033, \"head\": 0.05447995290160179}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.07093624770641327, \"head\": 0.05224647372961044}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06831472739577293, \"head\": 0.047031596302986145}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07342858240008354, \"head\": 0.05484076589345932}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.0708358995616436, \"head\": 0.057613957673311234}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06823674216866493, \"head\": 0.05568941310048103}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.0669650211930275, \"head\": 0.04851442947983742}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06748359650373459, \"head\": 0.048737507313489914}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06975304335355759, \"head\": 0.04783221706748009}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07206147536635399, \"head\": 0.05265782028436661}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.0666327215731144, \"head\": 0.0477895513176918}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06857189908623695, \"head\": 0.04828668758273125}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07876105979084969, \"head\": 0.055979128926992416}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08307034522294998, \"head\": 0.07832533121109009}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.1532120481133461, \"head\": 0.14726097509264946}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.190085731446743, \"head\": 0.17757554352283478}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.2640751600265503, \"head\": 0.26991159841418266}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.04089270904660225, \"head\": 0.03698429465293884}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06285196915268898, \"head\": 0.05485748499631882}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.020475033670663834, \"head\": 0.017975635826587677}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.413898527622223, \"head\": 1.3099937178194523}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009688075631856918, \"head\": 0.008840233087539673}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8896889351308346, \"head\": 2.075824875384569}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9130460694432259, \"head\": 0.8988488540053368}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 1.0003141835331917, \"head\": 0.8909523338079453}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9036866202950478, \"head\": 0.9161190427839756}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9904835000634193, \"head\": 1.0948998853564262}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12505652755498886, \"head\": 0.09687533974647522}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.2997663803398609, \"head\": 0.18741163238883018}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11447928100824356, \"head\": 0.0781838595867157}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10348370671272278, \"head\": 0.06983765587210655}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10716009885072708, \"head\": 0.07321714609861374}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.1184190884232521, \"head\": 0.08367714658379555}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.11473789811134338, \"head\": 0.07769978791475296}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10539735108613968, \"head\": 0.0706818476319313}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.12131154537200928, \"head\": 0.07894471660256386}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.12875377014279366, \"head\": 0.07895002514123917}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.13023053854703903, \"head\": 0.08632205799221992}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.12044791132211685, \"head\": 0.07815651223063469}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10801321268081665, \"head\": 0.06997407600283623}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.11097832769155502, \"head\": 0.0797528550028801}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.1278349757194519, \"head\": 0.08367908746004105}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.1190711073577404, \"head\": 0.08046340197324753}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.12297618761658669, \"head\": 0.07954485341906548}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11952564865350723, \"head\": 0.07984882965683937}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12652785331010818, \"head\": 0.09065074473619461}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10343725979328156, \"head\": 0.06797048076987267}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11702004820108414, \"head\": 0.0795217789709568}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11414241790771484, \"head\": 0.07612485438585281}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10529156401753426, \"head\": 0.07197356596589088}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11450852453708649, \"head\": 0.08232206851243973}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.07658594101667404, \"head\": 0.048295773565769196}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.07822312787175179, \"head\": 0.04769545793533325}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06298133358359337, \"head\": 0.04750347509980202}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06342053413391113, \"head\": 0.04798666760325432}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06696104258298874, \"head\": 0.05129016935825348}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06918172910809517, \"head\": 0.05134771764278412}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06311245635151863, \"head\": 0.04701688885688782}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07143554836511612, \"head\": 0.05503411218523979}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07094045355916023, \"head\": 0.05964023992419243}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06822383031249046, \"head\": 0.054328348487615585}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.07997263967990875, \"head\": 0.05352542921900749}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06748529896140099, \"head\": 0.04786079004406929}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06773896887898445, \"head\": 0.049307018518447876}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07214856520295143, \"head\": 0.052153412252664566}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06914191320538521, \"head\": 0.04979206994175911}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.0681118555366993, \"head\": 0.0480673685669899}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07634278386831284, \"head\": 0.05683327466249466}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.07954414188861847, \"head\": 0.08166532218456268}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.186089426279068, \"head\": 0.14594917744398117}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.1913178563117981, \"head\": 0.19905606284737587}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.2572224512696266, \"head\": 0.2566591240465641}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.048944927752017975, \"head\": 0.03878900781273842}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.0574486069381237, \"head\": 0.05926603823900223}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.02117156609892845, \"head\": 0.019031904637813568}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.2977959252893925, \"head\": 1.3593957461416721}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.11860888451337814, \"head\": 0.07451663911342621}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8721670992672443, \"head\": 1.890845324844122}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9841716848313808, \"head\": 0.8987387306988239}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8963442854583263, \"head\": 0.9240189604461193}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.8930034153163433, \"head\": 0.970220860093832}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.900545421987772, \"head\": 0.9099252372980118}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12723996117711067, \"head\": 0.09421682730317116}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.21715737879276276, \"head\": 0.17989328876137733}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11057087033987045, \"head\": 0.07862765341997147}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10148787498474121, \"head\": 0.06964129954576492}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10320575162768364, \"head\": 0.07263630628585815}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11335897445678711, \"head\": 0.08037488907575607}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10672998800873756, \"head\": 0.07845263183116913}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.09866852685809135, \"head\": 0.06989413872361183}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11017745360732079, \"head\": 0.080069899559021}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.1121588870882988, \"head\": 0.07866145297884941}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12070483341813087, \"head\": 0.08672595024108887}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.12109749391674995, \"head\": 0.07824942842125893}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10549428686499596, \"head\": 0.07038597017526627}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10928381234407425, \"head\": 0.07587660476565361}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11635421216487885, \"head\": 0.08406040444970131}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.1286819837987423, \"head\": 0.07843562215566635}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.12467583268880844, \"head\": 0.08341940119862556}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12228569760918617, \"head\": 0.08198624476790428}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12305891141295433, \"head\": 0.09329038485884666}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10040869563817978, \"head\": 0.073329858481884}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11152546852827072, \"head\": 0.08757820352911949}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.1064889058470726, \"head\": 0.07602513208985329}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10069218650460243, \"head\": 0.06964041665196419}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11073078215122223, \"head\": 0.08508263528347015}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.061791252344846725, \"head\": 0.049574460834264755}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.061576638370752335, \"head\": 0.046338457614183426}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06163483113050461, \"head\": 0.04683363437652588}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.0625278577208519, \"head\": 0.04797820746898651}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06671328842639923, \"head\": 0.05303462967276573}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06672671809792519, \"head\": 0.05162358656525612}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06233889237046242, \"head\": 0.04688098654150963}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07049882411956787, \"head\": 0.0550922192633152}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.06996918097138405, \"head\": 0.05556940287351608}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06638234853744507, \"head\": 0.04996373504400253}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06557108089327812, \"head\": 0.047821011394262314}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06575847044587135, \"head\": 0.04943377524614334}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06514673307538033, \"head\": 0.049137700349092484}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.06961691752076149, \"head\": 0.0526202991604805}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06492375582456589, \"head\": 0.04845220223069191}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06517763063311577, \"head\": 0.047741230577230453}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07428130507469177, \"head\": 0.05688095465302467}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.07871051505208015, \"head\": 0.08115220069885254}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.14618618786334991, \"head\": 0.15583199262619019}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18676118925213814, \"head\": 0.22851497307419777}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.24857326969504356, \"head\": 0.24809223413467407}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03861309587955475, \"head\": 0.038634367287158966}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06174113601446152, \"head\": 0.05744938552379608}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.020515985786914825, \"head\": 0.018324732780456543}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.336001493036747, \"head\": 1.3209351934492588}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.09563355520367622, \"head\": 0.019421041011810303}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8065860904753208, \"head\": 1.9820562601089478}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 1.0048831962049007, \"head\": 0.8203054443001747}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8167580217123032, \"head\": 0.8996259272098541}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9714193567633629, \"head\": 1.0977919213473797}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9068028591573238, \"head\": 0.8952690623700619}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12487891688942909, \"head\": 0.09527318179607391}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.2092919945716858, \"head\": 0.22823713719844818}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.1099223792552948, \"head\": 0.07731446251273155}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10103869810700417, \"head\": 0.06894716247916222}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.1034165732562542, \"head\": 0.0775013230741024}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11638722941279411, \"head\": 0.08497197180986404}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10828091576695442, \"head\": 0.07641444727778435}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.0994487777352333, \"head\": 0.0693780854344368}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11226444691419601, \"head\": 0.08003392443060875}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.1142125055193901, \"head\": 0.08091215044260025}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12292025983333588, \"head\": 0.08727104589343071}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11422132700681686, \"head\": 0.07825908809900284}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10409948602318764, \"head\": 0.07002881914377213}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.11017762124538422, \"head\": 0.08043475076556206}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11425634101033211, \"head\": 0.08755328133702278}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11051533743739128, \"head\": 0.07780972495675087}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11276480555534363, \"head\": 0.0829114057123661}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11635752767324448, \"head\": 0.08423839136958122}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12492631375789642, \"head\": 0.0903424397110939}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10012376680970192, \"head\": 0.06830907613039017}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.1111907847225666, \"head\": 0.08412598073482513}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10748373717069626, \"head\": 0.0932096540927887}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10066881403326988, \"head\": 0.07704063504934311}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11007419973611832, \"head\": 0.07946405187249184}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.061947327107191086, \"head\": 0.04947854205965996}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06142132729291916, \"head\": 0.04867234453558922}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06197484955191612, \"head\": 0.048471350222826004}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06267028674483299, \"head\": 0.04992606118321419}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.067809347063303, \"head\": 0.05215105786919594}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.0666998028755188, \"head\": 0.05283142253756523}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06250744313001633, \"head\": 0.04856864735484123}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07006647437810898, \"head\": 0.0573219396173954}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07045088335871696, \"head\": 0.057752031832933426}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06737419962882996, \"head\": 0.053219024091959}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.0668981559574604, \"head\": 0.05261949822306633}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06617337092757225, \"head\": 0.04913239926099777}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06585251912474632, \"head\": 0.054446011781692505}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07038293033838272, \"head\": 0.05259828642010689}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.0652531050145626, \"head\": 0.051564645022153854}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06945472955703735, \"head\": 0.04797841235995293}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.08253393694758415, \"head\": 0.057688500732183456}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08368075266480446, \"head\": 0.09175695106387138}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.1465005986392498, \"head\": 0.15729569643735886}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.1843985952436924, \"head\": 0.19033874943852425}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.2522991672158241, \"head\": 0.28636886551976204}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.04071950167417526, \"head\": 0.04070650413632393}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.058678824454545975, \"head\": 0.0620306171476841}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018794886767864227, \"head\": 0.021102476865053177}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.382271010428667, \"head\": 1.3771530203521252}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009793564677238464, \"head\": 0.011102288961410522}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.949195958673954, \"head\": 1.9860124997794628}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9314955398440361, \"head\": 0.9032675363123417}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.862540178000927, \"head\": 0.888873677700758}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.928086556494236, \"head\": 0.9996259324252605}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9894206412136555, \"head\": 0.8008616790175438}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12491679564118385, \"head\": 0.09326811507344246}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.1997879110276699, \"head\": 0.2646051459014416}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.1078459806740284, \"head\": 0.0819128155708313}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.09903235733509064, \"head\": 0.07439785823225975}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10151971131563187, \"head\": 0.08084229379892349}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.10995961725711823, \"head\": 0.09181582182645798}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10543426871299744, \"head\": 0.07727120816707611}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.09918737411499023, \"head\": 0.06972211971879005}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.10924167558550835, \"head\": 0.08091424033045769}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11067647486925125, \"head\": 0.0797516442835331}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.1192343607544899, \"head\": 0.09032155945897102}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11131178215146065, \"head\": 0.08327258378267288}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.1024094894528389, \"head\": 0.07412966713309288}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10536268353462219, \"head\": 0.07707656174898148}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11405178532004356, \"head\": 0.08584816008806229}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11040851846337318, \"head\": 0.08195420727133751}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11304854229092598, \"head\": 0.08467579632997513}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11448512598872185, \"head\": 0.0817110687494278}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12618805840611458, \"head\": 0.09381221607327461}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10281529650092125, \"head\": 0.07099930197000504}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11297954618930817, \"head\": 0.08169487863779068}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11196647211909294, \"head\": 0.07579918578267097}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10082221776247025, \"head\": 0.06891517341136932}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11204306781291962, \"head\": 0.08026568964123726}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06410650908946991, \"head\": 0.047390375286340714}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.061793435364961624, \"head\": 0.046952325850725174}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.061718132346868515, \"head\": 0.04697888717055321}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06219589710235596, \"head\": 0.047119878232479095}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06624198332428932, \"head\": 0.05208927392959595}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06594904884696007, \"head\": 0.05106943100690842}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06159388646483421, \"head\": 0.047597914934158325}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.06978050991892815, \"head\": 0.055398158729076385}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07001929730176926, \"head\": 0.05521707236766815}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06673728674650192, \"head\": 0.04977273568511009}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06516145542263985, \"head\": 0.04791394993662834}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06570877507328987, \"head\": 0.048008475452661514}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06532091274857521, \"head\": 0.047784093767404556}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.06983738392591476, \"head\": 0.05225928872823715}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06543013080954552, \"head\": 0.04788785055279732}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06561312451958656, \"head\": 0.049165401607751846}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07385056838393211, \"head\": 0.05978444591164589}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.08491204679012299, \"head\": 0.08230936527252197}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.1545621082186699, \"head\": 0.15012581273913383}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.20020228251814842, \"head\": 0.1973785161972046}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.2625228688120842, \"head\": 0.2560714855790138}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03932960331439972, \"head\": 0.03907890245318413}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06596093252301216, \"head\": 0.05957328900694847}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.018436305224895477, \"head\": 0.019441604614257812}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.2677449993789196, \"head\": 1.2849233485758305}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.00900246948003769, \"head\": 0.08797962591052055}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8948914408683777, \"head\": 1.8902575932443142}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.9939351677894592, \"head\": 0.8132929839193821}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8977069854736328, \"head\": 0.916488628834486}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.9966797791421413, \"head\": 0.9799361824989319}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9188694469630718, \"head\": 1.0017222315073013}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.1281333602964878, \"head\": 0.098732128739357}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.1683705523610115, \"head\": 0.1901463232934475}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11145156621932983, \"head\": 0.08038504794239998}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10301831737160683, \"head\": 0.06952602043747902}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10571078211069107, \"head\": 0.07865790650248528}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11456681042909622, \"head\": 0.08074825629591942}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10855452343821526, \"head\": 0.08002765104174614}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10165882110595703, \"head\": 0.07054128870368004}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.1182878240942955, \"head\": 0.07874668389558792}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11871087923645973, \"head\": 0.09062323719263077}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12372803688049316, \"head\": 0.0921129435300827}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11887436732649803, \"head\": 0.09377430751919746}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10544862225651741, \"head\": 0.07698510214686394}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10743875429034233, \"head\": 0.07469648867845535}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11654213443398476, \"head\": 0.08236027881503105}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.1121695414185524, \"head\": 0.07778850942850113}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.1175154335796833, \"head\": 0.08079644665122032}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12010094150900841, \"head\": 0.0825095884501934}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12519583478569984, \"head\": 0.09007709100842476}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10130365192890167, \"head\": 0.06735995784401894}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11359906569123268, \"head\": 0.08088616654276848}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.10905693471431732, \"head\": 0.07501361146569252}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10372500866651535, \"head\": 0.06704194098711014}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.1137700043618679, \"head\": 0.07716625183820724}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06325292587280273, \"head\": 0.046480752527713776}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06279491260647774, \"head\": 0.04595264792442322}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06587586551904678, \"head\": 0.04607587307691574}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06472403928637505, \"head\": 0.04820384457707405}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.0683940015733242, \"head\": 0.05093798413872719}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06711718067526817, \"head\": 0.0559953972697258}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.0639255978167057, \"head\": 0.05081476271152496}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.07269704341888428, \"head\": 0.0541548952460289}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07091847062110901, \"head\": 0.05671031400561333}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06795364618301392, \"head\": 0.05250001326203346}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06661777198314667, \"head\": 0.05057145655155182}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.06737611815333366, \"head\": 0.04812932014465332}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.07081567868590355, \"head\": 0.05086562782526016}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07102718576788902, \"head\": 0.055536381900310516}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06659442186355591, \"head\": 0.047622811049222946}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06667111068964005, \"head\": 0.047931451350450516}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.08037667721509933, \"head\": 0.06116398423910141}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.0970507562160492, \"head\": 0.08501303941011429}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.15941985696554184, \"head\": 0.14940878376364708}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.19217783585190773, \"head\": 0.19317665323615074}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.263728603720665, \"head\": 0.24743657559156418}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.040264952927827835, \"head\": 0.038471121340990067}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.0624702125787735, \"head\": 0.05957125127315521}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01986335590481758, \"head\": 0.018970638513565063}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3680109903216362, \"head\": 1.3006403408944607}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009011104702949524, \"head\": 0.1143699586391449}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.9853043667972088, \"head\": 1.8996766470372677}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.910244457423687, \"head\": 0.8676743060350418}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8655872344970703, \"head\": 0.8201976232230663}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.890726562589407, \"head\": 1.004877995699644}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 1.0034867487847805, \"head\": 0.9953978583216667}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.12550010159611702, \"head\": 0.09378084912896156}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.21826335042715073, \"head\": 0.17781079933047295}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11080276966094971, \"head\": 0.077061016112566}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10310786589980125, \"head\": 0.06864834949374199}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10403077304363251, \"head\": 0.07997776567935944}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11298694834113121, \"head\": 0.08409076556563377}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10677238926291466, \"head\": 0.07998308911919594}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10098161548376083, \"head\": 0.06943876668810844}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11087499558925629, \"head\": 0.07907936722040176}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.11303124576807022, \"head\": 0.07896977663040161}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12148923426866531, \"head\": 0.08978220820426941}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.11460987851023674, \"head\": 0.08773034065961838}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10575739666819572, \"head\": 0.07461043447256088}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10748926922678947, \"head\": 0.07744815945625305}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11554405465722084, \"head\": 0.08613628149032593}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11595334485173225, \"head\": 0.0811532475054264}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.11511392518877983, \"head\": 0.0838622935116291}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.12521378323435783, \"head\": 0.08344434946775436}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.1251765377819538, \"head\": 0.09519141167402267}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10728992149233818, \"head\": 0.0729081742465496}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11911799386143684, \"head\": 0.08210432156920433}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11528882384300232, \"head\": 0.08540567755699158}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.1107402890920639, \"head\": 0.07146375998854637}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.11350894346833229, \"head\": 0.08108769357204437}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.0644104816019535, \"head\": 0.049667857587337494}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06410904601216316, \"head\": 0.049693573266267776}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06489251926541328, \"head\": 0.04986520856618881}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06421544402837753, \"head\": 0.048862576484680176}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06869754567742348, \"head\": 0.05380085110664368}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.0670640654861927, \"head\": 0.05330492928624153}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06346509233117104, \"head\": 0.04916605353355408}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.0716380886733532, \"head\": 0.057421859353780746}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07433762028813362, \"head\": 0.057491470128297806}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.07012083008885384, \"head\": 0.0513785146176815}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06594175845384598, \"head\": 0.050203632563352585}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.07074170932173729, \"head\": 0.050783004611730576}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06914448365569115, \"head\": 0.05404892563819885}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07132506743073463, \"head\": 0.061114031821489334}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06594279408454895, \"head\": 0.05027185380458832}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06674790382385254, \"head\": 0.05063043534755707}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07610634714365005, \"head\": 0.06052933633327484}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.07822471112012863, \"head\": 0.0819956324994564}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.14578426256775856, \"head\": 0.14927521347999573}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.17860637232661247, \"head\": 0.18344532325863838}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.251134667545557, \"head\": 0.25436029955744743}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03802444040775299, \"head\": 0.03905727341771126}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.055156949907541275, \"head\": 0.0578029565513134}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01880362257361412, \"head\": 0.018580984324216843}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3204783126711845, \"head\": 1.3970449902117252}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.03440278023481369, \"head\": 0.010043449699878693}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.8458917029201984, \"head\": 1.9148151241242886}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.7975537180900574, \"head\": 0.9871052838861942}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.8799679353833199, \"head\": 0.8942565396428108}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.898355707526207, \"head\": 1.0042502544820309}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 1.0014658235013485, \"head\": 0.8886123523116112}}, {\"xarray/tests/test_computation.py::test_corr_dtype_error\": {\"base\": 0.13222089782357216, \"head\": 0.09335153177380562}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]\": {\"base\": 0.1341734528541565, \"head\": 0.24158217012882233}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]\": {\"base\": 0.11102858558297157, \"head\": 0.08904070034623146}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]\": {\"base\": 0.10278971493244171, \"head\": 0.06797004863619804}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]\": {\"base\": 0.10483168065547943, \"head\": 0.07155664265155792}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]\": {\"base\": 0.11401385813951492, \"head\": 0.08018197491765022}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]\": {\"base\": 0.10943592712283134, \"head\": 0.07616456598043442}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]\": {\"base\": 0.10373103991150856, \"head\": 0.06933517009019852}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]\": {\"base\": 0.11187540367245674, \"head\": 0.07880568504333496}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]\": {\"base\": 0.1145121157169342, \"head\": 0.08422723412513733}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]\": {\"base\": 0.12295743823051453, \"head\": 0.09053399413824081}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]\": {\"base\": 0.1160794198513031, \"head\": 0.08386124297976494}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]\": {\"base\": 0.10531032085418701, \"head\": 0.07723890617489815}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]\": {\"base\": 0.10844570398330688, \"head\": 0.07438760623335838}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]\": {\"base\": 0.11609436944127083, \"head\": 0.08798116818070412}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]\": {\"base\": 0.11409786343574524, \"head\": 0.07836665585637093}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]\": {\"base\": 0.1156337819993496, \"head\": 0.08034162223339081}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]\": {\"base\": 0.11859825998544693, \"head\": 0.08027437701821327}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]\": {\"base\": 0.12988346070051193, \"head\": 0.08898083120584488}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]\": {\"base\": 0.10633146017789841, \"head\": 0.06724997237324715}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]\": {\"base\": 0.11370809376239777, \"head\": 0.07857723534107208}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]\": {\"base\": 0.11045599728822708, \"head\": 0.07431607320904732}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]\": {\"base\": 0.10175031423568726, \"head\": 0.06721841171383858}, \"xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]\": {\"base\": 0.1117006167769432, \"head\": 0.07739919051527977}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]\": {\"base\": 0.06454728916287422, \"head\": 0.04709303379058838}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]\": {\"base\": 0.06377023831009865, \"head\": 0.05650747939944267}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]\": {\"base\": 0.06335199251770973, \"head\": 0.04625675827264786}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]\": {\"base\": 0.06502337381243706, \"head\": 0.052000854164361954}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]\": {\"base\": 0.06711652129888535, \"head\": 0.05079060047864914}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]\": {\"base\": 0.06809663400053978, \"head\": 0.05652135610580444}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]\": {\"base\": 0.06476621702313423, \"head\": 0.046403918415308}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]\": {\"base\": 0.0776512548327446, \"head\": 0.0607665590941906}, \"xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]\": {\"base\": 0.07844998687505722, \"head\": 0.058932580053806305}, \"xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]\": {\"base\": 0.06924738734960556, \"head\": 0.05063491687178612}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]\": {\"base\": 0.06898457184433937, \"head\": 0.05254736170172691}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]\": {\"base\": 0.0691152811050415, \"head\": 0.04799186810851097}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]\": {\"base\": 0.06626050174236298, \"head\": 0.05290177837014198}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]\": {\"base\": 0.07165193185210228, \"head\": 0.05176723375916481}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]\": {\"base\": 0.06772061064839363, \"head\": 0.06833864003419876}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]\": {\"base\": 0.06610873341560364, \"head\": 0.05011063814163208}, \"xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]\": {\"base\": 0.07497073337435722, \"head\": 0.06402209028601646}, \"xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables\": {\"base\": 0.0816800408065319, \"head\": 0.08425205573439598}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]\": {\"base\": 0.15279924869537354, \"head\": 0.142732385545969}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]\": {\"base\": 0.18988832831382751, \"head\": 0.18274522572755814}, \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]\": {\"base\": 0.25953661277890205, \"head\": 0.2594796344637871}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\": {\"base\": 0.03882867470383644, \"head\": 0.03741932287812233}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.05711408704519272, \"head\": 0.056865520775318146}, \"xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]\": {\"base\": 0.01867460086941719, \"head\": 0.018043212592601776}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]\": {\"base\": 1.3099489994347095, \"head\": 1.4359841421246529}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]\": {\"base\": 0.009037744253873825, \"head\": 0.008849214762449265}, \"xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]\": {\"base\": 1.9803748652338982, \"head\": 1.9131191037595272}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]\": {\"base\": 0.8860244862735271, \"head\": 0.8136882334947586}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]\": {\"base\": 0.9121012687683105, \"head\": 0.8383891545236111}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]\": {\"base\": 0.8976946882903576, \"head\": 0.912868082523346}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]\": {\"base\": 0.9977388381958008, \"head\": 0.9238645322620869}}]",
  "efficiency_test": [
    "xarray/tests/test_computation.py::test_corr_dtype_error",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-1]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-2]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-3]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-4]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-5]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-6]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-7]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[None-8]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-0]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-1]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-2]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-3]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-4]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-5]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-6]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[time-8]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-0]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-1]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-3]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-5]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-6]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-7]",
    "xarray/tests/test_computation.py::test_corr_lazycorr_consistency[x-8]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-3-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-3-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-4-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-4-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-6-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-6-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-7-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-8-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[None-8-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[time-3-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-3-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-4-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-4-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-5-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-7-0]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-7-1]",
    "xarray/tests/test_computation.py::test_lazy_corrcov[x-8-1]",
    "xarray/tests/test_dask.py::TestDataArrayAndDataset::test_concat_loads_variables",
    "xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[dask-int]",
    "xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-nan]",
    "xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[dask-obj]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]",
    "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]",
    "xarray/tests/test_plot.py::TestAxesKwargs::test_xscale_kwarg[3-symlog]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-numpy-sum-4-1-True-1]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-None-min]",
    "xarray/tests/test_rolling.py::TestDataArrayRollingExp::test_cumulative[1-numpy-1-sum]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[1-3-False]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_pandas_compat[4-None-False]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-mean-1-2-False-2]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[numpy-sum-1-2-True-2]"
  ],
  "patch_functions": "{\"xarray/core/computation.py\": [\"cov\", \"corr\", \"_cov_corr\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'xarray/core/computation.py': ['cov', 'corr', '_cov_corr']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"xarray/core/variable.py\": [\"Variable.chunk\", \"IndexVariable.chunk\", \"Variable.compute\", \"Variable.isel\", \"IndexVariable.copy\", \"concat\", \"Variable.reduce\"], \"xarray/core/pycompat.py\": [\"is_dask_collection\", \"array_type\"], \"xarray/core/indexes.py\": [\"PandasIndex.isel\", \"concat\"], \"xarray/core/rolling.py\": [\"DatasetRolling.reduce\", \"DataArrayRolling.reduce\", \"DataArrayRolling.method\", \"DatasetRolling.method\"], \"xarray/core/dataarray.py\": [\"DataArray.idxmax\", \"DataArray.idxmin\", \"DataArray.compute\", \"DataArray.interp\", \"DataArray.values\", \"DataArray\", \"DataArray.reduce\", \"DataArray.ndim\", \"DataArray.isel\", \"DataArray.size\", \"DataArray.to_series\", \"DataArray.data\", \"DataArray.attrs\", \"DataArray.rolling\", \"DataArray.coords\", \"DataArray.dtype\", \"DataArray.copy\", \"DataArray.dims\", \"DataArray.chunk\", \"DataArray.cumulative\"], \"xarray/core/concat.py\": [\"concat\"], \"xarray/core/daskmanager.py\": [\"DaskManager.compute\"], \"xarray/util/deprecation_helpers.py\": [\"inner\"], \"xarray/core/dataset.py\": [\"Dataset.rolling\", \"Dataset.copy\", \"Dataset.coords\", \"Dataset\", \"Dataset.compute\", \"Dataset.isel\", \"Dataset.data_vars\", \"from_dataframe\", \"Dataset.attrs\", \"Dataset.sizes\", \"Dataset.variables\", \"Dataset.interp\", \"Dataset.chunk\"], \"xarray/core/_aggregations.py\": [\"DataArray.sum\"], \"xarray/core/missing.py\": [\"interp\"], \"xarray/namedarray/core.py\": [\"Variable.copy\", \"Variable.reduce\"], \"xarray/plot/dataarray_plot.py\": [\"plot\"], \"xarray/core/computation.py\": [\"cov\", \"corr\"], \"xarray/core/duck_array_ops.py\": [\"astype\"], \"xarray/core/utils.py\": [\"module_available\"], \"xarray/core/merge.py\": [\"append\"], \"xarray/core/common.py\": [\"DataArray.sizes\", \"DataArray.isnull\"], \"xarray/core/dtypes.py\": [\"maybe_promote\"], \"xarray/namedarray/utils.py\": [\"is_dask_collection\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'xarray/core/variable.py': ['Variable.chunk', 'IndexVariable.chunk', 'Variable.compute', 'Variable.isel', 'IndexVariable.copy', 'concat', 'Variable.reduce'], 'xarray/core/pycompat.py': ['is_dask_collection', 'array_type'], 'xarray/core/indexes.py': ['PandasIndex.isel', 'concat'], 'xarray/core/rolling.py': ['DatasetRolling.reduce', 'DataArrayRolling.reduce', 'DataArrayRolling.method', 'DatasetRolling.method'], 'xarray/core/dataarray.py': ['DataArray.idxmax', 'DataArray.idxmin', 'DataArray.compute', 'DataArray.interp', 'DataArray.values', 'DataArray', 'DataArray.reduce', 'DataArray.ndim', 'DataArray.isel', 'DataArray.size', 'DataArray.to_series', 'DataArray.data', 'DataArray.attrs', 'DataArray.rolling', 'DataArray.coords', 'DataArray.dtype', 'DataArray.copy', 'DataArray.dims', 'DataArray.chunk', 'DataArray.cumulative'], 'xarray/core/concat.py': ['concat'], 'xarray/core/daskmanager.py': ['DaskManager.compute'], 'xarray/util/deprecation_helpers.py': ['inner'], 'xarray/core/dataset.py': ['Dataset.rolling', 'Dataset.copy', 'Dataset.coords', 'Dataset', 'Dataset.compute', 'Dataset.isel', 'Dataset.data_vars', 'from_dataframe', 'Dataset.attrs', 'Dataset.sizes', 'Dataset.variables', 'Dataset.interp', 'Dataset.chunk'], 'xarray/core/_aggregations.py': ['DataArray.sum'], 'xarray/core/missing.py': ['interp'], 'xarray/namedarray/core.py': ['Variable.copy', 'Variable.reduce'], 'xarray/plot/dataarray_plot.py': ['plot'], 'xarray/core/computation.py': ['cov', 'corr'], 'xarray/core/duck_array_ops.py': ['astype'], 'xarray/core/utils.py': ['module_available'], 'xarray/core/merge.py': ['append'], 'xarray/core/common.py': ['DataArray.sizes', 'DataArray.isnull'], 'xarray/core/dtypes.py': ['maybe_promote'], 'xarray/namedarray/utils.py': ['is_dask_collection']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.20067272727272742
}