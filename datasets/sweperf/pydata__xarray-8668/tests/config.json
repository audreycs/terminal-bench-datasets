{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-8668",
  "patch": "diff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 317f3b1a824..4e8f561c02f 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -35,6 +35,8 @@ Deprecations\n Bug fixes\n ~~~~~~~~~\n \n+- Ensure :py:meth:`DataArray.unstack` works when wrapping array API-compliant classes. (:issue:`8666`, :pull:`8668`)\n+  By `Tom Nicholas <https://github.com/TomNicholas>`_.\n \n Documentation\n ~~~~~~~~~~~~~\ndiff --git a/xarray/core/missing.py b/xarray/core/missing.py\nindex b55fd6049a6..c6592f739da 100644\n--- a/xarray/core/missing.py\n+++ b/xarray/core/missing.py\n@@ -13,7 +13,12 @@\n from xarray.core import utils\n from xarray.core.common import _contains_datetime_like_objects, ones_like\n from xarray.core.computation import apply_ufunc\n-from xarray.core.duck_array_ops import datetime_to_numeric, push, timedelta_to_numeric\n+from xarray.core.duck_array_ops import (\n+    datetime_to_numeric,\n+    push,\n+    reshape,\n+    timedelta_to_numeric,\n+)\n from xarray.core.options import _get_keep_attrs\n from xarray.core.parallelcompat import get_chunked_array_type, is_chunked_array\n from xarray.core.types import Interp1dOptions, InterpOptions\n@@ -748,7 +753,7 @@ def _interp1d(var, x, new_x, func, kwargs):\n     x, new_x = x[0], new_x[0]\n     rslt = func(x, var, assume_sorted=True, **kwargs)(np.ravel(new_x))\n     if new_x.ndim > 1:\n-        return rslt.reshape(var.shape[:-1] + new_x.shape)\n+        return reshape(rslt, (var.shape[:-1] + new_x.shape))\n     if new_x.ndim == 0:\n         return rslt[..., -1]\n     return rslt\n@@ -767,7 +772,7 @@ def _interpnd(var, x, new_x, func, kwargs):\n     rslt = func(x, var, xi, **kwargs)\n     # move back the interpolation axes to the last position\n     rslt = rslt.transpose(range(-rslt.ndim + 1, 1))\n-    return rslt.reshape(rslt.shape[:-1] + new_x[0].shape)\n+    return reshape(rslt, rslt.shape[:-1] + new_x[0].shape)\n \n \n def _chunked_aware_interpnd(var, *coords, interp_func, interp_kwargs, localize=True):\ndiff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 3add7a1441e..e4add9f838e 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -1571,7 +1571,7 @@ def _unstack_once_full(self, dim: Mapping[Any, int], old_dim: Hashable) -> Self:\n         reordered = self.transpose(*dim_order)\n \n         new_shape = reordered.shape[: len(other_dims)] + new_dim_sizes\n-        new_data = reordered.data.reshape(new_shape)\n+        new_data = duck_array_ops.reshape(reordered.data, new_shape)\n         new_dims = reordered.dims[: len(other_dims)] + new_dim_names\n \n         return type(self)(\n",
  "test_patch": "diff --git a/xarray/tests/test_array_api.py b/xarray/tests/test_array_api.py\nindex fddaa120970..fea36d9aca4 100644\n--- a/xarray/tests/test_array_api.py\n+++ b/xarray/tests/test_array_api.py\n@@ -115,6 +115,14 @@ def test_stack(arrays: tuple[xr.DataArray, xr.DataArray]) -> None:\n     assert_equal(actual, expected)\n \n \n+def test_unstack(arrays: tuple[xr.DataArray, xr.DataArray]) -> None:\n+    np_arr, xp_arr = arrays\n+    expected = np_arr.stack(z=(\"x\", \"y\")).unstack()\n+    actual = xp_arr.stack(z=(\"x\", \"y\")).unstack()\n+    assert isinstance(actual.data, Array)\n+    assert_equal(actual, expected)\n+\n+\n def test_where() -> None:\n     np_arr = xr.DataArray(np.array([1, 0]), dims=\"x\")\n     xp_arr = xr.DataArray(xp.asarray([1, 0]), dims=\"x\")\n",
  "base_commit": "037a39e249e5387bc15de447c57bfd559fd5a574",
  "head_commit": "84591f130531486345c8207b2611876ed698bf57",
  "created_at": 1706162078000,
  "version": "2023.07",
  "duration_changes": "[{\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.012102250009775162, \"head\": 0.012777131050825119}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01708207279443741, \"head\": 0.016983427107334137}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.025313910096883774, \"head\": 0.025989171117544174}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017731133848428726, \"head\": 0.017879921942949295}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.019006267189979553, \"head\": 0.018342502415180206}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.04114197567105293, \"head\": 0.05048733577132225}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.017867159098386765, \"head\": 0.01601807400584221}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.010646484792232513, \"head\": 0.009032465517520905}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.0226823128759861, \"head\": 0.020960524678230286}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03637475147843361, \"head\": 0.03245788440108299}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.020953327417373657, \"head\": 0.01873878762125969}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8350648768246174, \"head\": 0.815024022012949}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023433957248926163, \"head\": 0.024479322135448456}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.5051041692495346, \"head\": 0.4809473752975464}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01275261864066124, \"head\": 0.012637514621019363}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018150784075260162, \"head\": 0.018026717007160187}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027367230504751205, \"head\": 0.027624156326055527}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0023172497749329, \"head\": 1.0716954320669174}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.12407388538122177, \"head\": 0.08808104693889618}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.0625774934887886, \"head\": 0.06482117250561714}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.0764898732304573, \"head\": 0.07628067955374718}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.2396674081683159, \"head\": 0.24946421012282372}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.29967720434069633, \"head\": 0.30101003497838974}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011452816426753998, \"head\": 0.011266157031059265}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.019050732254981995, \"head\": 0.0185546912252903}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.025725945830345154, \"head\": 0.02542700618505478}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.01783159375190735, \"head\": 0.017673026770353317}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017595909535884857, \"head\": 0.01731756702065468}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.036324575543403625, \"head\": 0.03746478632092476}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.017764676362276077, \"head\": 0.016011551022529602}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009542204439640045, \"head\": 0.009147144854068756}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.02088792249560356, \"head\": 0.020107589662075043}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03324859216809273, \"head\": 0.032586339861154556}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.0198930986225605, \"head\": 0.019129201769828796}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8409110456705093, \"head\": 0.7837753929197788}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.024122849106788635, \"head\": 0.02359771728515625}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4926115572452545, \"head\": 0.4833793640136719}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01270245760679245, \"head\": 0.012284141033887863}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018236573785543442, \"head\": 0.016899988055229187}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027627553790807724, \"head\": 0.026958562433719635}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 0.9795025289058685, \"head\": 0.9329930804669857}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.039863429963588715, \"head\": 0.11480256915092468}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.07597700878977776, \"head\": 0.05889135226607323}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.079359520226717, \"head\": 0.07664776593446732}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24251744896173477, \"head\": 0.24466736242175102}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.3142470419406891, \"head\": 0.3063569590449333}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.012474589049816132, \"head\": 0.011447533965110779}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01710519939661026, \"head\": 0.01760377734899521}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.029892217367887497, \"head\": 0.025718946009874344}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.01852744072675705, \"head\": 0.01762089878320694}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017652641981840134, \"head\": 0.01725723221898079}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03731249272823334, \"head\": 0.03616864234209061}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.018036697059869766, \"head\": 0.016510523855686188}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009601783007383347, \"head\": 0.009091917425394058}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020634930580854416, \"head\": 0.020235758274793625}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03377886861562729, \"head\": 0.03273763507604599}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.020000018179416656, \"head\": 0.01955992355942726}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7968099564313889, \"head\": 0.7889022007584572}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.02311437577009201, \"head\": 0.023328591138124466}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.48917124792933464, \"head\": 0.4959881603717804}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012980502098798752, \"head\": 0.012363843619823456}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.017712559551000595, \"head\": 0.01735825091600418}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.028302520513534546, \"head\": 0.027343250811100006}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 0.9955704398453236, \"head\": 1.014587413519621}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.05059884861111641, \"head\": 0.04170161858201027}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.07687172293663025, \"head\": 0.06224222853779793}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07977008074522018, \"head\": 0.0776580423116684}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24725200980901718, \"head\": 0.24914471432566643}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.3059518523514271, \"head\": 0.34140223264694214}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.013402771204710007, \"head\": 0.013348359614610672}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01835428550839424, \"head\": 0.017450295388698578}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.02865605428814888, \"head\": 0.02731020748615265}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.02088864892721176, \"head\": 0.018008768558502197}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01808597892522812, \"head\": 0.01789151132106781}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03709065541625023, \"head\": 0.0367596372961998}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01743069663643837, \"head\": 0.017257414758205414}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009714528918266296, \"head\": 0.009387951344251633}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.021850429475307465, \"head\": 0.021319162100553513}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03387255221605301, \"head\": 0.03390601649880409}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.01998300850391388, \"head\": 0.020017750561237335}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7913054004311562, \"head\": 0.7782320454716682}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.024540837854146957, \"head\": 0.02294694259762764}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4790908098220825, \"head\": 0.4883093945682049}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012290742248296738, \"head\": 0.012440729886293411}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.01800556853413582, \"head\": 0.023183386772871017}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.02779039740562439, \"head\": 0.03489137440919876}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0540065951645374, \"head\": 1.0485806241631508}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.11658554151654243, \"head\": 0.04175597056746483}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.05953693389892578, \"head\": 0.06279726698994637}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07712909951806068, \"head\": 0.07637988775968552}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.23887023702263832, \"head\": 0.23769136518239975}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30189967155456543, \"head\": 0.3002435527741909}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011779110878705978, \"head\": 0.012268021702766418}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.017117127776145935, \"head\": 0.018543075770139694}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.0254945307970047, \"head\": 0.026074659079313278}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.018142104148864746, \"head\": 0.01788625866174698}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017531905323266983, \"head\": 0.017330672591924667}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.036794018000364304, \"head\": 0.03850192204117775}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01747218891978264, \"head\": 0.017198149114847183}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009792272001504898, \"head\": 0.009210176765918732}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.021008197218179703, \"head\": 0.02074357494711876}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03339211270213127, \"head\": 0.034075066447257996}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.02016417682170868, \"head\": 0.020314283668994904}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.796254750341177, \"head\": 0.7661293148994446}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023580029606819153, \"head\": 0.023498542606830597}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.49271777644753456, \"head\": 0.49126800894737244}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01264600083231926, \"head\": 0.012822307646274567}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.017746981233358383, \"head\": 0.017684046179056168}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027486294507980347, \"head\": 0.02724936604499817}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0388928949832916, \"head\": 0.9360250271856785}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.10935892164707184, \"head\": 0.11969669908285141}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.059825245290994644, \"head\": 0.06143675372004509}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07659151777625084, \"head\": 0.07988036051392555}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.23892370983958244, \"head\": 0.25551503151655197}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.33531593158841133, \"head\": 0.3080873526632786}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011597070842981339, \"head\": 0.012055523693561554}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.018013019114732742, \"head\": 0.01793481782078743}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.026629738509655, \"head\": 0.025451313704252243}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017589416354894638, \"head\": 0.020554061979055405}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017120402306318283, \"head\": 0.016908403486013412}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.04279570281505585, \"head\": 0.03612900897860527}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.018386732786893845, \"head\": 0.016609899699687958}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009609412401914597, \"head\": 0.009423960000276566}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.021225053817033768, \"head\": 0.021368782967329025}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03520982712507248, \"head\": 0.03390095382928848}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.020276155322790146, \"head\": 0.019465245306491852}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8633728623390198, \"head\": 0.7808925434947014}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.02438996359705925, \"head\": 0.023823536932468414}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4839130938053131, \"head\": 0.4952179752290249}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01327119767665863, \"head\": 0.01252669095993042}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018931202590465546, \"head\": 0.017754867672920227}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027836523950099945, \"head\": 0.027290761470794678}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 0.9427588023245335, \"head\": 0.9787495285272598}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.03672156110405922, \"head\": 0.11889288574457169}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.06409158557653427, \"head\": 0.06089608743786812}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07881714031100273, \"head\": 0.08522333577275276}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.2425585873425007, \"head\": 0.24875018745660782}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.3113260604441166, \"head\": 0.33925557509064674}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.01133645698428154, \"head\": 0.011809293180704117}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01695779711008072, \"head\": 0.017291314899921417}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.024905826896429062, \"head\": 0.025543808937072754}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.01749228686094284, \"head\": 0.01819651946425438}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.018232956528663635, \"head\": 0.017636064440011978}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03609935939311981, \"head\": 0.036935970187187195}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.017697736620903015, \"head\": 0.01683684065937996}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.008848149329423904, \"head\": 0.009168490767478943}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020562615245580673, \"head\": 0.020647414028644562}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03267785534262657, \"head\": 0.03361930698156357}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.0192716084420681, \"head\": 0.019740130752325058}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7686543986201286, \"head\": 0.7710102386772633}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.0230497345328331, \"head\": 0.02605453133583069}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4764265902340412, \"head\": 0.48665235191583633}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012595076113939285, \"head\": 0.012986596673727036}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018283437937498093, \"head\": 0.01877589523792267}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027460407465696335, \"head\": 0.027597099542617798}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 0.9357578456401825, \"head\": 0.9489597715437412}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.11180457100272179, \"head\": 0.10234168544411659}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.06004795804619789, \"head\": 0.06398636847734451}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.0775681920349598, \"head\": 0.07832520827651024}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.23819506913423538, \"head\": 0.24259241670370102}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30845263600349426, \"head\": 0.3120235539972782}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011748123914003372, \"head\": 0.015111833810806274}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.016761519014835358, \"head\": 0.016900718212127686}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.029662318527698517, \"head\": 0.025804460048675537}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017639119178056717, \"head\": 0.019503388553857803}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017086058855056763, \"head\": 0.018165674060583115}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.036134056746959686, \"head\": 0.03717122972011566}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.016415096819400787, \"head\": 0.01714201644062996}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009211454540491104, \"head\": 0.009984437376260757}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020507901906967163, \"head\": 0.021004505455493927}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03280377388000488, \"head\": 0.03376251459121704}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019441377371549606, \"head\": 0.02013406530022621}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8171454407274723, \"head\": 0.7681315317749977}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.02338479459285736, \"head\": 0.02324187010526657}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.48332222923636436, \"head\": 0.47683074325323105}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012220870703458786, \"head\": 0.012265630066394806}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.01749684289097786, \"head\": 0.017912067472934723}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.026972711086273193, \"head\": 0.027843985706567764}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0187889412045479, \"head\": 1.0742145739495754}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.047529175877571106, \"head\": 0.03438355773687363}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.061775773763656616, \"head\": 0.060029588639736176}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07613017410039902, \"head\": 0.07682627439498901}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.2375197634100914, \"head\": 0.24370870366692543}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30686070397496223, \"head\": 0.30508097261190414}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.012025352567434311, \"head\": 0.011949323117733002}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.017333924770355225, \"head\": 0.017419766634702682}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.026332005858421326, \"head\": 0.026596911251544952}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.01812630519270897, \"head\": 0.018079690635204315}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.018201779574155807, \"head\": 0.01767321676015854}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03665284067392349, \"head\": 0.03698692098259926}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01658446341753006, \"head\": 0.02275930717587471}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009243819862604141, \"head\": 0.013402804732322693}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.021011218428611755, \"head\": 0.026542503386735916}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03393381088972092, \"head\": 0.03289056941866875}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019773442298173904, \"head\": 0.019878115504980087}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7684397213160992, \"head\": 0.8302057832479477}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023967865854501724, \"head\": 0.02244172990322113}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4719169810414314, \"head\": 0.4817217104136944}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012547403573989868, \"head\": 0.012285646051168442}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.01796543225646019, \"head\": 0.016973327845335007}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.02737952396273613, \"head\": 0.0272383913397789}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0041018947958946, \"head\": 1.0908366478979588}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.09491099417209625, \"head\": 0.07296565175056458}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.059929605573415756, \"head\": 0.059368811547756195}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07817284762859344, \"head\": 0.08003389835357666}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.25222040712833405, \"head\": 0.2684638164937496}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30816425383090973, \"head\": 0.32429924234747887}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011827453970909119, \"head\": 0.01260489970445633}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01809259131550789, \"head\": 0.017153605818748474}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.026439398527145386, \"head\": 0.026107080280780792}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.0179658941924572, \"head\": 0.017730053514242172}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017272409051656723, \"head\": 0.01707569882273674}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03680030256509781, \"head\": 0.03649216517806053}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.016642101109027863, \"head\": 0.01706748455762863}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009100191295146942, \"head\": 0.009261734783649445}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020443875342607498, \"head\": 0.020445294678211212}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03472514823079109, \"head\": 0.03359537199139595}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.0193331316113472, \"head\": 0.02075844630599022}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7953115291893482, \"head\": 0.7705793082714081}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023642167448997498, \"head\": 0.023970812559127808}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.49171801656484604, \"head\": 0.4849602207541466}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01259525865316391, \"head\": 0.012408390641212463}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.017457138746976852, \"head\": 0.017807230353355408}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027465399354696274, \"head\": 0.027025334537029266}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0897441171109676, \"head\": 1.0302365012466908}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.09474000334739685, \"head\": 0.04218482971191406}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.058646757155656815, \"head\": 0.06798193603754044}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07659699395298958, \"head\": 0.07768773287534714}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.26889967173337936, \"head\": 0.23753223568201065}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.29287344962358475, \"head\": 0.2969154976308346}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011383835226297379, \"head\": 0.012394290417432785}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.017329145222902298, \"head\": 0.01723942905664444}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.02528678998351097, \"head\": 0.02541062980890274}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017482835799455643, \"head\": 0.01769031211733818}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01933179423213005, \"head\": 0.017004966735839844}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03549928218126297, \"head\": 0.035848040133714676}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.016002289950847626, \"head\": 0.01844947412610054}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.008774969726800919, \"head\": 0.010020334273576736}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.021390844136476517, \"head\": 0.020683463662862778}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.033377502113580704, \"head\": 0.03610889986157417}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.01890747621655464, \"head\": 0.020297005772590637}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7706154547631741, \"head\": 0.804098553955555}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023130014538764954, \"head\": 0.027235817164182663}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4789670594036579, \"head\": 0.5076867006719112}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012397583574056625, \"head\": 0.01217435672879219}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.01709655672311783, \"head\": 0.017801232635974884}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.02740618586540222, \"head\": 0.027885694056749344}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0149926543235779, \"head\": 1.0732594206929207}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.043028805404901505, \"head\": 0.03414974734187126}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.057746026664972305, \"head\": 0.059362467378377914}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07483849674463272, \"head\": 0.07670203968882561}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.23649657890200615, \"head\": 0.24645183607935905}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.29867492988705635, \"head\": 0.31075606495141983}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011851076036691666, \"head\": 0.01277056336402893}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.016841165721416473, \"head\": 0.017131265252828598}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.025095432996749878, \"head\": 0.02554188296198845}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017606958746910095, \"head\": 0.017903219908475876}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017047524452209473, \"head\": 0.017861783504486084}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.035951294004917145, \"head\": 0.03824228420853615}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01622091233730316, \"head\": 0.016816843301057816}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009015075862407684, \"head\": 0.009284064173698425}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020210854709148407, \"head\": 0.021247729659080505}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03277203440666199, \"head\": 0.033742234110832214}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019320368766784668, \"head\": 0.019424058496952057}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.850725069642067, \"head\": 0.7695695161819458}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023953042924404144, \"head\": 0.023453887552022934}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.47830508276820183, \"head\": 0.48392634466290474}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012566778808832169, \"head\": 0.01240561529994011}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018264446407556534, \"head\": 0.01763918250799179}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.02735840529203415, \"head\": 0.02757704257965088}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 0.9869710393249989, \"head\": 1.0114606469869614}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.10574229434132576, \"head\": 0.03438512980937958}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.06020040437579155, \"head\": 0.06083562970161438}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07747156918048859, \"head\": 0.08450180664658546}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24551459774374962, \"head\": 0.25500374287366867}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.320002231746912, \"head\": 0.3110778406262398}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011457838118076324, \"head\": 0.011382617056369781}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01702871173620224, \"head\": 0.017832152545452118}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.02525726705789566, \"head\": 0.02815915271639824}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017808977514505386, \"head\": 0.0175183042883873}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.022161386907100677, \"head\": 0.01683579757809639}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03565962612628937, \"head\": 0.0352773442864418}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.016045723110437393, \"head\": 0.01794954389333725}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.008874468505382538, \"head\": 0.009232848882675171}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020404208451509476, \"head\": 0.020199492573738098}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03305470943450928, \"head\": 0.03213699907064438}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019170477986335754, \"head\": 0.02254369482398033}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7821244671940804, \"head\": 0.752703569829464}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.02380584552884102, \"head\": 0.02286004275083542}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4895431660115719, \"head\": 0.4693961627781391}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012650899589061737, \"head\": 0.012198369950056076}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018287673592567444, \"head\": 0.017039481550455093}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.02777426689863205, \"head\": 0.026899855583906174}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.1033283807337284, \"head\": 0.9931510724127293}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.034230027347803116, \"head\": 0.10946191102266312}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.05917369946837425, \"head\": 0.058636751025915146}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07694162428379059, \"head\": 0.07576777413487434}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.23980221524834633, \"head\": 0.23851583153009415}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.3016773760318756, \"head\": 0.29078585654497147}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011373545974493027, \"head\": 0.012469284236431122}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.017825841903686523, \"head\": 0.017142403870821}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.027209043502807617, \"head\": 0.02817615494132042}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017610445618629456, \"head\": 0.017797503620386124}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.016800761222839355, \"head\": 0.0180908665060997}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03715135157108307, \"head\": 0.03859398886561394}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.016622427850961685, \"head\": 0.017672572284936905}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009106732904911041, \"head\": 0.00909394770860672}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.019988548010587692, \"head\": 0.020741339772939682}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03266755864024162, \"head\": 0.03259365260601044}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019206877797842026, \"head\": 0.023838955909013748}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7593074515461922, \"head\": 0.8085737824440002}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.022664427757263184, \"head\": 0.023053355515003204}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.47255513072013855, \"head\": 0.4891175255179405}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012234970927238464, \"head\": 0.012436997145414352}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.01937689632177353, \"head\": 0.01740170642733574}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.026663780212402344, \"head\": 0.02740534022450447}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0690475404262543, \"head\": 0.9972967393696308}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.09723829850554466, \"head\": 0.11814368143677711}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.057227723300457, \"head\": 0.05741899088025093}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07556036487221718, \"head\": 0.08252686262130737}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.2358223870396614, \"head\": 0.24256813153624535}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.29141945391893387, \"head\": 0.29947392642498016}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.012371882796287537, \"head\": 0.0130404531955719}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01753128692507744, \"head\": 0.017901990562677383}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.02636723220348358, \"head\": 0.02714245393872261}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.01897568255662918, \"head\": 0.01794939860701561}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01817864552140236, \"head\": 0.01811324805021286}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03707781061530113, \"head\": 0.037278514355421066}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.0168222114443779, \"head\": 0.017407499253749847}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009319134056568146, \"head\": 0.009232398122549057}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.02134939655661583, \"head\": 0.02073996514081955}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.0335673913359642, \"head\": 0.03493272140622139}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.02027488872408867, \"head\": 0.020863767713308334}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8091136105358601, \"head\": 0.8234899640083313}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.02362726256251335, \"head\": 0.023927148431539536}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.50596933811903, \"head\": 0.4701218046247959}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01279759407043457, \"head\": 0.012555830180644989}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.01827731728553772, \"head\": 0.018142204731702805}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.028085894882678986, \"head\": 0.027697909623384476}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0535460785031319, \"head\": 1.062086395919323}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.11464376002550125, \"head\": 0.03624303638935089}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.0599944144487381, \"head\": 0.06190525367856026}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07923674955964088, \"head\": 0.07997215911746025}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.25015122443437576, \"head\": 0.24758585542440414}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.3083735592663288, \"head\": 0.3150780685245991}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.011744093149900436, \"head\": 0.01214488223195076}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.016850855201482773, \"head\": 0.017247948795557022}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.02558218687772751, \"head\": 0.02716730535030365}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017997413873672485, \"head\": 0.01859453320503235}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01761193946003914, \"head\": 0.01738107204437256}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03622201085090637, \"head\": 0.03590209409594536}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01676691696047783, \"head\": 0.01745852828025818}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009240999817848206, \"head\": 0.009370919317007065}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.020638346672058105, \"head\": 0.020827800035476685}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03303521126508713, \"head\": 0.033012550324201584}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019432879984378815, \"head\": 0.019671358168125153}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8114016205072403, \"head\": 0.7768284119665623}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.027405694127082825, \"head\": 0.023334890604019165}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.5079601667821407, \"head\": 0.47223497927188873}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012599822133779526, \"head\": 0.012171152979135513}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018586691468954086, \"head\": 0.017201844602823257}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.028140775859355927, \"head\": 0.027363460510969162}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.1002405174076557, \"head\": 1.0103549808263779}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.03964528813958168, \"head\": 0.10310999304056168}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.06185140833258629, \"head\": 0.05783772096037865}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07925540208816528, \"head\": 0.07611583545804024}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24780818074941635, \"head\": 0.2421787567436695}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.31632283702492714, \"head\": 0.301854956895113}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.012191765010356903, \"head\": 0.01221800222992897}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01689213514328003, \"head\": 0.017579592764377594}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.025697682052850723, \"head\": 0.025430433452129364}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.018377255648374557, \"head\": 0.01774999499320984}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.017290756106376648, \"head\": 0.017127275466918945}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03640391677618027, \"head\": 0.03642403706908226}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01660234108567238, \"head\": 0.016387563198804855}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.010861124843358994, \"head\": 0.009024117141962051}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.021500322967767715, \"head\": 0.020462125539779663}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03332711383700371, \"head\": 0.03365248441696167}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.0195985846221447, \"head\": 0.01933785155415535}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.7700846567749977, \"head\": 0.7530797719955444}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023638971149921417, \"head\": 0.023114029318094254}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4716677851974964, \"head\": 0.4670166112482548}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012365471571683884, \"head\": 0.012090884149074554}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.017691798508167267, \"head\": 0.017330937087535858}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027361690998077393, \"head\": 0.02699054777622223}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 0.9879897236824036, \"head\": 1.0575083047151566}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.03320012241601944, \"head\": 0.041513897478580475}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.058937057852745056, \"head\": 0.0908614918589592}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07662355527281761, \"head\": 0.07735457643866539}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.2428208626806736, \"head\": 0.2397393323481083}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.2995358295738697, \"head\": 0.30047140270471573}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.012855738401412964, \"head\": 0.012330122292041779}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.017617739737033844, \"head\": 0.017241116613149643}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.026685617864131927, \"head\": 0.025867875665426254}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.017882756888866425, \"head\": 0.018155306577682495}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01763775572180748, \"head\": 0.017637725919485092}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.04105466976761818, \"head\": 0.03632631525397301}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.017319779843091965, \"head\": 0.016937516629695892}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.009432468563318253, \"head\": 0.009163640439510345}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.02095283940434456, \"head\": 0.020698606967926025}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03485045209527016, \"head\": 0.03336344286799431}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.019962329417467117, \"head\": 0.019848238676786423}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8046118132770061, \"head\": 0.7782329991459846}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.023412171751260757, \"head\": 0.024096857756376266}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.5050779581069946, \"head\": 0.49822724238038063}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01401134580373764, \"head\": 0.01264261081814766}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018137097358703613, \"head\": 0.018338821828365326}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027001764625310898, \"head\": 0.027635842561721802}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0566001534461975, \"head\": 1.0568757466971874}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.12348731979727745, \"head\": 0.1128854751586914}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.05834444239735603, \"head\": 0.061312995851039886}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07674189656972885, \"head\": 0.08197160810232162}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24036261811852455, \"head\": 0.24355649575591087}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30091625452041626, \"head\": 0.3175992853939533}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.013250045478343964, \"head\": 0.01218947023153305}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.01692117750644684, \"head\": 0.017184320837259293}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.02561376616358757, \"head\": 0.02625955641269684}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.019777562469244003, \"head\": 0.018043704330921173}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01967611163854599, \"head\": 0.01790761947631836}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.03637603670358658, \"head\": 0.03874245658516884}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.019896700978279114, \"head\": 0.018284641206264496}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.011677958071231842, \"head\": 0.009755279868841171}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.022951778024435043, \"head\": 0.0213940292596817}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.033216312527656555, \"head\": 0.034619636833667755}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.02164597064256668, \"head\": 0.020705170929431915}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8080140426754951, \"head\": 0.7814931944012642}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.03205021843314171, \"head\": 0.023167379200458527}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4951835349202156, \"head\": 0.47027304396033287}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.012324273586273193, \"head\": 0.01243138313293457}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.017427440732717514, \"head\": 0.01732107624411583}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.027342114597558975, \"head\": 0.02752937376499176}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0079331062734127, \"head\": 1.1242309734225273}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.03905458748340607, \"head\": 0.05032430216670036}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.06349315494298935, \"head\": 0.06277955323457718}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.07824882864952087, \"head\": 0.07708550989627838}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24042025581002235, \"head\": 0.24342750385403633}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30143049359321594, \"head\": 0.3017051927745342}}, {\"xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]\": {\"base\": 0.01402701810002327, \"head\": 0.011458367109298706}, \"xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv\": {\"base\": 0.017499003559350967, \"head\": 0.017111502587795258}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]\": {\"base\": 0.027440987527370453, \"head\": 0.0252479650080204}, \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]\": {\"base\": 0.018542397767305374, \"head\": 0.01770593971014023}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]\": {\"base\": 0.01867206022143364, \"head\": 0.017297323793172836}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]\": {\"base\": 0.038578033447265625, \"head\": 0.036676615476608276}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\": {\"base\": 0.01791980117559433, \"head\": 0.016789808869361877}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\": {\"base\": 0.00987730547785759, \"head\": 0.009000442922115326}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\": {\"base\": 0.022723760455846786, \"head\": 0.02076580747961998}, \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\": {\"base\": 0.03726904094219208, \"head\": 0.0333530493080616}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\": {\"base\": 0.02088656648993492, \"head\": 0.01948312669992447}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\": {\"base\": 0.8575331196188927, \"head\": 0.768217246979475}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\": {\"base\": 0.024301540106534958, \"head\": 0.02334638684988022}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\": {\"base\": 0.4924502559006214, \"head\": 0.4773550480604172}, \"xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None\": {\"base\": 0.01277543231844902, \"head\": 0.012390196323394775}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]\": {\"base\": 0.018607880920171738, \"head\": 0.017581667751073837}, \"xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]\": {\"base\": 0.02755439281463623, \"head\": 0.027514353394508362}, \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\": {\"base\": 1.0971215218305588, \"head\": 1.087842870503664}, \"xarray/tests/test_plot.py::TestSurface::test_viridis_cmap\": {\"base\": 0.037175558507442474, \"head\": 0.043755944818258286}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]\": {\"base\": 0.06485848128795624, \"head\": 0.06644266843795776}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]\": {\"base\": 0.08402926474809647, \"head\": 0.08006222546100616}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]\": {\"base\": 0.24354925751686096, \"head\": 0.24187570437788963}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]\": {\"base\": 0.30384185537695885, \"head\": 0.3169630505144596}}]",
  "efficiency_test": [
    "xarray/tests/test_accessor_dt.py::TestDatetimeAccessor::test_dask_field_access[hour]",
    "xarray/tests/test_dask.py::test_more_transforms_pass_lazy_array_equiv",
    "xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[False-list-True]",
    "xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict[True-array-True]",
    "xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool-2]",
    "xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool-1]",
    "xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]",
    "xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]",
    "xarray/tests/test_groupby.py::test_groupby_dataset_squeeze_None",
    "xarray/tests/test_interp.py::test_interpolate_chunk_1d[1-1-1-False-slinear]",
    "xarray/tests/test_interp.py::test_interpolate_nd[no_chunk]",
    "xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]",
    "xarray/tests/test_plot.py::TestSurface::test_viridis_cmap",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-max-2-1-False-1]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-2-True-1]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-False-max-1-False-2]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_ndrolling_reduce[dask-True-max-1-True-2]"
  ],
  "patch_functions": "{\"xarray/core/missing.py\": [\"_interp1d\", \"_interpnd\"], \"xarray/core/variable.py\": [\"Variable._unstack_once_full\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'xarray/core/missing.py': ['_interp1d', '_interpnd'], 'xarray/core/variable.py': ['Variable._unstack_once_full']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"xarray/core/common.py\": [\"DataArray.isnull\", \"DataArray.sizes\", \"DataArray.astype\", \"DataArray.get_axis_num\"], \"xarray/core/groupby.py\": [\"<genexpr>\", \"DatasetGroupBy._iter_grouped\", \"DatasetGroupBy.map\", \"DatasetGroupBy.groups\"], \"xarray/core/variable.py\": [\"Variable.transpose\", \"Variable.compute\", \"IndexVariable.chunk\", \"Variable.isel\", \"IndexVariable.isel\", \"IndexVariable.copy\", \"Variable.to_numpy\", \"Variable.to_dict\", \"Variable.reduce\", \"Variable.chunk\"], \"xarray/namedarray/core.py\": [\"Variable.get_axis_num\", \"Variable.copy\", \"Variable.reduce\"], \"xarray/core/dataset.py\": [\"Dataset.rolling\", \"Dataset.coords\", \"Dataset.attrs\", \"Dataset.groupby\", \"Dataset.interp\", \"Dataset.set_coords\", \"Dataset.map\", \"Dataset.compute\", \"Dataset.isel\", \"Dataset.assign\", \"Dataset\", \"Dataset.chunk\", \"Dataset.reset_coords\", \"Dataset.rename_vars\", \"Dataset.interpolate_na\", \"Dataset.drop_vars\", \"Dataset.sizes\", \"Dataset.variables\", \"Dataset.copy\"], \"xarray/core/duck_array_ops.py\": [\"reshape\", \"astype\"], \"xarray/core/dataarray.py\": [\"DataArray.coords\", \"DataArray.copy\", \"DataArray.dtype\", \"DataArray.compute\", \"DataArray\", \"DataArray.values\", \"DataArray.transpose\", \"from_dict\", \"DataArray.reduce\", \"DataArray.rolling\", \"DataArray.to_series\", \"DataArray.to_dict\", \"DataArray.drop_vars\", \"DataArray.dims\", \"DataArray.isel\", \"DataArray.chunk\", \"DataArray._to_temp_dataset\", \"DataArray.data\", \"DataArray.to_numpy\", \"DataArray.attrs\", \"DataArray.to_dataset\", \"DataArray.interp\", \"DataArray._from_temp_dataset\", \"DataArray.ndim\"], \"xarray/core/_aggregations.py\": [\"DataArray.mean\", \"DataArray.max\", \"DataArray.prod\", \"DataArray.min\", \"DataArray.sum\"], \"xarray/core/rolling.py\": [\"DataArrayRolling.method\", \"DataArrayRolling.reduce\", \"DatasetRolling.method\"], \"xarray/core/indexing.py\": [\"NumpyIndexingAdapter.transpose\", \"DaskIndexingAdapter.transpose\"], \"xarray/plot/accessor.py\": [\"DataArrayPlotAccessor.surface\"], \"xarray/core/indexes.py\": [\"PandasIndex.isel\"], \"xarray/core/missing.py\": [\"interp\"], \"xarray/core/coordinates.py\": [\"DatasetCoordinates.copy\"], \"xarray/core/dtypes.py\": [\"maybe_promote\"], \"xarray/core/pycompat.py\": [\"array_type\", \"to_numpy\"], \"xarray/coding/cftime_offsets.py\": [\"cftime_range\"], \"xarray/util/deprecation_helpers.py\": [\"inner\"], \"xarray/core/alignment.py\": [\"broadcast\"], \"xarray/core/utils.py\": [\"module_available\"], \"xarray/core/daskmanager.py\": [\"DaskManager.compute\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'xarray/core/common.py': ['DataArray.isnull', 'DataArray.sizes', 'DataArray.astype', 'DataArray.get_axis_num'], 'xarray/core/groupby.py': ['<genexpr>', 'DatasetGroupBy._iter_grouped', 'DatasetGroupBy.map', 'DatasetGroupBy.groups'], 'xarray/core/variable.py': ['Variable.transpose', 'Variable.compute', 'IndexVariable.chunk', 'Variable.isel', 'IndexVariable.isel', 'IndexVariable.copy', 'Variable.to_numpy', 'Variable.to_dict', 'Variable.reduce', 'Variable.chunk'], 'xarray/namedarray/core.py': ['Variable.get_axis_num', 'Variable.copy', 'Variable.reduce'], 'xarray/core/dataset.py': ['Dataset.rolling', 'Dataset.coords', 'Dataset.attrs', 'Dataset.groupby', 'Dataset.interp', 'Dataset.set_coords', 'Dataset.map', 'Dataset.compute', 'Dataset.isel', 'Dataset.assign', 'Dataset', 'Dataset.chunk', 'Dataset.reset_coords', 'Dataset.rename_vars', 'Dataset.interpolate_na', 'Dataset.drop_vars', 'Dataset.sizes', 'Dataset.variables', 'Dataset.copy'], 'xarray/core/duck_array_ops.py': ['reshape', 'astype'], 'xarray/core/dataarray.py': ['DataArray.coords', 'DataArray.copy', 'DataArray.dtype', 'DataArray.compute', 'DataArray', 'DataArray.values', 'DataArray.transpose', 'from_dict', 'DataArray.reduce', 'DataArray.rolling', 'DataArray.to_series', 'DataArray.to_dict', 'DataArray.drop_vars', 'DataArray.dims', 'DataArray.isel', 'DataArray.chunk', 'DataArray._to_temp_dataset', 'DataArray.data', 'DataArray.to_numpy', 'DataArray.attrs', 'DataArray.to_dataset', 'DataArray.interp', 'DataArray._from_temp_dataset', 'DataArray.ndim'], 'xarray/core/_aggregations.py': ['DataArray.mean', 'DataArray.max', 'DataArray.prod', 'DataArray.min', 'DataArray.sum'], 'xarray/core/rolling.py': ['DataArrayRolling.method', 'DataArrayRolling.reduce', 'DatasetRolling.method'], 'xarray/core/indexing.py': ['NumpyIndexingAdapter.transpose', 'DaskIndexingAdapter.transpose'], 'xarray/plot/accessor.py': ['DataArrayPlotAccessor.surface'], 'xarray/core/indexes.py': ['PandasIndex.isel'], 'xarray/core/missing.py': ['interp'], 'xarray/core/coordinates.py': ['DatasetCoordinates.copy'], 'xarray/core/dtypes.py': ['maybe_promote'], 'xarray/core/pycompat.py': ['array_type', 'to_numpy'], 'xarray/coding/cftime_offsets.py': ['cftime_range'], 'xarray/util/deprecation_helpers.py': ['inner'], 'xarray/core/alignment.py': ['broadcast'], 'xarray/core/utils.py': ['module_available'], 'xarray/core/daskmanager.py': ['DaskManager.compute']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.0018260869565217398
}