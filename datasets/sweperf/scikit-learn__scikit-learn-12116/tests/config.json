{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-12116",
  "patch": "diff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 6406950b5dff7..391171548efbf 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -47,10 +47,14 @@ Support for Python 3.4 and below has been officially dropped.\n   algoritm related to :class:`cluster.DBSCAN`, that has hyperparameters easier\n   to set and that scales better, by :user:`Shane <espg>` and\n   :user:`Adrin Jalali <adrinjalali>`.\n-\n+  \n :mod:`sklearn.preprocessing`\n ............................\n \n+- |Efficiency| Make :class:`preprocessing.MultiLabelBinarizer` to cache class mappings instead \n+  of calculating it every time on the fly.\n+  :issue:`12116` by :user:`Ekaterina Krivich <kiote>` and `Joel Nothman`_.\n+\n - |Efficiency| |API| Speed improvement in :class:`preprocessing.PolynomialFeatures`,\n   in the dense case. Also added a new parameter ``order`` which controls output\n   order for further speed performances. :issue:`12251` by `Tom Dupre la Tour`_.\ndiff --git a/sklearn/preprocessing/label.py b/sklearn/preprocessing/label.py\nindex 809b537831356..12f95b5e2cb4f 100644\n--- a/sklearn/preprocessing/label.py\n+++ b/sklearn/preprocessing/label.py\n@@ -824,6 +824,7 @@ def fit(self, y):\n         -------\n         self : returns this MultiLabelBinarizer instance\n         \"\"\"\n+        self._cached_dict = None\n         if self.classes is None:\n             classes = sorted(set(itertools.chain.from_iterable(y)))\n         elif len(set(self.classes)) < len(self.classes):\n@@ -853,6 +854,8 @@ def fit_transform(self, y):\n             A matrix such that `y_indicator[i, j] = 1` iff `classes_[j]` is in\n             `y[i]`, and 0 otherwise.\n         \"\"\"\n+        self._cached_dict = None\n+\n         if self.classes is not None:\n             return self.fit(y).transform(y)\n \n@@ -896,7 +899,7 @@ def transform(self, y):\n         \"\"\"\n         check_is_fitted(self, 'classes_')\n \n-        class_to_index = dict(zip(self.classes_, range(len(self.classes_))))\n+        class_to_index = self._build_cache()\n         yt = self._transform(y, class_to_index)\n \n         if not self.sparse_output:\n@@ -904,6 +907,13 @@ def transform(self, y):\n \n         return yt\n \n+    def _build_cache(self):\n+        if self._cached_dict is None:\n+            self._cached_dict = dict(zip(self.classes_,\n+                                         range(len(self.classes_))))\n+\n+        return self._cached_dict\n+\n     def _transform(self, y, class_mapping):\n         \"\"\"Transforms the label sets with a given mapping\n \n",
  "test_patch": "diff --git a/sklearn/preprocessing/tests/test_label.py b/sklearn/preprocessing/tests/test_label.py\nindex 57c95ab5f7e2d..56550a9816a3f 100644\n--- a/sklearn/preprocessing/tests/test_label.py\n+++ b/sklearn/preprocessing/tests/test_label.py\n@@ -381,6 +381,24 @@ def test_multilabel_binarizer_given_classes():\n     assert_raise_message(ValueError, err_msg, mlb.fit, inp)\n \n \n+def test_multilabel_binarizer_multiple_calls():\n+    inp = [(2, 3), (1,), (1, 2)]\n+    indicator_mat = np.array([[0, 1, 1],\n+                              [1, 0, 0],\n+                              [1, 0, 1]])\n+\n+    indicator_mat2 = np.array([[0, 1, 1],\n+                               [1, 0, 0],\n+                               [1, 1, 0]])\n+\n+    # first call\n+    mlb = MultiLabelBinarizer(classes=[1, 3, 2])\n+    assert_array_equal(mlb.fit_transform(inp), indicator_mat)\n+    # second call change class\n+    mlb.classes = [1, 2, 3]\n+    assert_array_equal(mlb.fit_transform(inp), indicator_mat2)\n+\n+\n def test_multilabel_binarizer_same_length_sequence():\n     # Ensure sequences of the same length are not interpreted as a 2-d array\n     inp = [[1], [0], [2]]\n",
  "base_commit": "63e5ae6319285c44b1a9519aa6acd9006c82a10a",
  "head_commit": "393448ca538de49cd96be74c07506b2cc8380cce",
  "created_at": 1537441536000,
  "version": "0.21",
  "duration_changes": "[{\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.01134808361530304, \"head\": 0.011268537491559982}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.22751887142658234, \"head\": 0.019140824675559998}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.5092845186591148, \"head\": 0.08942815288901329}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.10618456825613976, \"head\": 0.09214315935969353}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.09506165236234665, \"head\": 0.023538701236248016}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.010559488087892532, \"head\": 0.07957955822348595}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003329329192638397, \"head\": 0.00413932278752327}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.00501067191362381, \"head\": 0.005315117537975311}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006257709115743637, \"head\": 0.006574027240276337}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.0064650364220142365, \"head\": 0.006797678768634796}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.2505335323512554, \"head\": 0.2727123908698559}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.897386334836483, \"head\": 0.6035634316504002}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.03414852172136307, \"head\": 0.18681969493627548}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012769151479005814, \"head\": 0.012519057840108871}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.06638709083199501, \"head\": 0.026446856558322906}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.39047588035464287, \"head\": 0.06686605513095856}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.30283041670918465, \"head\": 0.023752227425575256}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.22080573439598083, \"head\": 0.09362179040908813}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.08325636014342308, \"head\": 0.10362972319126129}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.00792204961180687, \"head\": 0.007784586399793625}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.0033500678837299347, \"head\": 0.0033110976219177246}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.01053539291024208, \"head\": 0.004830475896596909}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.01624494418501854, \"head\": 0.05300286039710045}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006622575223445892, \"head\": 0.0062997005879879}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.06355661898851395, \"head\": 0.19094908609986305}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.0159177742898464, \"head\": 0.6107469499111176}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.03019724041223526, \"head\": 0.09935613721609116}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012541748583316803, \"head\": 0.011850561946630478}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.010970834642648697, \"head\": 0.010689347982406616}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.06872401759028435, \"head\": 0.11305361241102219}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.39512987062335014, \"head\": 0.4896799512207508}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.12207496166229248, \"head\": 0.1078016348183155}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.09449445456266403, \"head\": 0.09241344779729843}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.06979088485240936, \"head\": 0.010955419391393661}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.0078667551279068, \"head\": 0.003413259983062744}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.007627423852682114, \"head\": 0.0044017210602760315}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.007833059877157211, \"head\": 0.0059543997049331665}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.008638806641101837, \"head\": 0.008486233651638031}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.07632607594132423, \"head\": 0.09431925415992737}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.8759253136813641, \"head\": 1.612508088350296}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.03568989410996437, \"head\": 0.10708135738968849}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012256141752004623, \"head\": 0.012208055704832077}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.008652903139591217, \"head\": 0.010282538831233978}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.02433577924966812, \"head\": 0.0986567921936512}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.07289748638868332, \"head\": 0.20623619854450226}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.02061961591243744, \"head\": 0.10941721126437187}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.08141947537660599, \"head\": 0.10069554671645164}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.011025466024875641, \"head\": 0.007792528718709946}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.00403478741645813, \"head\": 0.0032400041818618774}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.0062827058136463165, \"head\": 0.004677418619394302}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006221368908882141, \"head\": 0.05637245625257492}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.00609247013926506, \"head\": 0.006099633872509003}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.08123500645160675, \"head\": 0.10174751654267311}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.8768232837319374, \"head\": 0.7942327558994293}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.12107642740011215, \"head\": 0.10755984485149384}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.011713467538356781, \"head\": 0.011667124927043915}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.012297887355089188, \"head\": 0.01280922070145607}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.17604985460639, \"head\": 0.014675132930278778}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.4946873374283314, \"head\": 0.06259777769446373}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.11716891825199127, \"head\": 0.09096340090036392}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.11958569288253784, \"head\": 0.09020087495446205}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.06233307719230652, \"head\": 0.0076911672949790955}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.0032730847597122192, \"head\": 0.0032174214720726013}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004346154630184174, \"head\": 0.004563383758068085}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.0058944858610630035, \"head\": 0.005983132869005203}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.00597747415304184, \"head\": 0.006078451871871948}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.30114615708589554, \"head\": 0.0801515132188797}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.7965866699814796, \"head\": 0.997083768248558}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.03361806273460388, \"head\": 0.19282491132616997}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012064438313245773, \"head\": 0.011797480285167694}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.025884311646223068, \"head\": 0.010663699358701706}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.020922254770994186, \"head\": 0.04972626641392708}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.09279051795601845, \"head\": 0.0988745391368866}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.10823560878634453, \"head\": 0.0847870223224163}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.10164058953523636, \"head\": 0.09896984696388245}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.007752474397420883, \"head\": 0.007990621030330658}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003290317952632904, \"head\": 0.003484617918729782}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004723243415355682, \"head\": 0.005481008440256119}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006023980677127838, \"head\": 0.006869688630104065}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.053424302488565445, \"head\": 0.00666404515504837}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.19520291686058044, \"head\": 0.06921350583434105}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.9047527611255646, \"head\": 0.6077482141554356}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.028453070670366287, \"head\": 0.0959959365427494}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.07138368114829063, \"head\": 0.0796966589987278}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.010708160698413849, \"head\": 0.010856971144676208}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.10981670022010803, \"head\": 0.08514140173792839}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.19795717671513557, \"head\": 0.10511714220046997}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.1042899452149868, \"head\": 0.17929300665855408}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.12300233542919159, \"head\": 0.023630868643522263}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.007686525583267212, \"head\": 0.015122026205062866}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.0032010897994041443, \"head\": 0.005234457552433014}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004383813589811325, \"head\": 0.006980389356613159}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.005899224430322647, \"head\": 0.009404931217432022}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006133098155260086, \"head\": 0.00921456515789032}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.1355075053870678, \"head\": 0.07747668400406837}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.0070989727973938, \"head\": 0.7920770645141602}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.10786318778991699, \"head\": 0.10641990602016449}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.011830668896436691, \"head\": 0.01203075796365738}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.06535524502396584, \"head\": 0.010722413659095764}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.09054388478398323, \"head\": 0.17806047946214676}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.15693319961428642, \"head\": 0.10461301356554031}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.013873204588890076, \"head\": 0.08935686573386192}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.09313829615712166, \"head\": 0.0931011326611042}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.07126862555742264, \"head\": 0.008020486682653427}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003291439265012741, \"head\": 0.0032708942890167236}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004759460687637329, \"head\": 0.004844211041927338}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.0061624012887477875, \"head\": 0.006226152181625366}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.0060835592448711395, \"head\": 0.006096646189689636}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.17175688967108727, \"head\": 0.18681270256638527}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.8073371015489101, \"head\": 0.8810216188430786}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.13240903988480568, \"head\": 0.11164364591240883}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.011858515441417694, \"head\": 0.011803362518548965}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.01023055613040924, \"head\": 0.010211769491434097}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.02601005509495735, \"head\": 0.9924198314547539}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.11093517765402794, \"head\": 0.6937437020242214}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.09693828970193863, \"head\": 0.14845061302185059}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.10329025611281395, \"head\": 0.06774084270000458}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.00781356543302536, \"head\": 0.014514293521642685}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003304995596408844, \"head\": 0.005286324769258499}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.00453919917345047, \"head\": 0.05350247770547867}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.05198073759675026, \"head\": 0.009772874414920807}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.03910735994577408, \"head\": 0.010425910353660583}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.17463254183530807, \"head\": 0.18374446034431458}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.6985137797892094, \"head\": 0.8015495799481869}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.18234868347644806, \"head\": 0.106730155646801}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.015084370970726013, \"head\": 0.01236669346690178}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.008477706462144852, \"head\": 0.010492384433746338}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.04681383818387985, \"head\": 0.11201200634241104}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.0930035263299942, \"head\": 0.10156028345227242}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.09598097577691078, \"head\": 0.014124348759651184}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.019733566790819168, \"head\": 0.10611910745501518}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.007891852408647537, \"head\": 0.00793575868010521}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.0033367834985256195, \"head\": 0.003383643925189972}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004473511129617691, \"head\": 0.004811074584722519}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.005860965698957443, \"head\": 0.006153535097837448}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006131384521722794, \"head\": 0.006307616829872131}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.18020494654774666, \"head\": 0.09968188032507896}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.202079575508833, \"head\": 0.8929653316736221}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.11593301594257355, \"head\": 0.03208722546696663}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.015693411231040955, \"head\": 0.013201277703046799}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.013226736336946487, \"head\": 0.010855771601200104}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.19387754052877426, \"head\": 0.11736613139510155}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.109036173671484, \"head\": 0.10824638605117798}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.09495493024587631, \"head\": 0.10362809151411057}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.01941573992371559, \"head\": 0.09776771068572998}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.06021913141012192, \"head\": 0.012209385633468628}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.0033181272447109222, \"head\": 0.005342718213796616}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.0045724064111709595, \"head\": 0.0072703175246715546}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006032425910234451, \"head\": 0.009710203856229782}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006363194435834885, \"head\": 0.010728273540735245}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.17074890434741974, \"head\": 0.0833510048687458}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.3225436806678772, \"head\": 0.9035013280808926}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.20721465721726418, \"head\": 0.09970050305128098}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.011934157460927963, \"head\": 0.011685743927955627}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.012999109923839569, \"head\": 0.011832598596811295}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.3871299847960472, \"head\": 0.11155674606561661}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.1972253955900669, \"head\": 0.019926942884922028}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.10335808992385864, \"head\": 0.08329920470714569}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.09533828869462013, \"head\": 0.10033416748046875}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.00789991021156311, \"head\": 0.007834825664758682}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003403179347515106, \"head\": 0.003263559192419052}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.0049417465925216675, \"head\": 0.004643887281417847}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006526987999677658, \"head\": 0.006041396409273148}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006301160901784897, \"head\": 0.006059836596250534}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.2474568635225296, \"head\": 0.15564589947462082}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.8235444389283657, \"head\": 0.9134446531534195}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.04251294583082199, \"head\": 0.03151043877005577}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012130778282880783, \"head\": 0.012320399284362793}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.012763626873493195, \"head\": 0.010222267359495163}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.01670394092798233, \"head\": 0.09117996692657471}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.1499299667775631, \"head\": 0.18890121206641197}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.09688431769609451, \"head\": 0.08675693720579147}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.12578453868627548, \"head\": 0.09876357018947601}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.007828757166862488, \"head\": 0.009678274393081665}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003367561846971512, \"head\": 0.0033021196722984314}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004612889140844345, \"head\": 0.004765231162309647}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.022875387221574783, \"head\": 0.0061758533120155334}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.012410786002874374, \"head\": 0.006074044853448868}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.18475917726755142, \"head\": 0.25652003660798073}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.2117940597236156, \"head\": 0.8017629534006119}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.12490547448396683, \"head\": 0.10123143717646599}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.01229134202003479, \"head\": 0.012375470250844955}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.010732054710388184, \"head\": 0.01052478700876236}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.10052279010415077, \"head\": 0.05519568547606468}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.503831822425127, \"head\": 0.1926630660891533}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.11889612302184105, \"head\": 0.014068499207496643}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.1794123500585556, \"head\": 0.09626225009560585}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.007899831980466843, \"head\": 0.008002161979675293}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003356490284204483, \"head\": 0.0033573471009731293}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.005432285368442535, \"head\": 0.00480213388800621}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006843201816082001, \"head\": 0.006199374794960022}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006666380912065506, \"head\": 0.006223998963832855}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.15103031694889069, \"head\": 0.18815895169973373}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.0160629525780678, \"head\": 0.7999173179268837}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.12780531868338585, \"head\": 0.1895591877400875}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.01981246843934059, \"head\": 0.011910255998373032}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.011710528284311295, \"head\": 0.010597124695777893}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.11354618519544601, \"head\": 0.0652916431427002}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.10212738066911697, \"head\": 0.10935096442699432}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.09314560517668724, \"head\": 0.09581365063786507}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.10107236355543137, \"head\": 0.10073428228497505}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.007858775556087494, \"head\": 0.009021405130624771}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003312099725008011, \"head\": 0.0032589584589004517}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004662998020648956, \"head\": 0.0046831779181957245}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.0059769898653030396, \"head\": 0.006084155291318893}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006051022559404373, \"head\": 0.006190944463014603}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.0881890207529068, \"head\": 0.1542203463613987}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.2667080275714397, \"head\": 0.8166510574519634}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.1371527500450611, \"head\": 0.032528188079595566}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.011755231767892838, \"head\": 0.012620128691196442}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.011346213519573212, \"head\": 0.010466247797012329}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.12336908280849457, \"head\": 0.15316574275493622}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.14630885049700737, \"head\": 0.2858509197831154}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.09621801227331161, \"head\": 0.10246690735220909}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.07931765541434288, \"head\": 0.014842070639133453}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.01111593097448349, \"head\": 0.007784601300954819}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.05557940527796745, \"head\": 0.003391798585653305}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004357155412435532, \"head\": 0.004770103842020035}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.005965851247310638, \"head\": 0.006106797605752945}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.00603717565536499, \"head\": 0.006116602569818497}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.07743482291698456, \"head\": 0.1824566274881363}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.9293557442724705, \"head\": 0.8084822818636894}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.1235373243689537, \"head\": 0.10752423852682114}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012698434293270111, \"head\": 0.012283343821763992}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.013777285814285278, \"head\": 0.012768346816301346}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.024167552590370178, \"head\": 0.7653363347053528}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.10701347142457962, \"head\": 1.3067800179123878}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.17654618248343468, \"head\": 0.11271587014198303}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.0998595841228962, \"head\": 0.09425694867968559}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.014436356723308563, \"head\": 0.016024772077798843}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.005011707544326782, \"head\": 0.004021931439638138}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.006800513714551926, \"head\": 0.006037205457687378}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.009574737399816513, \"head\": 0.00743715837597847}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.010427523404359818, \"head\": 0.008195187896490097}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.1389659307897091, \"head\": 0.35950296744704247}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.8090242408216, \"head\": 0.8904334381222725}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.11330834031105042, \"head\": 0.10594357922673225}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.07160312682390213, \"head\": 0.012242946773767471}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.01076272502541542, \"head\": 0.01096276193857193}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.03854157775640488, \"head\": 0.04007624089717865}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.7055676132440567, \"head\": 0.08982298523187637}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.10792409256100655, \"head\": 0.09074844419956207}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.11677848920226097, \"head\": 0.022960256785154343}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.01009611040353775, \"head\": 0.0078330859541893}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003368295729160309, \"head\": 0.0034004375338554382}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004611704498529434, \"head\": 0.00462738424539566}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006109088659286499, \"head\": 0.006135199218988419}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006082519888877869, \"head\": 0.006230220198631287}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.19073592871427536, \"head\": 0.17623785138130188}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.6687717288732529, \"head\": 0.5925743207335472}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.09431255981326103, \"head\": 0.10351208597421646}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012685976922512054, \"head\": 0.01217946782708168}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.010885924100875854, \"head\": 0.011198524385690689}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.11200407892465591, \"head\": 0.15652089193463326}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.18000221252441406, \"head\": 0.2848512977361679}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.10953227058053017, \"head\": 0.10399046540260315}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.09111021086573601, \"head\": 0.09461872652173042}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.00791981816291809, \"head\": 0.007826622575521469}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003304746001958847, \"head\": 0.0033615007996559143}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.004704568535089493, \"head\": 0.004719454795122147}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006192509084939957, \"head\": 0.006070476025342941}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.006142072379589081, \"head\": 0.006258096545934677}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.27688565105199814, \"head\": 0.08105291798710823}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 1.1031501665711403, \"head\": 0.8802201077342033}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.029943443834781647, \"head\": 0.10597723722457886}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012257866561412811, \"head\": 0.012906134128570557}}, {\"sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular\": {\"base\": 0.11745740845799446, \"head\": 0.010480411350727081}, \"sklearn/datasets/tests/test_samples_generator.py::test_make_classification\": {\"base\": 0.2944621369242668, \"head\": 0.03916996717453003}, \"sklearn/decomposition/tests/test_pca.py::test_explained_variance\": {\"base\": 0.4958423711359501, \"head\": 0.2869204916059971}, \"sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values\": {\"base\": 0.19608081504702568, \"head\": 0.11175872758030891}, \"sklearn/linear_model/tests/test_bayes.py::test_return_std\": {\"base\": 0.03288554400205612, \"head\": 0.09553219377994537}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive\": {\"base\": 0.06645730882883072, \"head\": 0.010709784924983978}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy\": {\"base\": 0.003570694476366043, \"head\": 0.0033234842121601105}, \"sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet\": {\"base\": 0.0050394125282764435, \"head\": 0.004539709538221359}, \"sklearn/model_selection/tests/test_search.py::test_refit\": {\"base\": 0.006748750805854797, \"head\": 0.005943112075328827}, \"sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer\": {\"base\": 0.00647963210940361, \"head\": 0.006149675697088242}, \"sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight\": {\"base\": 0.17409123107790947, \"head\": 0.2045055739581585}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]\": {\"base\": 0.8073617219924927, \"head\": 0.6112916879355907}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]\": {\"base\": 0.11805019900202751, \"head\": 0.030506093055009842}, \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\": {\"base\": 0.012616582214832306, \"head\": 0.012386046350002289}}]",
  "efficiency_test": [
    "sklearn/covariance/tests/test_graphical_lasso.py::test_graphical_lasso_iris_singular",
    "sklearn/datasets/tests/test_samples_generator.py::test_make_classification",
    "sklearn/decomposition/tests/test_pca.py::test_explained_variance",
    "sklearn/decomposition/tests/test_truncated_svd.py::test_singular_values",
    "sklearn/linear_model/tests/test_bayes.py::test_return_std",
    "sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_path_positive",
    "sklearn/linear_model/tests/test_coordinate_descent.py::test_enet_toy",
    "sklearn/linear_model/tests/test_coordinate_descent.py::test_multi_task_lasso_and_enet",
    "sklearn/model_selection/tests/test_search.py::test_refit",
    "sklearn/preprocessing/data.py::sklearn.preprocessing.data.PowerTransformer",
    "sklearn/svm/tests/test_svm.py::test_linearsvr_fit_sampleweight",
    "sklearn/tests/test_common.py::test_non_meta_estimators[MLPClassifier-MLPClassifier-check_classifiers_train(readonly_memmap=True)]",
    "sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_pipeline_consistency]",
    "sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]"
  ],
  "patch_functions": "{\"sklearn/preprocessing/label.py\": [\"MultiLabelBinarizer.fit_transform\", \"MultiLabelBinarizer.fit\", \"MultiLabelBinarizer._transform\", \"MultiLabelBinarizer.transform\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'sklearn/preprocessing/label.py': ['MultiLabelBinarizer.fit_transform', 'MultiLabelBinarizer.fit', 'MultiLabelBinarizer._transform', 'MultiLabelBinarizer.transform']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"sklearn/datasets/base.py\": [\"load_boston\", \"load_iris\", \"load_digits\", \"load_diabetes\"], \"sklearn/utils/validation.py\": [\"check_array\", \"check_is_fitted\", \"check_random_state\"], \"sklearn/preprocessing/data.py\": [\"PowerTransformer._yeo_johnson_transform\", \"PowerTransformer._fit\", \"StandardScaler.partial_fit\", \"StandardScaler._reset\", \"PowerTransformer._check_input\", \"StandardScaler.transform\", \"PowerTransformer._yeo_johnson_optimize\", \"StandardScaler.fit\", \"_handle_zeros_in_scale\"], \"sklearn/covariance/graph_lasso_.py\": [\"graphical_lasso\"], \"sklearn/base.py\": [\"LinearSVR.score\", \"ElasticNet.set_params\", \"AdaBoostClassifier.get_params\"], \"sklearn/linear_model/bayes.py\": [\"ARDRegression.fit\", \"BayesianRidge\", \"ARDRegression.predict\", \"BayesianRidge.fit\", \"BayesianRidge.predict\", \"ARDRegression\"], \"sklearn/utils/estimator_checks.py\": [\"_yield_all_checks\", \"set_checking_parameters\"], \"sklearn/svm/classes.py\": [\"LinearSVR\", \"LinearSVR.fit\"], \"sklearn/random_projection.py\": [\"sparse_random_matrix\"], \"sklearn/utils/deprecation.py\": [\"wrapped\"], \"sklearn/linear_model/coordinate_descent.py\": [\"MultiTaskLasso.fit\", \"MultiTaskLasso\", \"ElasticNet\", \"lasso_path\", \"enet_path\", \"ElasticNet.fit\", \"MultiTaskElasticNet\"], \"sklearn/tree/tree.py\": [\"ExtraTreeClassifier.predict_log_proba\", \"ExtraTreeClassifier.fit\", \"ExtraTreeClassifier.predict\", \"ExtraTreeClassifier.predict_proba\"], \"sklearn/linear_model/base.py\": [\"ElasticNet.predict\"], \"sklearn/decomposition/truncated_svd.py\": [\"TruncatedSVD.fit\", \"TruncatedSVD\", \"TruncatedSVD.fit_transform\", \"TruncatedSVD.transform\"], \"sklearn/model_selection/_search.py\": [\"GridSearchCV\", \"GridSearchCV.fit\"], \"sklearn/datasets/samples_generator.py\": [\"make_multilabel_classification\", \"make_classification\"], \"sklearn/utils/extmath.py\": [\"_incremental_mean_and_var\"], \"sklearn/covariance/empirical_covariance_.py\": [\"empirical_covariance\"], \"sklearn/utils/_unittest_backport.py\": [\"TestCase.assertRaises\"], \"sklearn/decomposition/base.py\": [\"PCA.transform\"], \"sklearn/decomposition/pca.py\": [\"PCA.fit\", \"PCA\"], \"sklearn/preprocessing/label.py\": [\"LabelEncoder.fit\", \"MultiLabelBinarizer.fit\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'sklearn/datasets/base.py': ['load_boston', 'load_iris', 'load_digits', 'load_diabetes'], 'sklearn/utils/validation.py': ['check_array', 'check_is_fitted', 'check_random_state'], 'sklearn/preprocessing/data.py': ['PowerTransformer._yeo_johnson_transform', 'PowerTransformer._fit', 'StandardScaler.partial_fit', 'StandardScaler._reset', 'PowerTransformer._check_input', 'StandardScaler.transform', 'PowerTransformer._yeo_johnson_optimize', 'StandardScaler.fit', '_handle_zeros_in_scale'], 'sklearn/covariance/graph_lasso_.py': ['graphical_lasso'], 'sklearn/base.py': ['LinearSVR.score', 'ElasticNet.set_params', 'AdaBoostClassifier.get_params'], 'sklearn/linear_model/bayes.py': ['ARDRegression.fit', 'BayesianRidge', 'ARDRegression.predict', 'BayesianRidge.fit', 'BayesianRidge.predict', 'ARDRegression'], 'sklearn/utils/estimator_checks.py': ['_yield_all_checks', 'set_checking_parameters'], 'sklearn/svm/classes.py': ['LinearSVR', 'LinearSVR.fit'], 'sklearn/random_projection.py': ['sparse_random_matrix'], 'sklearn/utils/deprecation.py': ['wrapped'], 'sklearn/linear_model/coordinate_descent.py': ['MultiTaskLasso.fit', 'MultiTaskLasso', 'ElasticNet', 'lasso_path', 'enet_path', 'ElasticNet.fit', 'MultiTaskElasticNet'], 'sklearn/tree/tree.py': ['ExtraTreeClassifier.predict_log_proba', 'ExtraTreeClassifier.fit', 'ExtraTreeClassifier.predict', 'ExtraTreeClassifier.predict_proba'], 'sklearn/linear_model/base.py': ['ElasticNet.predict'], 'sklearn/decomposition/truncated_svd.py': ['TruncatedSVD.fit', 'TruncatedSVD', 'TruncatedSVD.fit_transform', 'TruncatedSVD.transform'], 'sklearn/model_selection/_search.py': ['GridSearchCV', 'GridSearchCV.fit'], 'sklearn/datasets/samples_generator.py': ['make_multilabel_classification', 'make_classification'], 'sklearn/utils/extmath.py': ['_incremental_mean_and_var'], 'sklearn/covariance/empirical_covariance_.py': ['empirical_covariance'], 'sklearn/utils/_unittest_backport.py': ['TestCase.assertRaises'], 'sklearn/decomposition/base.py': ['PCA.transform'], 'sklearn/decomposition/pca.py': ['PCA.fit', 'PCA'], 'sklearn/preprocessing/label.py': ['LabelEncoder.fit', 'MultiLabelBinarizer.fit']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.01350000000000001
}