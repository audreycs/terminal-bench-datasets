{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-12625",
  "patch": "diff --git a/doc/whats_new/_contributors.rst b/doc/whats_new/_contributors.rst\nindex 937fce63219df..270df1fb837fc 100644\n--- a/doc/whats_new/_contributors.rst\n+++ b/doc/whats_new/_contributors.rst\n@@ -48,7 +48,7 @@\n \n .. _Bertrand Thirion: https://team.inria.fr/parietal/bertrand-thirions-page\n \n-.. _Andreas M\u00fcller: https://peekaboo-vision.blogspot.com/\n+.. _Andreas M\u00fcller: https://amueller.github.io/\n \n .. _Matthieu Perrot: http://brainvisa.info/biblio/lnao/en/Author/PERROT-M.html\n \ndiff --git a/doc/whats_new/v0.20.rst b/doc/whats_new/v0.20.rst\nindex 98328cf60457c..7762a3a021d7a 100644\n--- a/doc/whats_new/v0.20.rst\n+++ b/doc/whats_new/v0.20.rst\n@@ -176,6 +176,10 @@ Changelog\n   precision issues in :class:`preprocessing.StandardScaler` and\n   :class:`decomposition.IncrementalPCA` when using float32 datasets.\n   :issue:`12338` by :user:`bauks <bauks>`.\n+\n+- |Fix| Calling :func:`utils.check_array` on `pandas.Series`, which\n+  raised an error in 0.20.0, now returns the expected output again.\n+  :issue:`12625` by `Andreas M\u00fcller`_\n   \n Miscellaneous\n .............\ndiff --git a/sklearn/utils/validation.py b/sklearn/utils/validation.py\nindex 3181b925ba83a..ea2606fe6b6eb 100644\n--- a/sklearn/utils/validation.py\n+++ b/sklearn/utils/validation.py\n@@ -477,7 +477,7 @@ def check_array(array, accept_sparse=False, accept_large_sparse=True,\n     # check if the object contains several dtypes (typically a pandas\n     # DataFrame), and store them. If not, store None.\n     dtypes_orig = None\n-    if hasattr(array, \"dtypes\") and hasattr(array, \"__array__\"):\n+    if hasattr(array, \"dtypes\") and len(array.dtypes):\n         dtypes_orig = np.array(array.dtypes)\n \n     if dtype_numeric:\n",
  "test_patch": "diff --git a/sklearn/utils/tests/test_validation.py b/sklearn/utils/tests/test_validation.py\nindex 997f233807d67..11128d106a50e 100644\n--- a/sklearn/utils/tests/test_validation.py\n+++ b/sklearn/utils/tests/test_validation.py\n@@ -694,6 +694,14 @@ def test_suppress_validation():\n     assert_raises(ValueError, assert_all_finite, X)\n \n \n+def test_check_array_series():\n+    # regression test that check_array works on pandas Series\n+    pd = importorskip(\"pandas\")\n+    res = check_array(pd.Series([1, 2, 3]), ensure_2d=False,\n+                      warn_on_dtype=True)\n+    assert_array_equal(res, np.array([1, 2, 3]))\n+\n+\n def test_check_dataframe_warns_on_dtype():\n     # Check that warn_on_dtype also works for DataFrames.\n     # https://github.com/scikit-learn/scikit-learn/issues/10948\n",
  "base_commit": "ac327c5ad66fa3d4eb607d007e3684dec872d49a",
  "head_commit": "b2e0849796b73b466455d59d2ca748e638f6ca85",
  "created_at": 1542730231000,
  "version": "0.21",
  "duration_changes": "[{\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.03456886112689972, \"head\": 0.1349184475839138}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.11747067421674728, \"head\": 0.025979582220315933}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014042548835277557, \"head\": 0.01413349062204361}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.01679256185889244, \"head\": 0.016873221844434738}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0034740716218948364, \"head\": 0.003497697412967682}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.14640198647975922, \"head\": 0.06189205124974251}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.005563504993915558, \"head\": 0.009186647832393646}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.017747197300195694, \"head\": 0.015177823603153229}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.06582571566104889, \"head\": 0.02551349252462387}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.10486562922596931, \"head\": 0.16376353800296783}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.07012784853577614, \"head\": 0.14109795913100243}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.15454673022031784, \"head\": 0.028868723660707474}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.01437327265739441, \"head\": 0.01385168731212616}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.024915747344493866, \"head\": 0.016830481588840485}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.003492191433906555, \"head\": 0.003475688397884369}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.06425824016332626, \"head\": 0.0683443546295166}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.004769440740346909, \"head\": 0.0627698302268982}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.07631443068385124, \"head\": 0.04703831672668457}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.026883862912654877, \"head\": 0.025438129901885986}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.07765858992934227, \"head\": 0.020694848150014877}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.033914320170879364, \"head\": 0.12637650221586227}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.03102012351155281, \"head\": 0.06330888345837593}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014399699866771698, \"head\": 0.017067760229110718}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.017104126513004303, \"head\": 0.01863020658493042}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0035301223397254944, \"head\": 0.003457598388195038}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.13458732515573502, \"head\": 0.09154125303030014}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.006450973451137543, \"head\": 0.006356962025165558}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.01474020630121231, \"head\": 0.0190446637570858}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.08003253489732742, \"head\": 0.030209042131900787}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.011235222220420837, \"head\": 0.07843820378184319}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.07098923996090889, \"head\": 0.05884630233049393}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.09746969863772392, \"head\": 0.10230313986539841}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014049161225557327, \"head\": 0.01414196565747261}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.0132058747112751, \"head\": 0.01680660992860794}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0026963017880916595, \"head\": 0.0034825801849365234}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.17181635275483131, \"head\": 0.05906834825873375}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.006613567471504211, \"head\": 0.006052695214748383}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.019614174962043762, \"head\": 0.06935320794582367}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.07635197415947914, \"head\": 0.029416285455226898}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.013016726821660995, \"head\": 0.08865173161029816}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.1269923709332943, \"head\": 0.116972167044878}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.026280533522367477, \"head\": 0.07427040487527847}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014297056943178177, \"head\": 0.014193933457136154}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.013349778950214386, \"head\": 0.01704644039273262}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.00272490456700325, \"head\": 0.003507409244775772}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.05497033894062042, \"head\": 0.1545443795621395}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.004848979413509369, \"head\": 0.005002759397029877}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.07307698205113411, \"head\": 0.013867460191249847}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.025908444076776505, \"head\": 0.07526430860161781}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.006721317768096924, \"head\": 0.022530119866132736}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.10712750256061554, \"head\": 0.02607925608754158}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.04833510145545006, \"head\": 0.12461164221167564}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.013946838676929474, \"head\": 0.014737147837877274}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.032498326152563095, \"head\": 0.013732049614191055}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0035623200237751007, \"head\": 0.0027779564261436462}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.11427443102002144, \"head\": 0.06352907791733742}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.007467146962881088, \"head\": 0.005257170647382736}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.07353325933218002, \"head\": 0.074062529951334}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.03187225013971329, \"head\": 0.02738204598426819}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.05671871080994606, \"head\": 0.09267308935523033}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.01755676046013832, \"head\": 0.12919288873672485}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.1362285241484642, \"head\": 0.025316301733255386}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.013901934027671814, \"head\": 0.014093883335590363}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.01696300134062767, \"head\": 0.038200292736291885}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0034651458263397217, \"head\": 0.005187485367059708}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.0984208770096302, \"head\": 0.17893804237246513}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.008334282785654068, \"head\": 0.008703269064426422}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.02582745999097824, \"head\": 0.019765522330999374}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.0758822113275528, \"head\": 0.08207179978489876}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.013310663402080536, \"head\": 0.10138233378529549}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.03493476286530495, \"head\": 0.01470954343676567}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.09842930361628532, \"head\": 0.029691722244024277}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.06826020404696465, \"head\": 0.01424720510840416}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.029914341866970062, \"head\": 0.08194009587168694}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0034391693770885468, \"head\": 0.00290539488196373}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.08892014995217323, \"head\": 0.03858885541558266}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.06520862877368927, \"head\": 0.005640044808387756}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.018777888268232346, \"head\": 0.014910250902175903}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.029584430158138275, \"head\": 0.02771657705307007}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.1443873979151249, \"head\": 0.06962613388895988}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.018320448696613312, \"head\": 0.014738857746124268}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.08795413002371788, \"head\": 0.05755150318145752}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.016338389366865158, \"head\": 0.01427234336733818}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.0925702378153801, \"head\": 0.08223842456936836}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.004459954798221588, \"head\": 0.0027159079909324646}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.08686738088726997, \"head\": 0.037588849663734436}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.006454769521951675, \"head\": 0.0047412775456905365}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.01833142340183258, \"head\": 0.059000164270401}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.07793876901268959, \"head\": 0.025697752833366394}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.07316271588206291, \"head\": 0.06264571473002434}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.03683839365839958, \"head\": 0.056101322174072266}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.03738165274262428, \"head\": 0.10561514645814896}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014163244515657425, \"head\": 0.02458614856004715}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.049650248140096664, \"head\": 0.013424459844827652}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0042543113231658936, \"head\": 0.002725154161453247}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.12167800590395927, \"head\": 0.08591099828481674}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.004831396043300629, \"head\": 0.005134738981723785}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.05362576246261597, \"head\": 0.0720224604010582}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.027697362005710602, \"head\": 0.08331410586833954}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.00341072678565979, \"head\": 0.004129745066165924}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.020485877990722656, \"head\": 0.12859278172254562}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.11823046207427979, \"head\": 0.07182593271136284}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.01422770693898201, \"head\": 0.01768586039543152}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.01331610232591629, \"head\": 0.048828981816768646}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.002725355327129364, \"head\": 0.00966009870171547}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.07620889320969582, \"head\": 0.06574484705924988}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.0048050470650196075, \"head\": 0.005547914654016495}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.013651926070451736, \"head\": 0.013721928000450134}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.08239789679646492, \"head\": 0.06600970402359962}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.08279909938573837, \"head\": 0.012617968022823334}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.13332805782556534, \"head\": 0.02097192034125328}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.040388356894254684, \"head\": 0.14176754653453827}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.013790726661682129, \"head\": 0.014891210943460464}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.026856258511543274, \"head\": 0.02473565936088562}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0036370232701301575, \"head\": 0.0036058612167835236}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.11265622824430466, \"head\": 0.15425072982907295}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.004680570214986801, \"head\": 0.006644267588853836}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.013601027429103851, \"head\": 0.02010057121515274}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.025790803134441376, \"head\": 0.0786144807934761}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.0666641928255558, \"head\": 0.010951709002256393}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.13781538605690002, \"head\": 0.09536981955170631}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.03750774264335632, \"head\": 0.03623254969716072}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.016966890543699265, \"head\": 0.017956729978322983}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.05078412964940071, \"head\": 0.05063958838582039}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.003468342125415802, \"head\": 0.0028002969920635223}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.07864044979214668, \"head\": 0.03954576328396797}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.006400197744369507, \"head\": 0.006372585892677307}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.018677137792110443, \"head\": 0.014827586710453033}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.06624253839254379, \"head\": 0.027685318142175674}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.06808825209736824, \"head\": 0.04569237306714058}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.01851695403456688, \"head\": 0.030710667371749878}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.15603461116552353, \"head\": 0.1025107279419899}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.013949617743492126, \"head\": 0.013908188790082932}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.01682976260781288, \"head\": 0.016886688768863678}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0034844838082790375, \"head\": 0.034473296254873276}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.08180034905672073, \"head\": 0.10731293261051178}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.06476634368300438, \"head\": 0.004963953047990799}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.013746511191129684, \"head\": 0.013645540922880173}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.025463398545980453, \"head\": 0.08064914494752884}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.06086137145757675, \"head\": 0.02495492622256279}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.06452343612909317, \"head\": 0.11665396764874458}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.1110515221953392, \"head\": 0.07770765200257301}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014022883027791977, \"head\": 0.014119435101747513}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.016839679330587387, \"head\": 0.014340318739414215}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0034851618111133575, \"head\": 0.0027205348014831543}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.1239333264529705, \"head\": 0.07527420297265053}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.004799317568540573, \"head\": 0.004710409790277481}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.016501881182193756, \"head\": 0.014703061431646347}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.08226313069462776, \"head\": 0.025826912373304367}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.02761596068739891, \"head\": 0.012069225311279297}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.04928669333457947, \"head\": 0.018074840307235718}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.034352898597717285, \"head\": 0.057943716645240784}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.01408245787024498, \"head\": 0.08414143696427345}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.016953855752944946, \"head\": 0.021303795278072357}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0035141073167324066, \"head\": 0.003566611558198929}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.06135588139295578, \"head\": 0.08955934271216393}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.005179479718208313, \"head\": 0.006572328507900238}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.07438423112034798, \"head\": 0.06923205405473709}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.030834771692752838, \"head\": 0.03254252299666405}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.052846428006887436, \"head\": 0.0817791111767292}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.09428532049059868, \"head\": 0.06499199941754341}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.10673575475811958, \"head\": 0.10026277974247932}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.013957366347312927, \"head\": 0.014066264033317566}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.016813550144433975, \"head\": 0.017763957381248474}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.003505989909172058, \"head\": 0.0030931346118450165}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.07087283954024315, \"head\": 0.07982300966978073}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.005798906087875366, \"head\": 0.006451074033975601}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.019102655351161957, \"head\": 0.036851827055215836}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.030305985361337662, \"head\": 0.08280245587229729}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.06293171644210815, \"head\": 0.013006448745727539}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.18297775089740753, \"head\": 0.03386426717042923}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.02863573282957077, \"head\": 0.11795734614133835}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.01474730670452118, \"head\": 0.014033108949661255}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.016567520797252655, \"head\": 0.04074084758758545}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0027768462896347046, \"head\": 0.0035662464797496796}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.0543006993830204, \"head\": 0.10196118801832199}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.00489472970366478, \"head\": 0.006426382809877396}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.06635622307658195, \"head\": 0.019071679562330246}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.026467658579349518, \"head\": 0.08362089842557907}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.061300236731767654, \"head\": 0.011330459266901016}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.021037515252828598, \"head\": 0.03153369575738907}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.11594630405306816, \"head\": 0.10185158252716064}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.014216095209121704, \"head\": 0.01390695571899414}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.01666693389415741, \"head\": 0.01331326737999916}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.0027394890785217285, \"head\": 0.0027170218527317047}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.07791037857532501, \"head\": 0.08515460044145584}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.004763368517160416, \"head\": 0.062160424888134}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.07338261976838112, \"head\": 0.024672452360391617}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.02600371465086937, \"head\": 0.039582230150699615}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.062319882214069366, \"head\": 0.034818071871995926}}, {\"sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering\": {\"base\": 0.01452833041548729, \"head\": 0.1755099594593048}, \"sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]\": {\"base\": 0.04006868228316307, \"head\": 0.027336042374372482}, \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\": {\"base\": 0.01443471759557724, \"head\": 0.014139089733362198}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset\": {\"base\": 0.013838164508342743, \"head\": 0.017085257917642593}, \"sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset\": {\"base\": 0.002719055861234665, \"head\": 0.0035408735275268555}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]\": {\"base\": 0.09419166296720505, \"head\": 0.0631902702152729}, \"sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]\": {\"base\": 0.0048192329704761505, \"head\": 0.005799226462841034}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]\": {\"base\": 0.01372797042131424, \"head\": 0.07429217174649239}, \"sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]\": {\"base\": 0.07535996288061142, \"head\": 0.02626907452940941}, \"sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights\": {\"base\": 0.020993392914533615, \"head\": 0.07296381145715714}}]",
  "efficiency_test": [
    "sklearn/cluster/bicluster.py::sklearn.cluster.bicluster.SpectralCoclustering",
    "sklearn/decomposition/tests/test_sparse_pca.py::test_transform_nan[False]",
    "sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]",
    "sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_enet_not_as_toy_dataset",
    "sklearn/linear_model/tests/test_sparse_coordinate_descent.py::test_sparse_lasso_not_as_toy_dataset",
    "sklearn/tests/test_common.py::test_non_meta_estimators[GaussianProcessClassifier-GaussianProcessClassifier-check_estimators_dtypes]",
    "sklearn/tests/test_common.py::test_non_meta_estimators[GaussianRandomProjection-GaussianRandomProjection-check_estimators_dtypes]",
    "sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNetCV-MultiTaskElasticNetCV-check_fit_score_takes_y]",
    "sklearn/tests/test_common.py::test_non_meta_estimators[RandomForestClassifier-RandomForestClassifier-check_methods_subset_invariance]",
    "sklearn/tests/test_kernel_ridge.py::test_kernel_ridge_sample_weights"
  ],
  "patch_functions": "{\"sklearn/utils/validation.py\": [\"check_array\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'sklearn/utils/validation.py': ['check_array']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"sklearn/datasets/base.py\": [\"load_boston\", \"load_iris\"], \"sklearn/utils/validation.py\": [\"check_array\", \"assert_all_finite\", \"check_random_state\"], \"sklearn/utils/extmath.py\": [\"randomized_svd\", \"make_nonnegative\"], \"sklearn/datasets/samples_generator.py\": [\"make_hastie_10_2\", \"make_classification\", \"make_regression\"], \"sklearn/base.py\": [\"ElasticNet.score\", \"Lasso.score\", \"ExtraTreeClassifier.set_params\", \"AdaBoostClassifier.get_params\", \"SparsePCA.fit_transform\"], \"sklearn/cluster/bicluster.py\": [\"SpectralCoclustering._fit\", \"SpectralCoclustering._k_means\", \"<listcomp>\", \"_scale_normalize\", \"SpectralCoclustering._check_parameters\", \"SpectralCoclustering._svd\"], \"sklearn/utils/estimator_checks.py\": [\"_yield_all_checks\", \"set_checking_parameters\"], \"sklearn/linear_model/base.py\": [\"Ridge.predict\"], \"sklearn/utils/deprecation.py\": [\"wrapped\"], \"sklearn/externals/six.py\": [\"with_metaclass\"], \"sklearn/decomposition/sparse_pca.py\": [\"SparsePCA\"], \"sklearn/kernel_ridge.py\": [\"KernelRidge.predict\", \"KernelRidge\", \"KernelRidge.fit\"], \"sklearn/tree/tree.py\": [\"ExtraTreeClassifier.fit\", \"ExtraTreeClassifier.apply\"], \"sklearn/linear_model/coordinate_descent.py\": [\"ElasticNet\", \"Lasso.fit\", \"ElasticNet.fit\", \"Lasso\"], \"sklearn/externals/joblib/parallel.py\": [\"get_active_backend\", \"register_parallel_backend\"], \"sklearn/linear_model/ridge.py\": [\"Ridge\", \"Ridge.fit\"], \"sklearn/ensemble/forest.py\": [\"ExtraTreesClassifier.fit\", \"ExtraTreesClassifier.apply\"], \"sklearn/cluster/k_means_.py\": [\"KMeans.fit\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'sklearn/datasets/base.py': ['load_boston', 'load_iris'], 'sklearn/utils/validation.py': ['check_array', 'assert_all_finite', 'check_random_state'], 'sklearn/utils/extmath.py': ['randomized_svd', 'make_nonnegative'], 'sklearn/datasets/samples_generator.py': ['make_hastie_10_2', 'make_classification', 'make_regression'], 'sklearn/base.py': ['ElasticNet.score', 'Lasso.score', 'ExtraTreeClassifier.set_params', 'AdaBoostClassifier.get_params', 'SparsePCA.fit_transform'], 'sklearn/cluster/bicluster.py': ['SpectralCoclustering._fit', 'SpectralCoclustering._k_means', '<listcomp>', '_scale_normalize', 'SpectralCoclustering._check_parameters', 'SpectralCoclustering._svd'], 'sklearn/utils/estimator_checks.py': ['_yield_all_checks', 'set_checking_parameters'], 'sklearn/linear_model/base.py': ['Ridge.predict'], 'sklearn/utils/deprecation.py': ['wrapped'], 'sklearn/externals/six.py': ['with_metaclass'], 'sklearn/decomposition/sparse_pca.py': ['SparsePCA'], 'sklearn/kernel_ridge.py': ['KernelRidge.predict', 'KernelRidge', 'KernelRidge.fit'], 'sklearn/tree/tree.py': ['ExtraTreeClassifier.fit', 'ExtraTreeClassifier.apply'], 'sklearn/linear_model/coordinate_descent.py': ['ElasticNet', 'Lasso.fit', 'ElasticNet.fit', 'Lasso'], 'sklearn/externals/joblib/parallel.py': ['get_active_backend', 'register_parallel_backend'], 'sklearn/linear_model/ridge.py': ['Ridge', 'Ridge.fit'], 'sklearn/ensemble/forest.py': ['ExtraTreesClassifier.fit', 'ExtraTreesClassifier.apply'], 'sklearn/cluster/k_means_.py': ['KMeans.fit']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.008700000000000006
}