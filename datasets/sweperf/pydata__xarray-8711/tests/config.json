{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-8711",
  "patch": "diff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex c1bfaba8756..8391ebd32ca 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -28,12 +28,13 @@ New Features\n   By `Etienne Schalk <https://github.com/etienneschalk>`_ and `Deepak Cherian <https://github.com/dcherian>`_.\n - Add the ``.oindex`` property to Explicitly Indexed Arrays for orthogonal indexing functionality. (:issue:`8238`, :pull:`8750`)\n   By `Anderson Banihirwe <https://github.com/andersy005>`_.\n-\n - Add the ``.vindex`` property to Explicitly Indexed Arrays for vectorized indexing functionality. (:issue:`8238`, :pull:`8780`)\n   By `Anderson Banihirwe <https://github.com/andersy005>`_.\n-\n - Expand use of ``.oindex`` and ``.vindex`` properties. (:pull: `8790`)\n   By `Anderson Banihirwe <https://github.com/andersy005>`_ and `Deepak Cherian <https://github.com/dcherian>`_.\n+- Allow creating :py:class:`xr.Coordinates` objects with no indexes (:pull:`8711`)\n+  By `Benoit Bovy <https://github.com/benbovy>`_ and `Tom Nicholas\n+  <https://github.com/TomNicholas>`_.\n \n Breaking changes\n ~~~~~~~~~~~~~~~~\ndiff --git a/xarray/core/coordinates.py b/xarray/core/coordinates.py\nindex 2adc4527285..251edd1fc6f 100644\n--- a/xarray/core/coordinates.py\n+++ b/xarray/core/coordinates.py\n@@ -298,7 +298,7 @@ def __init__(\n         else:\n             variables = {}\n             for name, data in coords.items():\n-                var = as_variable(data, name=name)\n+                var = as_variable(data, name=name, auto_convert=False)\n                 if var.dims == (name,) and indexes is None:\n                     index, index_vars = create_default_index_implicit(var, list(coords))\n                     default_indexes.update({k: index for k in index_vars})\n@@ -998,9 +998,12 @@ def create_coords_with_default_indexes(\n         if isinstance(obj, DataArray):\n             dataarray_coords.append(obj.coords)\n \n-        variable = as_variable(obj, name=name)\n+        variable = as_variable(obj, name=name, auto_convert=False)\n \n         if variable.dims == (name,):\n+            # still needed to convert to IndexVariable first due to some\n+            # pandas multi-index edge cases.\n+            variable = variable.to_index_variable()\n             idx, idx_vars = create_default_index_implicit(variable, all_variables)\n             indexes.update({k: idx for k in idx_vars})\n             variables.update(idx_vars)\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 64f02fa3b44..389316d67c2 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -159,7 +159,9 @@ def _infer_coords_and_dims(\n                 dims = list(coords.keys())\n             else:\n                 for n, (dim, coord) in enumerate(zip(dims, coords)):\n-                    coord = as_variable(coord, name=dims[n]).to_index_variable()\n+                    coord = as_variable(\n+                        coord, name=dims[n], auto_convert=False\n+                    ).to_index_variable()\n                     dims[n] = coord.name\n     dims_tuple = tuple(dims)\n     if len(dims_tuple) != len(shape):\n@@ -179,10 +181,12 @@ def _infer_coords_and_dims(\n         new_coords = {}\n         if utils.is_dict_like(coords):\n             for k, v in coords.items():\n-                new_coords[k] = as_variable(v, name=k)\n+                new_coords[k] = as_variable(v, name=k, auto_convert=False)\n+                if new_coords[k].dims == (k,):\n+                    new_coords[k] = new_coords[k].to_index_variable()\n         elif coords is not None:\n             for dim, coord in zip(dims_tuple, coords):\n-                var = as_variable(coord, name=dim)\n+                var = as_variable(coord, name=dim, auto_convert=False)\n                 var.dims = (dim,)\n                 new_coords[dim] = var.to_index_variable()\n \n@@ -204,11 +208,17 @@ def _check_data_shape(\n                 return data\n             else:\n                 data_shape = tuple(\n-                    as_variable(coords[k], k).size if k in coords.keys() else 1\n+                    (\n+                        as_variable(coords[k], k, auto_convert=False).size\n+                        if k in coords.keys()\n+                        else 1\n+                    )\n                     for k in dims\n                 )\n         else:\n-            data_shape = tuple(as_variable(coord, \"foo\").size for coord in coords)\n+            data_shape = tuple(\n+                as_variable(coord, \"foo\", auto_convert=False).size for coord in coords\n+            )\n         data = np.full(data_shape, data)\n     return data\n \ndiff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex a689620e524..cbd06c8fdc5 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -355,7 +355,7 @@ def append_all(variables, indexes):\n                 indexes_.pop(name, None)\n                 append_all(coords_, indexes_)\n \n-            variable = as_variable(variable, name=name)\n+            variable = as_variable(variable, name=name, auto_convert=False)\n             if name in indexes:\n                 append(name, variable, indexes[name])\n             elif variable.dims == (name,):\ndiff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 2ac0c04d726..ec284e411fc 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -33,6 +33,7 @@\n     decode_numpy_dict_values,\n     drop_dims_from_indexers,\n     either_dict_or_kwargs,\n+    emit_user_level_warning,\n     ensure_us_time_resolution,\n     infix_dims,\n     is_dict_like,\n@@ -80,7 +81,9 @@ class MissingDimensionsError(ValueError):\n     # TODO: move this to an xarray.exceptions module?\n \n \n-def as_variable(obj: T_DuckArray | Any, name=None) -> Variable | IndexVariable:\n+def as_variable(\n+    obj: T_DuckArray | Any, name=None, auto_convert: bool = True\n+) -> Variable | IndexVariable:\n     \"\"\"Convert an object into a Variable.\n \n     Parameters\n@@ -100,6 +103,9 @@ def as_variable(obj: T_DuckArray | Any, name=None) -> Variable | IndexVariable:\n           along a dimension of this given name.\n         - Variables with name matching one of their dimensions are converted\n           into `IndexVariable` objects.\n+    auto_convert : bool, optional\n+        For internal use only! If True, convert a \"dimension\" variable into\n+        an IndexVariable object (deprecated).\n \n     Returns\n     -------\n@@ -150,9 +156,15 @@ def as_variable(obj: T_DuckArray | Any, name=None) -> Variable | IndexVariable:\n             f\"explicit list of dimensions: {obj!r}\"\n         )\n \n-    if name is not None and name in obj.dims and obj.ndim == 1:\n-        # automatically convert the Variable into an Index\n-        obj = obj.to_index_variable()\n+    if auto_convert:\n+        if name is not None and name in obj.dims and obj.ndim == 1:\n+            # automatically convert the Variable into an Index\n+            emit_user_level_warning(\n+                f\"variable {name!r} with name matching its dimension will not be \"\n+                \"automatically converted into an `IndexVariable` object in the future.\",\n+                FutureWarning,\n+            )\n+            obj = obj.to_index_variable()\n \n     return obj\n \n@@ -706,8 +718,10 @@ def _broadcast_indexes_vectorized(self, key):\n                 variable = (\n                     value\n                     if isinstance(value, Variable)\n-                    else as_variable(value, name=dim)\n+                    else as_variable(value, name=dim, auto_convert=False)\n                 )\n+                if variable.dims == (dim,):\n+                    variable = variable.to_index_variable()\n                 if variable.dtype.kind == \"b\":  # boolean indexing case\n                     (variable,) = variable._nonzero()\n \n",
  "test_patch": "diff --git a/xarray/tests/test_coordinates.py b/xarray/tests/test_coordinates.py\nindex 68ce55b05da..40743194ce6 100644\n--- a/xarray/tests/test_coordinates.py\n+++ b/xarray/tests/test_coordinates.py\n@@ -8,6 +8,7 @@\n from xarray.core.dataarray import DataArray\n from xarray.core.dataset import Dataset\n from xarray.core.indexes import PandasIndex, PandasMultiIndex\n+from xarray.core.variable import IndexVariable\n from xarray.tests import assert_identical, source_ndarray\n \n \n@@ -23,10 +24,12 @@ def test_init_default_index(self) -> None:\n         assert_identical(coords.to_dataset(), expected)\n         assert \"x\" in coords.xindexes\n \n+    @pytest.mark.filterwarnings(\"error:IndexVariable\")\n     def test_init_no_default_index(self) -> None:\n         # dimension coordinate with no default index (explicit)\n         coords = Coordinates(coords={\"x\": [1, 2]}, indexes={})\n         assert \"x\" not in coords.xindexes\n+        assert not isinstance(coords[\"x\"], IndexVariable)\n \n     def test_init_from_coords(self) -> None:\n         expected = Dataset(coords={\"foo\": (\"x\", [0, 1, 2])})\ndiff --git a/xarray/tests/test_variable.py b/xarray/tests/test_variable.py\nindex 061510f2515..d9289aa6674 100644\n--- a/xarray/tests/test_variable.py\n+++ b/xarray/tests/test_variable.py\n@@ -1216,7 +1216,8 @@ def test_as_variable(self):\n         with pytest.raises(TypeError, match=r\"without an explicit list of dimensions\"):\n             as_variable(data)\n \n-        actual = as_variable(data, name=\"x\")\n+        with pytest.warns(FutureWarning, match=\"IndexVariable\"):\n+            actual = as_variable(data, name=\"x\")\n         assert_identical(expected.to_index_variable(), actual)\n \n         actual = as_variable(0)\n@@ -1234,9 +1235,11 @@ def test_as_variable(self):\n \n         # test datetime, timedelta conversion\n         dt = np.array([datetime(1999, 1, 1) + timedelta(days=x) for x in range(10)])\n-        assert as_variable(dt, \"time\").dtype.kind == \"M\"\n+        with pytest.warns(FutureWarning, match=\"IndexVariable\"):\n+            assert as_variable(dt, \"time\").dtype.kind == \"M\"\n         td = np.array([timedelta(days=x) for x in range(10)])\n-        assert as_variable(td, \"time\").dtype.kind == \"m\"\n+        with pytest.warns(FutureWarning, match=\"IndexVariable\"):\n+            assert as_variable(td, \"time\").dtype.kind == \"m\"\n \n         with pytest.raises(TypeError):\n             as_variable((\"x\", DataArray([])))\n",
  "base_commit": "2f34895a1e9e8a051886ed958fd88e991e2e2664",
  "head_commit": "55c0b1922b24c6acc0493b51952cc7bea8645cb9",
  "created_at": 1707170676000,
  "version": "2023.07",
  "duration_changes": "[{\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03300486505031586, \"head\": 0.02981257066130638}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.018550071865320206, \"head\": 0.01884150132536888}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.01706850901246071, \"head\": 0.01703421026468277}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013906799256801605, \"head\": 0.013232465833425522}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015455912798643112, \"head\": 0.01453227549791336}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.017039705067873, \"head\": 0.014873959124088287}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.018482334911823273, \"head\": 0.017176348716020584}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.018441662192344666, \"head\": 0.018382064998149872}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.010099180042743683, \"head\": 0.009821482002735138}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009207457304000854, \"head\": 0.008810237050056458}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.01168537512421608, \"head\": 0.010990794748067856}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02216898649930954, \"head\": 0.020986251533031464}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023083046078681946, \"head\": 0.02309759333729744}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024508140981197357, \"head\": 0.025246895849704742}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.8189524449408054, \"head\": 0.7575278542935848}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5004892982542515, \"head\": 0.5021173320710659}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.039101678878068924, \"head\": 0.03815796226263046}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06526746973395348, \"head\": 0.06398019939661026}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.026013419032096863, \"head\": 0.024542246013879776}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.0239945687353611, \"head\": 0.0247962586581707}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009665146470069885, \"head\": 0.009472902864217758}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.034305669367313385, \"head\": 0.03404159098863602}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06033847853541374, \"head\": 0.059368107467889786}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07224752753973007, \"head\": 0.06963061541318893}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.044829025864601135, \"head\": 0.04554975405335426}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009827777743339539, \"head\": 0.010066669434309006}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008603367954492569, \"head\": 0.00992526113986969}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04654991626739502, \"head\": 0.04514266923069954}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13594673946499825, \"head\": 0.1318657174706459}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.033409036695957184, \"head\": 0.03383360058069229}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009163942188024521, \"head\": 0.009374264627695084}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014775894582271576, \"head\": 0.014186687767505646}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.030426394194364548, \"head\": 0.030788417905569077}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.017853975296020508, \"head\": 0.018718261271715164}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.01599234715104103, \"head\": 0.01603923738002777}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013176195323467255, \"head\": 0.014052383601665497}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015580188482999802, \"head\": 0.016645770519971848}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015158053487539291, \"head\": 0.015674352645874023}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.01725124567747116, \"head\": 0.017212525010108948}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.017773546278476715, \"head\": 0.018318887799978256}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009374108165502548, \"head\": 0.009586118161678314}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.00908733531832695, \"head\": 0.01011902466416359}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011262748390436172, \"head\": 0.012256879359483719}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.021184485405683517, \"head\": 0.02068348601460457}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.02234276384115219, \"head\": 0.02260294184088707}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.02455926313996315, \"head\": 0.02449033036828041}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.751666072756052, \"head\": 0.7574731484055519}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5088772736489773, \"head\": 0.4954804331064224}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03840875253081322, \"head\": 0.03925230726599693}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06583837792277336, \"head\": 0.07061367109417915}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.025076627731323242, \"head\": 0.024396676570177078}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.025101881474256516, \"head\": 0.024110130965709686}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.00983668863773346, \"head\": 0.009366031736135483}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03371033817529678, \"head\": 0.03447335213422775}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06156798452138901, \"head\": 0.06498968601226807}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07013722881674767, \"head\": 0.07241259515285492}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04623434320092201, \"head\": 0.044370025396347046}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009284187108278275, \"head\": 0.0093180350959301}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.00861997902393341, \"head\": 0.008639797568321228}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04595388472080231, \"head\": 0.04571818932890892}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13265050202608109, \"head\": 0.1332276351749897}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.0332370400428772, \"head\": 0.033678531646728516}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009479988366365433, \"head\": 0.00930846855044365}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.015530973672866821, \"head\": 0.014919336885213852}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03049331158399582, \"head\": 0.030204057693481445}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.01984376460313797, \"head\": 0.018245156854391098}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.017052534967660904, \"head\": 0.015621844679117203}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.019169718027114868, \"head\": 0.013013098388910294}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.020251281559467316, \"head\": 0.0146135613322258}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.01658518612384796, \"head\": 0.014974430203437805}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.017996981739997864, \"head\": 0.018604911863803864}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.017710983753204346, \"head\": 0.01806030049920082}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009414460510015488, \"head\": 0.009429533034563065}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009000804275274277, \"head\": 0.00894230604171753}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011188820004463196, \"head\": 0.011278722435235977}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.020313356071710587, \"head\": 0.02067497745156288}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.022453755140304565, \"head\": 0.022970862686634064}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024484090507030487, \"head\": 0.023502927273511887}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7755244597792625, \"head\": 0.7692800611257553}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.49866311997175217, \"head\": 0.517198920249939}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.04648155719041824, \"head\": 0.03818821161985397}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.07330166921019554, \"head\": 0.06413289532065392}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.027268659323453903, \"head\": 0.02518784999847412}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024929258972406387, \"head\": 0.02517727017402649}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.010339781641960144, \"head\": 0.010551061481237411}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.0350504107773304, \"head\": 0.034232571721076965}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06303025037050247, \"head\": 0.060266103595495224}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.0729246512055397, \"head\": 0.07136441767215729}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04653630778193474, \"head\": 0.04525019973516464}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009620986878871918, \"head\": 0.00951516255736351}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008795730769634247, \"head\": 0.008632000535726547}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04731196537613869, \"head\": 0.047035928815603256}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13625318557024002, \"head\": 0.13391640037298203}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.0336293950676918, \"head\": 0.03496452793478966}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.00931360200047493, \"head\": 0.009519029408693314}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.015927881002426147, \"head\": 0.01506916806101799}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.030584774911403656, \"head\": 0.030366752296686172}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.01887274906039238, \"head\": 0.019005771726369858}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016550634056329727, \"head\": 0.01590985804796219}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013389594852924347, \"head\": 0.013247702270746231}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014760885387659073, \"head\": 0.01467829942703247}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.01487654447555542, \"head\": 0.01571952924132347}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.017558086663484573, \"head\": 0.01762605458498001}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01963309943675995, \"head\": 0.01800473779439926}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.011439483612775803, \"head\": 0.009439047425985336}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.013551943004131317, \"head\": 0.009072437882423401}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.014965139329433441, \"head\": 0.011374950408935547}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.026772014796733856, \"head\": 0.020899098366498947}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.02844284102320671, \"head\": 0.022914718836545944}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.026345759630203247, \"head\": 0.02440432831645012}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7948530055582523, \"head\": 0.7808814831078053}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.4994705729186535, \"head\": 0.5184321179986}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03904162719845772, \"head\": 0.03829284757375717}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06663824990391731, \"head\": 0.06652410328388214}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.02494097128510475, \"head\": 0.024200323969125748}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024130117148160934, \"head\": 0.024077367037534714}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009579826146364212, \"head\": 0.009658120572566986}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03470732644200325, \"head\": 0.03368445858359337}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06319516524672508, \"head\": 0.05996718257665634}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07084472849965096, \"head\": 0.07093271240592003}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04440130665898323, \"head\": 0.04517102241516113}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009274352341890335, \"head\": 0.009524863213300705}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008579622954130173, \"head\": 0.009113200008869171}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.046171072870492935, \"head\": 0.046333421021699905}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13257605955004692, \"head\": 0.1334277130663395}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03380175307393074, \"head\": 0.033262789249420166}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.00924927368760109, \"head\": 0.009211894124746323}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014807835221290588, \"head\": 0.015087362378835678}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.030237793922424316, \"head\": 0.03049037605524063}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.018902797251939774, \"head\": 0.0183047316968441}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.01589113101363182, \"head\": 0.01602640002965927}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013478938490152359, \"head\": 0.013244576752185822}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014516495168209076, \"head\": 0.015125937759876251}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.014792166650295258, \"head\": 0.015360955148935318}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.01785752922296524, \"head\": 0.017475690692663193}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01760212332010269, \"head\": 0.018127702176570892}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009428702294826508, \"head\": 0.009413979947566986}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.008964356034994125, \"head\": 0.00900232046842575}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.01104016974568367, \"head\": 0.011500824242830276}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.0202646367251873, \"head\": 0.0285162515938282}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.022661574184894562, \"head\": 0.031500816345214844}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024070724844932556, \"head\": 0.025437351316213608}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7725622095167637, \"head\": 0.7632122561335564}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.4885084815323353, \"head\": 0.47665925696492195}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.037013351917266846, \"head\": 0.03816546872258186}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06453816220164299, \"head\": 0.06577275693416595}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.023955486714839935, \"head\": 0.02278953418135643}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.023695427924394608, \"head\": 0.022246289998292923}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009320855140686035, \"head\": 0.008886098861694336}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.0330934002995491, \"head\": 0.030985377728939056}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.059114109724760056, \"head\": 0.05927758663892746}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07009761780500412, \"head\": 0.06986028701066971}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.044103603810071945, \"head\": 0.045461513102054596}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009123753756284714, \"head\": 0.010907523334026337}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008557382971048355, \"head\": 0.008479297161102295}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.045693203806877136, \"head\": 0.047722116112709045}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13316572085022926, \"head\": 0.1374332457780838}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.034121591597795486, \"head\": 0.03595100715756416}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009321369230747223, \"head\": 0.009744584560394287}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014242645353078842, \"head\": 0.01669551432132721}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.030885446816682816, \"head\": 0.03025030344724655}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.020007826387882233, \"head\": 0.01783037930727005}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016813118010759354, \"head\": 0.016308821737766266}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.01364411786198616, \"head\": 0.013411201536655426}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015894193202257156, \"head\": 0.01636454463005066}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.016385573893785477, \"head\": 0.014780964702367783}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.018350936472415924, \"head\": 0.016820378601551056}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01871855929493904, \"head\": 0.018162723630666733}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.00992724671959877, \"head\": 0.010317806154489517}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009281571954488754, \"head\": 0.009746488183736801}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.01169608160853386, \"head\": 0.011047884821891785}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.021235782653093338, \"head\": 0.020711537450551987}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023428574204444885, \"head\": 0.022045083343982697}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024937834590673447, \"head\": 0.025233197957277298}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7625660598278046, \"head\": 0.7439738996326923}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5106686726212502, \"head\": 0.5284624435007572}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.039224330335855484, \"head\": 0.04198939725756645}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06921755895018578, \"head\": 0.06265996769070625}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.026158999651670456, \"head\": 0.02463432401418686}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.025553200393915176, \"head\": 0.0248810276389122}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009788457304239273, \"head\": 0.009971082210540771}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.034124188125133514, \"head\": 0.03487830609083176}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.0620211586356163, \"head\": 0.05970418080687523}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07159304618835449, \"head\": 0.07067843526601791}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.044898536056280136, \"head\": 0.04383515939116478}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.00938102975487709, \"head\": 0.009497720748186111}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008644696325063705, \"head\": 0.008726958185434341}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.0462757907807827, \"head\": 0.04563117399811745}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13298295810818672, \"head\": 0.1317519024014473}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03329174593091011, \"head\": 0.033855464309453964}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009328003972768784, \"head\": 0.009281642735004425}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014710932970046997, \"head\": 0.013791784644126892}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03088754042983055, \"head\": 0.030540533363819122}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.022224873304367065, \"head\": 0.019221656024456024}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.018447160720825195, \"head\": 0.016055162996053696}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013371080160140991, \"head\": 0.01322881132364273}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015349172055721283, \"head\": 0.015602689236402512}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015757307410240173, \"head\": 0.016797848045825958}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.020038049668073654, \"head\": 0.02010340243577957}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.020501431077718735, \"head\": 0.017930228263139725}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009791042655706406, \"head\": 0.009729325771331787}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009150296449661255, \"head\": 0.009004931896924973}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011332400143146515, \"head\": 0.011228464543819427}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.020563416182994843, \"head\": 0.020352840423583984}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.022799022495746613, \"head\": 0.022985070943832397}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024700067937374115, \"head\": 0.02368125692009926}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7592501752078533, \"head\": 0.768174085766077}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5013326853513718, \"head\": 0.4937380664050579}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03846283629536629, \"head\": 0.03899306431412697}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06696008518338203, \"head\": 0.06570765748620033}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.023991122841835022, \"head\": 0.024248972535133362}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024003703147172928, \"head\": 0.024010829627513885}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009415347129106522, \"head\": 0.009516969323158264}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03465096652507782, \"head\": 0.03350396081805229}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.059898145496845245, \"head\": 0.059689801186323166}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07146962359547615, \"head\": 0.06953197345137596}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.044527046382427216, \"head\": 0.04524486884474754}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009188078343868256, \"head\": 0.009282354265451431}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008876841515302658, \"head\": 0.008527375757694244}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04527534916996956, \"head\": 0.044644199311733246}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13388656452298164, \"head\": 0.13275539875030518}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03287387639284134, \"head\": 0.03306135907769203}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009108375757932663, \"head\": 0.009166605770587921}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014441307634115219, \"head\": 0.014331594109535217}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03022744134068489, \"head\": 0.02994302660226822}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.024830412119627, \"head\": 0.01778881996870041}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016992684453725815, \"head\": 0.015808477997779846}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.014971759170293808, \"head\": 0.013222012668848038}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.01593223214149475, \"head\": 0.014947965741157532}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.01746540144085884, \"head\": 0.016117576509714127}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.020262014120817184, \"head\": 0.01692214235663414}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.018897470086812973, \"head\": 0.017692871391773224}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.00996292382478714, \"head\": 0.00931929424405098}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009140778332948685, \"head\": 0.009220629930496216}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011271525174379349, \"head\": 0.011247452348470688}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.020603395998477936, \"head\": 0.020523101091384888}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023137029260396957, \"head\": 0.022313017398118973}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024005763232707977, \"head\": 0.023910030722618103}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7654109597206116, \"head\": 0.7512655667960644}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5256251655519009, \"head\": 0.5163232833147049}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03908070921897888, \"head\": 0.03792620822787285}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.07064426317811012, \"head\": 0.06350832432508469}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.02534499019384384, \"head\": 0.02410620078444481}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024828016757965088, \"head\": 0.02537122741341591}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.010167323052883148, \"head\": 0.009470410645008087}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.034692876040935516, \"head\": 0.033466726541519165}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.061528779566287994, \"head\": 0.05898289754986763}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07371192798018456, \"head\": 0.06989143788814545}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04635510593652725, \"head\": 0.043754857033491135}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009956300258636475, \"head\": 0.009329032152891159}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008656598627567291, \"head\": 0.008710343390703201}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04721035808324814, \"head\": 0.04719564691185951}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1358107551932335, \"head\": 0.1355140246450901}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.0331534743309021, \"head\": 0.0341983288526535}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009219054132699966, \"head\": 0.009765133261680603}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014589264988899231, \"head\": 0.014268431812524796}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03131513670086861, \"head\": 0.030476048588752747}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.0193595290184021, \"head\": 0.01992848515510559}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016421768814325333, \"head\": 0.01597537100315094}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013272438198328018, \"head\": 0.01329607143998146}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014588519930839539, \"head\": 0.014967985451221466}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015310171991586685, \"head\": 0.016476411372423172}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.018667221069335938, \"head\": 0.017359033226966858}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.019565794616937637, \"head\": 0.017908327281475067}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009769078344106674, \"head\": 0.009298443794250488}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009089134633541107, \"head\": 0.008976850658655167}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011325590312480927, \"head\": 0.011308714747428894}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02160559967160225, \"head\": 0.020652957260608673}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.02378426492214203, \"head\": 0.022863030433654785}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.0252673402428627, \"head\": 0.02411678060889244}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7910513356328011, \"head\": 0.7676005959510803}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5260962769389153, \"head\": 0.5151037015020847}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03989386931061745, \"head\": 0.04209226369857788}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06404633820056915, \"head\": 0.07606909424066544}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.02639824151992798, \"head\": 0.02644032984972}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.025269005447626114, \"head\": 0.026458892971277237}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009823441505432129, \"head\": 0.0100817009806633}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.033882420510053635, \"head\": 0.034502580761909485}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06131007894873619, \"head\": 0.06179260462522507}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07261531800031662, \"head\": 0.07551758736371994}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04656040295958519, \"head\": 0.046138133853673935}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009163089096546173, \"head\": 0.009429801255464554}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008877210319042206, \"head\": 0.008601460605859756}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04678576812148094, \"head\": 0.046711403876543045}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.14078892767429352, \"head\": 0.13521808385849}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.036507852375507355, \"head\": 0.0371348075568676}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.00957360491156578, \"head\": 0.009929664433002472}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.017114892601966858, \"head\": 0.016586020588874817}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.031316861510276794, \"head\": 0.029974643141031265}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.018673352897167206, \"head\": 0.01717280223965645}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016169656068086624, \"head\": 0.01620538905262947}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013043858110904694, \"head\": 0.013502873480319977}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014490567147731781, \"head\": 0.014927208423614502}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.014954723417758942, \"head\": 0.01484021544456482}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.017273712903261185, \"head\": 0.017113130539655685}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.019348282366991043, \"head\": 0.01756782829761505}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.00941774994134903, \"head\": 0.00937480479478836}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.008945092558860779, \"head\": 0.00911121815443039}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011202942579984665, \"head\": 0.011467903852462769}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.020211629569530487, \"head\": 0.02084403857588768}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.022923115640878677, \"head\": 0.023196592926979065}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024284228682518005, \"head\": 0.024406563490629196}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7595463916659355, \"head\": 0.7544876262545586}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5096934586763382, \"head\": 0.4919583685696125}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03857604041695595, \"head\": 0.03827774152159691}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06642086803913116, \"head\": 0.0645710937678814}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.02519899606704712, \"head\": 0.02445673570036888}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.026005923748016357, \"head\": 0.024283934384584427}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.010165516287088394, \"head\": 0.009639337658882141}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03441959619522095, \"head\": 0.03319757059216499}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.061329446732997894, \"head\": 0.05893021449446678}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.0721948891878128, \"head\": 0.07026772573590279}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.0449475534260273, \"head\": 0.047729406505823135}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009367074817419052, \"head\": 0.009945511817932129}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.00863255187869072, \"head\": 0.008762635290622711}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04580606520175934, \"head\": 0.04783181846141815}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1336647979915142, \"head\": 0.1361815258860588}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03388870880007744, \"head\": 0.03530512750148773}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.00936601310968399, \"head\": 0.009623229503631592}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.01446583867073059, \"head\": 0.014373868703842163}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03221648186445236, \"head\": 0.03098704293370247}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.02035750448703766, \"head\": 0.021615643054246902}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016193725168704987, \"head\": 0.017289716750383377}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013319727033376694, \"head\": 0.013376433402299881}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015093524008989334, \"head\": 0.015007201582193375}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.016109641641378403, \"head\": 0.015305321663618088}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.018151622265577316, \"head\": 0.017270665615797043}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01844261959195137, \"head\": 0.019126947969198227}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009640701115131378, \"head\": 0.010124020278453827}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009073581546545029, \"head\": 0.009825795888900757}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.01136913150548935, \"head\": 0.011524990200996399}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02099400758743286, \"head\": 0.020817816257476807}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023781031370162964, \"head\": 0.024490471929311752}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024105198681354523, \"head\": 0.02822333201766014}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7803057096898556, \"head\": 0.7837616540491581}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5025647841393948, \"head\": 0.49997710809111595}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03806111961603165, \"head\": 0.03973923623561859}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06892922893166542, \"head\": 0.06812529638409615}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.024713553488254547, \"head\": 0.024618245661258698}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024242036044597626, \"head\": 0.024083849042654037}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009717263281345367, \"head\": 0.009473856538534164}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03365452587604523, \"head\": 0.03366992995142937}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06191736459732056, \"head\": 0.05959257110953331}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07241964340209961, \"head\": 0.0707891508936882}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.045467689633369446, \"head\": 0.04498905688524246}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009074576199054718, \"head\": 0.009176596999168396}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008432887494564056, \"head\": 0.00855160504579544}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.0455542616546154, \"head\": 0.04580288380384445}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13259347155690193, \"head\": 0.1335427351295948}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03315894305706024, \"head\": 0.033394310623407364}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009271625429391861, \"head\": 0.009201861917972565}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014799438416957855, \"head\": 0.01413053274154663}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.031130529940128326, \"head\": 0.030130360275506973}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.01902873069047928, \"head\": 0.019123271107673645}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.01638701558113098, \"head\": 0.016580969095230103}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013509213924407959, \"head\": 0.013366445899009705}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015910368412733078, \"head\": 0.015676550567150116}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.016094423830509186, \"head\": 0.01607605442404747}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.01809554547071457, \"head\": 0.01860201731324196}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01865866780281067, \"head\": 0.017697490751743317}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009789127856492996, \"head\": 0.00961083173751831}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009285733103752136, \"head\": 0.008984625339508057}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011636361479759216, \"head\": 0.01124449074268341}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02080821990966797, \"head\": 0.020964883267879486}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023080632090568542, \"head\": 0.02297903224825859}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024565856903791428, \"head\": 0.024234741926193237}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7852663472294807, \"head\": 0.7455695942044258}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5082475580275059, \"head\": 0.49488815665245056}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.04366564005613327, \"head\": 0.039495136588811874}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.07027675211429596, \"head\": 0.06876976042985916}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.026109613478183746, \"head\": 0.02600075677037239}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.027241867035627365, \"head\": 0.024214312434196472}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.010385368019342422, \"head\": 0.009328119456768036}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.034514762461185455, \"head\": 0.03456047922372818}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06240123137831688, \"head\": 0.060290489345788956}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07140149548649788, \"head\": 0.07230595499277115}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04529339075088501, \"head\": 0.04560038074851036}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.00938086211681366, \"head\": 0.00969007983803749}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008540749549865723, \"head\": 0.00862492248415947}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04691429063677788, \"head\": 0.04626631364226341}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13378452137112617, \"head\": 0.13416492193937302}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03418315201997757, \"head\": 0.033472198992967606}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.00931118056178093, \"head\": 0.009046029299497604}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.015394479036331177, \"head\": 0.014427866786718369}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.029630038887262344, \"head\": 0.031154915690422058}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.017366640269756317, \"head\": 0.019598666578531265}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.015920687466859818, \"head\": 0.016667436808347702}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013120472431182861, \"head\": 0.014185484498739243}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014902602881193161, \"head\": 0.016045179218053818}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015540525317192078, \"head\": 0.016394536942243576}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.017298970371484756, \"head\": 0.018582932651042938}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.017648428678512573, \"head\": 0.019477907568216324}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009462393820285797, \"head\": 0.010332643985748291}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.0090244822204113, \"head\": 0.009609699249267578}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011439159512519836, \"head\": 0.011982366442680359}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02078729122877121, \"head\": 0.02218012884259224}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.02271006628870964, \"head\": 0.024219758808612823}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.02423245832324028, \"head\": 0.025182556360960007}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7715867534279823, \"head\": 0.7762772403657436}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5319417156279087, \"head\": 0.5007644854485989}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.039098285138607025, \"head\": 0.04047174006700516}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06579141691327095, \"head\": 0.06871925294399261}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.026173174381256104, \"head\": 0.02562713623046875}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.025667943060398102, \"head\": 0.025058336555957794}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.010576769709587097, \"head\": 0.010032325983047485}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.036789219826459885, \"head\": 0.034651562571525574}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06334618851542473, \"head\": 0.06219188868999481}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07434233650565147, \"head\": 0.07160613685846329}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04504093900322914, \"head\": 0.044641319662332535}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009461212903261185, \"head\": 0.009294085204601288}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008719358593225479, \"head\": 0.00863967090845108}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.046066347509622574, \"head\": 0.04630206152796745}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1570574752986431, \"head\": 0.1320563592016697}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03602489456534386, \"head\": 0.03358986973762512}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009296640753746033, \"head\": 0.009165223687887192}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014138564467430115, \"head\": 0.014642227441072464}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.029747970402240753, \"head\": 0.03200125694274902}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.018488135188817978, \"head\": 0.019129298627376556}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.01605946198105812, \"head\": 0.016191542148590088}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.01316767930984497, \"head\": 0.013372357934713364}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014843922108411789, \"head\": 0.016300126910209656}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015895340591669083, \"head\": 0.016908638179302216}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.017936047166585922, \"head\": 0.018970120698213577}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01877589523792267, \"head\": 0.018826540559530258}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009686604142189026, \"head\": 0.01024717465043068}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009046349674463272, \"head\": 0.009469889104366302}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011362183839082718, \"head\": 0.011774729937314987}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.0206788070499897, \"head\": 0.02436104789376259}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.02306908741593361, \"head\": 0.02370109036564827}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.02451574057340622, \"head\": 0.024307627230882645}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7491231001913548, \"head\": 0.8115559257566929}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5070827789604664, \"head\": 0.5172235518693924}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.0384683683514595, \"head\": 0.03858405724167824}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06707929819822311, \"head\": 0.06750499084591866}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.02440498024225235, \"head\": 0.02549251914024353}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.023972731083631516, \"head\": 0.025400076061487198}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009494245052337646, \"head\": 0.009648442268371582}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03382393345236778, \"head\": 0.03437797725200653}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.059745434671640396, \"head\": 0.062033578753471375}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07161223143339157, \"head\": 0.07242528349161148}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04486604779958725, \"head\": 0.044722843915224075}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009247109293937683, \"head\": 0.009194418787956238}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008465781807899475, \"head\": 0.008635353296995163}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04631262645125389, \"head\": 0.04555194452404976}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.133422389626503, \"head\": 0.1317836344242096}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03365493565797806, \"head\": 0.033131588250398636}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009240519255399704, \"head\": 0.009303741157054901}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014620885252952576, \"head\": 0.014435544610023499}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03106357529759407, \"head\": 0.030909758061170578}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.019193261861801147, \"head\": 0.018639732152223587}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016531988978385925, \"head\": 0.016532372683286667}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013886995613574982, \"head\": 0.013655781745910645}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014479976147413254, \"head\": 0.01613958552479744}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.016389869153499603, \"head\": 0.016474634408950806}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.019697658717632294, \"head\": 0.018723957240581512}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.018631141632795334, \"head\": 0.01894744113087654}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.00993320718407631, \"head\": 0.010078385472297668}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009180523455142975, \"head\": 0.009229935705661774}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011510565876960754, \"head\": 0.01170392706990242}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02091708406805992, \"head\": 0.020979300141334534}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023400817066431046, \"head\": 0.02312745898962021}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024633772671222687, \"head\": 0.024774037301540375}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7700645327568054, \"head\": 0.778618860989809}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5164060220122337, \"head\": 0.5053974203765392}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03966381400823593, \"head\": 0.039247047156095505}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06960703060030937, \"head\": 0.0670536458492279}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.02428688108921051, \"head\": 0.02502519264817238}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.023935016244649887, \"head\": 0.024315431714057922}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009585484862327576, \"head\": 0.009672880172729492}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.036041922867298126, \"head\": 0.033525288105010986}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.061616744846105576, \"head\": 0.059931430965662}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07200423255562782, \"head\": 0.07066942006349564}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04565984010696411, \"head\": 0.04482869431376457}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009276632219552994, \"head\": 0.009243790060281754}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008427809923887253, \"head\": 0.008691731840372086}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.047138262540102005, \"head\": 0.04728572815656662}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13368706032633781, \"head\": 0.13292178139090538}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03300262987613678, \"head\": 0.03412456810474396}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009409211575984955, \"head\": 0.009171687066555023}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.015113189816474915, \"head\": 0.014238912612199783}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03367350995540619, \"head\": 0.03125705197453499}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.021348074078559875, \"head\": 0.01884644851088524}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.017304297536611557, \"head\": 0.016748063266277313}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.014423351734876633, \"head\": 0.013364199548959732}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015518493950366974, \"head\": 0.015078451484441757}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015878383070230484, \"head\": 0.01546267420053482}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.019882921129465103, \"head\": 0.017548061907291412}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.0214531272649765, \"head\": 0.01846596971154213}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.01044008880853653, \"head\": 0.009898275136947632}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.00961136445403099, \"head\": 0.009499873965978622}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.01186370849609375, \"head\": 0.011528287082910538}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.022410403937101364, \"head\": 0.02081696316599846}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023838087916374207, \"head\": 0.023110631853342056}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.025317508727312088, \"head\": 0.024551045149564743}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7966772504150867, \"head\": 0.7731439247727394}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5015073977410793, \"head\": 0.5099915266036987}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.04061871021986008, \"head\": 0.0444629043340683}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06963854655623436, \"head\": 0.07085298746824265}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.025190487504005432, \"head\": 0.025380238890647888}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024432625621557236, \"head\": 0.02391301468014717}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009551171213388443, \"head\": 0.009487312287092209}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03387570008635521, \"head\": 0.03359495475888252}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.062133632600307465, \"head\": 0.06036132201552391}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07190898060798645, \"head\": 0.07113971561193466}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04562933370471001, \"head\": 0.04453916847705841}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.00931185856461525, \"head\": 0.009264569729566574}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008645478636026382, \"head\": 0.008506130427122116}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.046782542020082474, \"head\": 0.045346781611442566}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1347489170730114, \"head\": 0.13316700235009193}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03387288376688957, \"head\": 0.03397182747721672}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009286481887102127, \"head\": 0.00914878398180008}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.015008311718702316, \"head\": 0.014925636351108551}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.030027706176042557, \"head\": 0.032458968460559845}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.01717909798026085, \"head\": 0.02161497250199318}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016615334898233414, \"head\": 0.019619513303041458}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.01369614526629448, \"head\": 0.0169762521982193}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.014562692493200302, \"head\": 0.016834896057844162}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.014981411397457123, \"head\": 0.01704232767224312}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.016903143376111984, \"head\": 0.018830928951501846}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.018216069787740707, \"head\": 0.02013004943728447}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009805798530578613, \"head\": 0.01037430390715599}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009062159806489944, \"head\": 0.009507417678833008}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011302642524242401, \"head\": 0.012061305344104767}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.02038593590259552, \"head\": 0.021678980439901352}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.022171154618263245, \"head\": 0.024342495948076248}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024282507598400116, \"head\": 0.0257548987865448}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7686312347650528, \"head\": 0.8523725904524326}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5329473167657852, \"head\": 0.5089390873908997}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.04090914502739906, \"head\": 0.044813238084316254}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.07009689137339592, \"head\": 0.07058870792388916}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.026452723890542984, \"head\": 0.025312162935733795}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024500563740730286, \"head\": 0.024516157805919647}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.010067570954561234, \"head\": 0.009689882397651672}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.035587891936302185, \"head\": 0.03478819131851196}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.06211848184466362, \"head\": 0.06041637808084488}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.0730607770383358, \"head\": 0.07130170613527298}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.047667864710092545, \"head\": 0.045907288789749146}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009548734873533249, \"head\": 0.00973321869969368}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.008636262267827988, \"head\": 0.00859764963388443}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.046715252101421356, \"head\": 0.045777902007102966}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.13842731341719627, \"head\": 0.13483599945902824}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03268696740269661, \"head\": 0.03273149952292442}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009117405861616135, \"head\": 0.009330805391073227}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.016648247838020325, \"head\": 0.01655329391360283}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03030269220471382, \"head\": 0.030554592609405518}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.019395262002944946, \"head\": 0.01837245374917984}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.016262900084257126, \"head\": 0.015985343605279922}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013382602483034134, \"head\": 0.013095095753669739}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.01551530510187149, \"head\": 0.014718566089868546}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.01594429835677147, \"head\": 0.014949701726436615}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.01760009303689003, \"head\": 0.01904314011335373}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.018511652946472168, \"head\": 0.023209068924188614}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009788710623979568, \"head\": 0.012737788259983063}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.009306631982326508, \"head\": 0.010801557451486588}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011776857078075409, \"head\": 0.01129474863409996}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.021251652389764786, \"head\": 0.020872320979833603}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.023344535380601883, \"head\": 0.022950537502765656}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.024808328598737717, \"head\": 0.024074174463748932}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7653037086129189, \"head\": 0.7629826925694942}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.5007380582392216, \"head\": 0.4978222958743572}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.04010574147105217, \"head\": 0.03918261453509331}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06752226874232292, \"head\": 0.0655977874994278}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.025277364999055862, \"head\": 0.02434496581554413}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024312075227499008, \"head\": 0.023869730532169342}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009502846747636795, \"head\": 0.009423989802598953}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03311927616596222, \"head\": 0.03357633203268051}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.060138508677482605, \"head\": 0.059379369020462036}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.07247750833630562, \"head\": 0.0699324831366539}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04421151429414749, \"head\": 0.044288765639066696}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009156044572591782, \"head\": 0.009195379912853241}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.00884522870182991, \"head\": 0.008477210998535156}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04572471231222153, \"head\": 0.045548710972070694}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1319548636674881, \"head\": 0.1332489587366581}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03437817841768265, \"head\": 0.03377519175410271}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009133081883192062, \"head\": 0.00931818038225174}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.014718297868967056, \"head\": 0.01567476987838745}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03391150012612343, \"head\": 0.03051077574491501}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.021048910915851593, \"head\": 0.019341710954904556}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.017970573157072067, \"head\": 0.016276299953460693}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.016261879354715347, \"head\": 0.013728279620409012}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.016254518181085587, \"head\": 0.016252707690000534}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.016501780599355698, \"head\": 0.015932634472846985}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.019974350929260254, \"head\": 0.01760033145546913}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.020299702882766724, \"head\": 0.017873641103506088}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.011541664600372314, \"head\": 0.009570103138685226}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.01146695390343666, \"head\": 0.0090489462018013}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.012932270765304565, \"head\": 0.011205721646547318}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.0230911523103714, \"head\": 0.020579788833856583}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.02525266632437706, \"head\": 0.0226224847137928}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.028474774211645126, \"head\": 0.02395784482359886}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.8927080444991589, \"head\": 0.7648784406483173}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.508273471146822, \"head\": 0.504713486880064}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03836951032280922, \"head\": 0.0373537577688694}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06587481498718262, \"head\": 0.06455845013260841}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.026064634323120117, \"head\": 0.024226337671279907}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.024004176259040833, \"head\": 0.024470586329698563}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009713627398014069, \"head\": 0.009572289884090424}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.034348901361227036, \"head\": 0.03377646952867508}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.058971893042325974, \"head\": 0.0602642297744751}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.06990772858262062, \"head\": 0.06958192959427834}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04438510537147522, \"head\": 0.04413042590022087}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009501587599515915, \"head\": 0.009230677038431168}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.00856063887476921, \"head\": 0.008643720299005508}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.0448421835899353, \"head\": 0.046093739569187164}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1322096586227417, \"head\": 0.13224706053733826}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03283243253827095, \"head\": 0.03329533338546753}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009414494037628174, \"head\": 0.009352769702672958}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.01412733644247055, \"head\": 0.014376088976860046}}, {\"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]\": {\"base\": 0.03041781857609749, \"head\": 0.03167683258652687}, \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\": {\"base\": 0.017647214233875275, \"head\": 0.019754871726036072}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]\": {\"base\": 0.015631932765245438, \"head\": 0.01672551780939102}, \"xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]\": {\"base\": 0.013092700392007828, \"head\": 0.013960674405097961}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]\": {\"base\": 0.015622466802597046, \"head\": 0.01640196144580841}, \"xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]\": {\"base\": 0.015139896422624588, \"head\": 0.01670462265610695}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\": {\"base\": 0.0171055868268013, \"head\": 0.019021138548851013}, \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\": {\"base\": 0.01751810312271118, \"head\": 0.019182052463293076}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]\": {\"base\": 0.009220156818628311, \"head\": 0.010227706283330917}, \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\": {\"base\": 0.008837215602397919, \"head\": 0.009858749806880951}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]\": {\"base\": 0.011076908558607101, \"head\": 0.012052148580551147}, \"xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]\": {\"base\": 0.021193556487560272, \"head\": 0.021792735904455185}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]\": {\"base\": 0.022741854190826416, \"head\": 0.02401263266801834}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\": {\"base\": 0.02396174892783165, \"head\": 0.02568284049630165}, \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\": {\"base\": 0.7555275708436966, \"head\": 0.7759700417518616}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\": {\"base\": 0.497619666159153, \"head\": 0.5010205507278442}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\": {\"base\": 0.03817475587129593, \"head\": 0.040847353637218475}, \"xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]\": {\"base\": 0.06468985602259636, \"head\": 0.06857621669769287}, \"xarray/tests/test_plot.py::TestContour::test_positional_coord_string\": {\"base\": 0.023978929966688156, \"head\": 0.025403041392564774}, \"xarray/tests/test_plot.py::TestContourf::test_label_names\": {\"base\": 0.023790735751390457, \"head\": 0.02465800940990448}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]\": {\"base\": 0.009885672479867935, \"head\": 0.010052785277366638}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]\": {\"base\": 0.03312273696064949, \"head\": 0.034721843898296356}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]\": {\"base\": 0.05933835357427597, \"head\": 0.06172851845622063}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]\": {\"base\": 0.0716949887573719, \"head\": 0.07217347621917725}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]\": {\"base\": 0.04570202901959419, \"head\": 0.0460384376347065}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]\": {\"base\": 0.009541772305965424, \"head\": 0.009905107319355011}, \"xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]\": {\"base\": 0.0086028091609478, \"head\": 0.008976299315690994}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]\": {\"base\": 0.04608986899256706, \"head\": 0.04722658544778824}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]\": {\"base\": 0.1356671266257763, \"head\": 0.14236297458410263}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]\": {\"base\": 0.03412387892603874, \"head\": 0.03390248492360115}, \"xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]\": {\"base\": 0.009296555072069168, \"head\": 0.009312480688095093}, \"xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime\": {\"base\": 0.016222182661294937, \"head\": 0.015581533312797546}}]",
  "efficiency_test": [
    "xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[None-False-False-False]",
    "xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]",
    "xarray/tests/test_backends_api.py::TestPreferredChunks::test_honor_chunks[True-shape3-pref_chunks3]",
    "xarray/tests/test_backends_api.py::TestPreferredChunks::test_split_chunks[shape4-pref_chunks4-req_chunks4]",
    "xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>0]",
    "xarray/tests/test_dask.py::test_token_identical[obj1-<lambda>2]",
    "xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]",
    "xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool-1]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[None-False-None-prod-True-bool-2]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[None-True-None-sum-True-int-1]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool-2]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]",
    "xarray/tests/test_interp.py::test_interpolate_chunk_1d[3-3-3-False-slinear]",
    "xarray/tests/test_plot.py::TestContour::test_positional_coord_string",
    "xarray/tests/test_plot.py::TestContourf::test_label_names",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_pandas_compat[None-4-2-False]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[None-dask-std-3-1-True-2]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-3-3-True-2]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[bottleneck-dask-mean-4-3-False-1]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_reduce[numbagg-dask-sum-2-None-True-2]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-1-True-min]",
    "xarray/tests/test_rolling.py::TestDataArrayRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-None-False-min]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-1-3-True-1]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-max-2-1-True-2]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_reduce[dask-median-1-2-True-1]",
    "xarray/tests/test_rolling.py::TestDatasetRolling::test_rolling_wrapped_bottleneck[1-numbagg-numpy-z2-1-True-max]",
    "xarray/tests/test_variable.py::TestVariableWithDask::test_index_0d_datetime"
  ],
  "patch_functions": "{\"xarray/core/coordinates.py\": [\"create_coords_with_default_indexes\", \"Coordinates.__init__\"], \"xarray/core/dataarray.py\": [\"_infer_coords_and_dims\", \"_check_data_shape\"], \"xarray/core/merge.py\": [\"collect_variables_and_indexes\"], \"xarray/core/variable.py\": [\"Variable._broadcast_indexes_vectorized\", \"as_variable\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'xarray/core/coordinates.py': ['create_coords_with_default_indexes', 'Coordinates.__init__'], 'xarray/core/dataarray.py': ['_infer_coords_and_dims', '_check_data_shape'], 'xarray/core/merge.py': ['collect_variables_and_indexes'], 'xarray/core/variable.py': ['Variable._broadcast_indexes_vectorized', 'as_variable']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"xarray/namedarray/daskmanager.py\": [\"DaskManager.from_array\", \"DaskManager.compute\"], \"xarray/core/common.py\": [\"DataArray.isnull\", \"DataArray.sizes\", \"DataArray.get_axis_num\"], \"xarray/core/variable.py\": [\"Variable.compute\", \"Variable.identical\", \"Variable.equals\", \"IndexVariable.chunk\", \"Variable.isel\", \"IndexVariable.isel\", \"IndexVariable\", \"concat\", \"Variable.reduce\", \"Variable\", \"Variable.chunk\", \"Variable.values\"], \"xarray/namedarray/core.py\": [\"Variable.get_axis_num\", \"NamedArray.shape\", \"Variable.size\", \"NamedArray.ndim\", \"Variable.chunk\", \"Variable.copy\", \"Variable.reduce\"], \"xarray/core/dataset.py\": [\"Dataset.rolling\", \"Dataset.coords\", \"Dataset.attrs\", \"Dataset.interp\", \"Dataset.set_coords\", \"Dataset.to_zarr\", \"Dataset.compute\", \"Dataset.isel\", \"Dataset\", \"Dataset.chunk\", \"Dataset.data_vars\", \"Dataset.drop_vars\", \"from_dataframe\", \"Dataset.sizes\", \"Dataset.variables\", \"Dataset.copy\"], \"xarray/backends/zarr.py\": [\"open_zarr\", \"ZarrBackendEntrypoint.open_dataset\"], \"xarray/plot/accessor.py\": [\"DataArrayPlotAccessor.contour\", \"DataArrayPlotAccessor.contourf\"], \"xarray/core/dataarray.py\": [\"DataArray.coords\", \"DataArray.dtype\", \"DataArray.compute\", \"DataArray\", \"DataArray.values\", \"DataArray.chunks\", \"DataArray.reduce\", \"DataArray.rolling\", \"DataArray.to_series\", \"DataArray.encoding\", \"DataArray.drop_vars\", \"DataArray.dims\", \"DataArray.isel\", \"DataArray.chunk\", \"from_series\", \"DataArray.data\", \"DataArray.attrs\", \"DataArray.interp\", \"DataArray.to_dataset\", \"DataArray.ndim\"], \"xarray/core/rolling.py\": [\"DataArrayRolling.method\", \"DatasetRolling.reduce\", \"DataArrayRolling.reduce\", \"DatasetRolling.method\"], \"xarray/namedarray/pycompat.py\": [\"array_type\"], \"xarray/core/indexing.py\": [\"BasicIndexer.tuple\", \"OuterIndexer.tuple\"], \"xarray/core/indexes.py\": [\"PandasIndex.isel\"], \"xarray/core/missing.py\": [\"interp\"], \"xarray/core/dtypes.py\": [\"maybe_promote\"], \"xarray/core/_aggregations.py\": [\"DataArray.max\", \"DataArray.prod\", \"DataArray.min\", \"DataArray.sum\"], \"xarray/core/duck_array_ops.py\": [\"astype\"], \"xarray/backends/store.py\": [\"StoreBackendEntrypoint.open_dataset\"], \"xarray/backends/api.py\": [\"to_zarr\", \"open_dataset\"], \"xarray/core/concat.py\": [\"concat\"], \"xarray/core/merge.py\": [\"append\"], \"xarray/util/deprecation_helpers.py\": [\"inner\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'xarray/namedarray/daskmanager.py': ['DaskManager.from_array', 'DaskManager.compute'], 'xarray/core/common.py': ['DataArray.isnull', 'DataArray.sizes', 'DataArray.get_axis_num'], 'xarray/core/variable.py': ['Variable.compute', 'Variable.identical', 'Variable.equals', 'IndexVariable.chunk', 'Variable.isel', 'IndexVariable.isel', 'IndexVariable', 'concat', 'Variable.reduce', 'Variable', 'Variable.chunk', 'Variable.values'], 'xarray/namedarray/core.py': ['Variable.get_axis_num', 'NamedArray.shape', 'Variable.size', 'NamedArray.ndim', 'Variable.chunk', 'Variable.copy', 'Variable.reduce'], 'xarray/core/dataset.py': ['Dataset.rolling', 'Dataset.coords', 'Dataset.attrs', 'Dataset.interp', 'Dataset.set_coords', 'Dataset.to_zarr', 'Dataset.compute', 'Dataset.isel', 'Dataset', 'Dataset.chunk', 'Dataset.data_vars', 'Dataset.drop_vars', 'from_dataframe', 'Dataset.sizes', 'Dataset.variables', 'Dataset.copy'], 'xarray/backends/zarr.py': ['open_zarr', 'ZarrBackendEntrypoint.open_dataset'], 'xarray/plot/accessor.py': ['DataArrayPlotAccessor.contour', 'DataArrayPlotAccessor.contourf'], 'xarray/core/dataarray.py': ['DataArray.coords', 'DataArray.dtype', 'DataArray.compute', 'DataArray', 'DataArray.values', 'DataArray.chunks', 'DataArray.reduce', 'DataArray.rolling', 'DataArray.to_series', 'DataArray.encoding', 'DataArray.drop_vars', 'DataArray.dims', 'DataArray.isel', 'DataArray.chunk', 'from_series', 'DataArray.data', 'DataArray.attrs', 'DataArray.interp', 'DataArray.to_dataset', 'DataArray.ndim'], 'xarray/core/rolling.py': ['DataArrayRolling.method', 'DatasetRolling.reduce', 'DataArrayRolling.reduce', 'DatasetRolling.method'], 'xarray/namedarray/pycompat.py': ['array_type'], 'xarray/core/indexing.py': ['BasicIndexer.tuple', 'OuterIndexer.tuple'], 'xarray/core/indexes.py': ['PandasIndex.isel'], 'xarray/core/missing.py': ['interp'], 'xarray/core/dtypes.py': ['maybe_promote'], 'xarray/core/_aggregations.py': ['DataArray.max', 'DataArray.prod', 'DataArray.min', 'DataArray.sum'], 'xarray/core/duck_array_ops.py': ['astype'], 'xarray/backends/store.py': ['StoreBackendEntrypoint.open_dataset'], 'xarray/backends/api.py': ['to_zarr', 'open_dataset'], 'xarray/core/concat.py': ['concat'], 'xarray/core/merge.py': ['append'], 'xarray/util/deprecation_helpers.py': ['inner']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.0009375000000000002
}