{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-13496",
  "patch": "diff --git a/astropy/units/core.py b/astropy/units/core.py\nindex 836b99f554b0..91ffd839f75e 100644\n--- a/astropy/units/core.py\n+++ b/astropy/units/core.py\n@@ -631,6 +631,7 @@ class UnitBase:\n     __array_priority__ = 1000\n \n     _hash = None\n+    _type_id = None\n \n     def __deepcopy__(self, memo):\n         # This may look odd, but the units conversion will be very\n@@ -669,12 +670,11 @@ def _get_physical_type_id(self):\n         this unit, without the scale.  Since it is hashable, it is\n         useful as a dictionary key.\n         \"\"\"\n-        unit = self.decompose()\n-        r = zip([x.name for x in unit.bases], unit.powers)\n-        # bases and powers are already sorted in a unique way\n-        # r.sort()\n-        r = tuple(r)\n-        return r\n+        if self._type_id is None:\n+            unit = self.decompose()\n+            self._type_id = tuple(zip((base.name for base in unit.bases), unit.powers))\n+\n+        return self._type_id\n \n     @property\n     def names(self):\n@@ -868,10 +868,11 @@ def __hash__(self):\n         return self._hash\n \n     def __getstate__(self):\n-        # If we get pickled, we should *not* store the memoized hash since\n+        # If we get pickled, we should *not* store the memoized members since\n         # hashes of strings vary between sessions.\n         state = self.__dict__.copy()\n         state.pop('_hash', None)\n+        state.pop('_type_id', None)\n         return state\n \n     def __eq__(self, other):\n",
  "test_patch": "",
  "base_commit": "97fe69993ec58bdbd9e4ba680ca263aa54666d64",
  "head_commit": "452c6d0a9d1c61550cf9df4e9505d820490abd94",
  "created_at": 1658756100000,
  "version": "5.0",
  "duration_changes": "[{\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01725669950246811, \"head\": 0.015307102352380753}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.020268350839614868, \"head\": 0.017556000500917435}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6663078926503658, \"head\": 0.6059867218136787}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016253475099802017, \"head\": 0.015324044972658157}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.01889178901910782, \"head\": 0.017752040177583694}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6537877880036831, \"head\": 0.579403180629015}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01676793396472931, \"head\": 0.014849923551082611}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.019275907427072525, \"head\": 0.017010822892189026}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6796618066728115, \"head\": 0.5313458517193794}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01676301285624504, \"head\": 0.014928970485925674}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.02061353623867035, \"head\": 0.01734241098165512}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6777740567922592, \"head\": 0.5992468632757664}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01642724871635437, \"head\": 0.015165898948907852}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.01898805797100067, \"head\": 0.017196614295244217}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6771931163966656, \"head\": 0.5802351348102093}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01625330001115799, \"head\": 0.01505221426486969}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018946386873722076, \"head\": 0.01716173067688942}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6168707944452763, \"head\": 0.5888296402990818}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01658492535352707, \"head\": 0.015562966465950012}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.019001681357622147, \"head\": 0.01784602552652359}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.664335623383522, \"head\": 0.6122988201677799}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016095969825983047, \"head\": 0.015071991831064224}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018956094980239868, \"head\": 0.017321672290563583}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6608366705477238, \"head\": 0.5958016738295555}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01638660579919815, \"head\": 0.015099916607141495}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018995046615600586, \"head\": 0.017393875867128372}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6853769980370998, \"head\": 0.5323964804410934}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01645819842815399, \"head\": 0.014835719019174576}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.019019655883312225, \"head\": 0.01697508990764618}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6686873883008957, \"head\": 0.6049191355705261}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016905449330806732, \"head\": 0.015219952911138535}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.0187457874417305, \"head\": 0.017481133341789246}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6682169996201992, \"head\": 0.5853761695325375}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01678980141878128, \"head\": 0.01509718969464302}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.019461996853351593, \"head\": 0.017405539751052856}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6621244996786118, \"head\": 0.5504806935787201}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016708992421627045, \"head\": 0.015266630798578262}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.019079897552728653, \"head\": 0.017270363867282867}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6594268269836903, \"head\": 0.5645523816347122}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016214631497859955, \"head\": 0.015164937824010849}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018759503960609436, \"head\": 0.01719382032752037}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6115492396056652, \"head\": 0.5860643833875656}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016493074595928192, \"head\": 0.015061061829328537}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018829453736543655, \"head\": 0.01736246794462204}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6529930047690868, \"head\": 0.5793280117213726}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01664360612630844, \"head\": 0.015203297138214111}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.019174594432115555, \"head\": 0.017546463757753372}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6236722357571125, \"head\": 0.6145918592810631}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01620147004723549, \"head\": 0.015008952468633652}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018649674952030182, \"head\": 0.017467178404331207}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6508077271282673, \"head\": 0.5351185649633408}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01623467728495598, \"head\": 0.015012871474027634}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018659353256225586, \"head\": 0.017092350870370865}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6537242904305458, \"head\": 0.5845297798514366}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.01658596843481064, \"head\": 0.014848340302705765}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018936898559331894, \"head\": 0.01703561097383499}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.6162627786397934, \"head\": 0.5795004405081272}}, {\"astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit\": {\"base\": 0.016300570219755173, \"head\": 0.01505831629037857}, \"astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]\": {\"base\": 0.018941696733236313, \"head\": 0.017515428364276886}, \"astropy/units/tests/test_units.py::test_complex_compose\": {\"base\": 0.669231116771698, \"head\": 0.5933677814900875}}]",
  "efficiency_test": [
    "astropy/coordinates/tests/test_sky_coord.py::test_coord_init_unit",
    "astropy/coordinates/tests/test_spectral_coordinate.py::test_create_from_spectral_coord[observer4-target2]",
    "astropy/units/tests/test_units.py::test_complex_compose"
  ],
  "patch_functions": "{\"astropy/units/core.py\": [\"UnitBase.__getstate__\", \"UnitBase._get_physical_type_id\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'astropy/units/core.py': ['UnitBase.__getstate__', 'UnitBase._get_physical_type_id']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"astropy/coordinates/spectral_quantity.py\": [\"SpectralCoord.doppler_convention\", \"SpectralCoord.doppler_rest\"], \"astropy/coordinates/sky_coordinate.py\": [\"SkyCoord\"], \"astropy/units/quantity.py\": [\"allclose\"], \"astropy/coordinates/baseframe.py\": [\"Galactic.transform_to\", \"ICRS.transform_to\"], \"astropy/coordinates/spectral_coordinate.py\": [\"SpectralCoord.radial_velocity\", \"SpectralCoord\", \"SpectralCoord.target\", \"SpectralCoord.observer\"], \"astropy/units/core.py\": [\"CompositeUnit.compose\"], \"astropy/coordinates/angles.py\": [\"Angle\"], \"astropy/units/decorators.py\": [\"wrapper\"], \"astropy/config/configuration.py\": [\"ConfigItem.set\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'astropy/coordinates/spectral_quantity.py': ['SpectralCoord.doppler_convention', 'SpectralCoord.doppler_rest'], 'astropy/coordinates/sky_coordinate.py': ['SkyCoord'], 'astropy/units/quantity.py': ['allclose'], 'astropy/coordinates/baseframe.py': ['Galactic.transform_to', 'ICRS.transform_to'], 'astropy/coordinates/spectral_coordinate.py': ['SpectralCoord.radial_velocity', 'SpectralCoord', 'SpectralCoord.target', 'SpectralCoord.observer'], 'astropy/units/core.py': ['CompositeUnit.compose'], 'astropy/coordinates/angles.py': ['Angle'], 'astropy/units/decorators.py': ['wrapper'], 'astropy/config/configuration.py': ['ConfigItem.set']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.08700000000000006
}