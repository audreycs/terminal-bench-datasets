{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-12117",
  "patch": "diff --git a/sklearn/preprocessing/_encoders.py b/sklearn/preprocessing/_encoders.py\nindex 10324e17061e8..3faf87a88888b 100644\n--- a/sklearn/preprocessing/_encoders.py\n+++ b/sklearn/preprocessing/_encoders.py\n@@ -474,13 +474,17 @@ def _legacy_fit_transform(self, X):\n     def fit_transform(self, X, y=None):\n         \"\"\"Fit OneHotEncoder to X, then transform X.\n \n-        Equivalent to self.fit(X).transform(X), but more convenient and more\n-        efficient. See fit for the parameters, transform for the return value.\n+        Equivalent to fit(X).transform(X) but more convenient.\n \n         Parameters\n         ----------\n-        X : array-like, shape [n_samples, n_feature]\n-            Input array of type int.\n+        X : array-like, shape [n_samples, n_features]\n+            The data to encode.\n+\n+        Returns\n+        -------\n+        X_out : sparse matrix if sparse=True else a 2-d array\n+            Transformed input.\n         \"\"\"\n         if self.handle_unknown not in ('error', 'ignore'):\n             msg = (\"handle_unknown should be either 'error' or 'ignore', \"\n",
  "test_patch": "",
  "base_commit": "84dd57b7b668352625354fdee9388a684d41f334",
  "head_commit": "4f256ac0896cadef816017799dc1b53f728364f0",
  "created_at": 1537443229000,
  "version": "0.21",
  "duration_changes": "[{\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.030097082257270813, \"head\": 0.02498854324221611}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.03000950813293457, \"head\": 0.02190631628036499}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.07336372137069702, \"head\": 0.05236002057790756}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.09343637526035309, \"head\": 0.07877267524600029}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.2467227578163147, \"head\": 0.24268604815006256}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.012291226536035538, \"head\": 0.011431843042373657}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03882060945034027, \"head\": 0.03824934363365173}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.5449390858411789, \"head\": 0.3104245215654373}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.2674435451626778, \"head\": 0.284626804292202}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022918730974197388, \"head\": 0.022492650896310806}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.02480720356106758, \"head\": 0.02157880738377571}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.16657127812504768, \"head\": 0.11223341897130013}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.01600920781493187, \"head\": 0.028882190585136414}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.2628170885145664, \"head\": 0.2534406781196594}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011289600282907486, \"head\": 0.01233397051692009}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.05611647665500641, \"head\": 0.03999033197760582}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.6246155686676502, \"head\": 0.37029683217406273}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.8273468390107155, \"head\": 0.3940661698579788}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.023262567818164825, \"head\": 0.022370528429746628}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.021731767803430557, \"head\": 0.022012487053871155}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.046046074479818344, \"head\": 0.05399084836244583}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.026166699826717377, \"head\": 0.079124566167593}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.24947860091924667, \"head\": 0.24517174437642097}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011577405035495758, \"head\": 0.0115879587829113}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.0445818230509758, \"head\": 0.0437055379152298}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.5002475567162037, \"head\": 0.287685863673687}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 3.559408560395241, \"head\": 0.49278660491108894}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022812657058238983, \"head\": 0.022516824305057526}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.022044368088245392, \"head\": 0.02182663604617119}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.027047768235206604, \"head\": 0.021404020488262177}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.10989689081907272, \"head\": 0.14374826848506927}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.24418166652321815, \"head\": 0.2224874161183834}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011515263468027115, \"head\": 0.011752195656299591}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.04346517473459244, \"head\": 0.039556894451379776}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.29681675508618355, \"head\": 0.1215469278395176}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.4833398386836052, \"head\": 0.2061532698571682}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.02267364040017128, \"head\": 0.022929668426513672}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.022281896322965622, \"head\": 0.022203512489795685}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.03665434569120407, \"head\": 0.07801924273371696}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.012749068439006805, \"head\": 0.09931130334734917}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.20083628967404366, \"head\": 0.23530787229537964}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011411864310503006, \"head\": 0.011499021202325821}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03888724371790886, \"head\": 0.03906546160578728}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.23319460451602936, \"head\": 0.19193380698561668}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.4038919694721699, \"head\": 0.21141260117292404}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.023311898112297058, \"head\": 0.022426966577768326}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.02236463874578476, \"head\": 0.022033583372831345}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.013453733175992966, \"head\": 0.09765654057264328}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.04507630318403244, \"head\": 0.04353230446577072}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.16615889966487885, \"head\": 0.2643829882144928}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011314459145069122, \"head\": 0.011555995792150497}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.05863365903496742, \"head\": 0.03827761858701706}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.30466894432902336, \"head\": 0.3277908191084862}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.7512788325548172, \"head\": 1.408052783459425}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.02263714000582695, \"head\": 0.02262505516409874}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.021999560296535492, \"head\": 0.02204485610127449}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.09936121851205826, \"head\": 0.1162034198641777}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.09546681120991707, \"head\": 0.02658594772219658}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.24534349888563156, \"head\": 0.24597905203700066}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011214915663003922, \"head\": 0.011417295783758163}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.04270775616168976, \"head\": 0.03842749446630478}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.43199972435832024, \"head\": 0.368873905390501}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 3.1709901615977287, \"head\": 0.21352027729153633}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022707372903823853, \"head\": 0.0228494293987751}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.021762222051620483, \"head\": 0.021999508142471313}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.0778454951941967, \"head\": 0.04339025542140007}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.09288303181529045, \"head\": 0.0993877537548542}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.2694311738014221, \"head\": 0.22288674488663673}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011453192681074142, \"head\": 0.011498719453811646}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.0539739653468132, \"head\": 0.039070840924978256}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.16432244330644608, \"head\": 0.31083112582564354}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 2.2891936898231506, \"head\": 0.40317055583000183}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.02244165912270546, \"head\": 0.022830035537481308}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.021923724561929703, \"head\": 0.02203752100467682}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.014511968940496445, \"head\": 0.05830011144280434}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.07194612920284271, \"head\": 0.08083836734294891}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.26402245834469795, \"head\": 0.24169644713401794}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011224042624235153, \"head\": 0.011344589293003082}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.04410009831190109, \"head\": 0.038572072982788086}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.21436983346939087, \"head\": 0.35611307993531227}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 2.7560970969498158, \"head\": 0.29670946672558784}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.0224573016166687, \"head\": 0.022503238171339035}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.02178783342242241, \"head\": 0.02168896794319153}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.04473484307527542, \"head\": 0.030594058334827423}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.11362089589238167, \"head\": 0.12844467163085938}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.3230752907693386, \"head\": 0.23841183632612228}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011701289564371109, \"head\": 0.018735479563474655}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03849910572171211, \"head\": 0.04229819029569626}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.2120581567287445, \"head\": 0.12125509604811668}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.29319969564676285, \"head\": 0.1739284247159958}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022495031356811523, \"head\": 0.02269059047102928}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.021961860358715057, \"head\": 0.02214660868048668}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.013277232646942139, \"head\": 0.06126844510436058}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.012668035924434662, \"head\": 0.09024687111377716}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.1463620513677597, \"head\": 0.23547597602009773}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.01113540306687355, \"head\": 0.01134120300412178}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.038501013070344925, \"head\": 0.03854325786232948}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.1279226392507553, \"head\": 0.4065141826868057}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.2329791709780693, \"head\": 1.9931620694696903}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.0242227204144001, \"head\": 0.02253248170018196}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.023515023291110992, \"head\": 0.02190493419766426}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.07315009087324142, \"head\": 0.029424797743558884}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.10678551346063614, \"head\": 0.06886535510420799}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.25595181807875633, \"head\": 0.22939776256680489}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011363223195075989, \"head\": 0.011201571673154831}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.05293400585651398, \"head\": 0.03867246210575104}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.17628508806228638, \"head\": 0.12110112980008125}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.3983847349882126, \"head\": 0.37177544087171555}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.02245897427201271, \"head\": 0.022439301013946533}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.02227633446455002, \"head\": 0.021932926028966904}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.08733982592821121, \"head\": 0.038941558450460434}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.09842758998274803, \"head\": 0.10316459089517593}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.302570678293705, \"head\": 0.2277745082974434}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011279627680778503, \"head\": 0.011381678283214569}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03827592730522156, \"head\": 0.03834769129753113}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.3358413204550743, \"head\": 0.20892619714140892}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.0991993434727192, \"head\": 0.4011051803827286}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022443465888500214, \"head\": 0.02251191809773445}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.022110559046268463, \"head\": 0.02224774658679962}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.09795467182993889, \"head\": 0.10335612297058105}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.09672330692410469, \"head\": 0.023347094655036926}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.3427891880273819, \"head\": 0.23720593005418777}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011473234742879868, \"head\": 0.011638849973678589}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.038543447852134705, \"head\": 0.048595137894153595}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.2152078114449978, \"head\": 0.17235389351844788}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.19650829583406448, \"head\": 0.3110218979418278}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022463712841272354, \"head\": 0.022714555263519287}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.022429991513490677, \"head\": 0.022007334977388382}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.0299348384141922, \"head\": 0.08149854838848114}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.10620129108428955, \"head\": 0.0929085910320282}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.26008911058306694, \"head\": 0.24977721646428108}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.014456614851951599, \"head\": 0.011446088552474976}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.04464303329586983, \"head\": 0.038588233292102814}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.4585997052490711, \"head\": 0.19946740567684174}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.3073537461459637, \"head\": 1.1020651049911976}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022594276815652847, \"head\": 0.022782154381275177}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.02230086550116539, \"head\": 0.02221093699336052}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.013358183205127716, \"head\": 0.048598192632198334}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.016059666872024536, \"head\": 0.10573390126228333}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.1440993957221508, \"head\": 0.24618282541632652}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.01122608408331871, \"head\": 0.01850476861000061}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03830040991306305, \"head\": 0.04325104504823685}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.11943132057785988, \"head\": 0.2810150049626827}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.10365911945700645, \"head\": 0.4957538843154907}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.02284282073378563, \"head\": 0.022456441074609756}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.022694528102874756, \"head\": 0.02227630466222763}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.04669377952814102, \"head\": 0.02865724265575409}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.02812594547867775, \"head\": 0.09505676105618477}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.21855765581130981, \"head\": 0.2964034788310528}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011555135250091553, \"head\": 0.011490341275930405}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.050090186297893524, \"head\": 0.0385613851249218}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.19588129222393036, \"head\": 0.34848184511065483}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 0.39273088052868843, \"head\": 0.3106185756623745}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.0225679911673069, \"head\": 0.022335030138492584}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.021808099001646042, \"head\": 0.0220661461353302}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.03598032891750336, \"head\": 0.013437490910291672}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.10199666395783424, \"head\": 0.11684957146644592}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.2455948404967785, \"head\": 0.23842139542102814}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.011464186012744904, \"head\": 0.011614356189966202}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03847338631749153, \"head\": 0.03875280171632767}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.19825292006134987, \"head\": 0.37405192479491234}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 1.9013897478580475, \"head\": 0.114632498472929}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.023049063980579376, \"head\": 0.022495362907648087}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.02221187949180603, \"head\": 0.022266805171966553}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.07769216597080231, \"head\": 0.09691479802131653}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.07724714279174805, \"head\": 0.09738385677337646}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.23035922273993492, \"head\": 0.23023134842514992}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.01164153590798378, \"head\": 0.011464212089776993}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.03821486979722977, \"head\": 0.04006968066096306}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.3115531727671623, \"head\": 0.20549660176038742}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 2.7972920164465904, \"head\": 0.3958783484995365}}, {\"sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online\": {\"base\": 0.022773094475269318, \"head\": 0.022478461265563965}, \"sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs\": {\"base\": 0.022344589233398438, \"head\": 0.022076647728681564}, \"sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]\": {\"base\": 0.12013693526387215, \"head\": 0.027018826454877853}, \"sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse\": {\"base\": 0.10093970969319344, \"head\": 0.11060967296361923}, \"sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation\": {\"base\": 0.21664706990122795, \"head\": 0.2512664757668972}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction\": {\"base\": 0.01780182495713234, \"head\": 0.014323301613330841}, \"sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]\": {\"base\": 0.04895377159118652, \"head\": 0.04002479463815689}, \"sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality\": {\"base\": 0.1318718083202839, \"head\": 0.24848628789186478}, \"sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]\": {\"base\": 2.6674847081303596, \"head\": 0.1949218548834324}}]",
  "efficiency_test": [
    "sklearn/decomposition/tests/test_online_lda.py::test_lda_fit_online",
    "sklearn/ensemble/tests/test_bagging.py::test_bagging_classifier_with_missing_inputs",
    "sklearn/gaussian_process/tests/test_gpc.py::test_lml_gradient[kernel1]",
    "sklearn/linear_model/tests/test_base.py::test_linear_regression_sparse",
    "sklearn/linear_model/tests/test_theil_sen.py::test_subpopulation",
    "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_with_an_empty_prediction",
    "sklearn/tests/test_common.py::test_non_meta_estimators[MultiTaskElasticNet-MultiTaskElasticNet-check_estimator_sparse_data]",
    "sklearn/tests/test_random_projection.py::test_random_projection_embedding_quality",
    "sklearn/utils/tests/test_extmath.py::test_randomized_svd_low_rank_all_dtypes[int64]"
  ],
  "patch_functions": "{\"sklearn/preprocessing/_encoders.py\": [\"OneHotEncoder.fit_transform\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'sklearn/preprocessing/_encoders.py': ['OneHotEncoder.fit_transform']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"sklearn/datasets/base.py\": [\"load_boston\", \"load_iris\"], \"sklearn/utils/extmath.py\": [\"randomized_svd\"], \"sklearn/tree/tree.py\": [\"DecisionTreeClassifier.fit\", \"DecisionTreeClassifier\", \"DecisionTreeClassifier.predict_log_proba\", \"DecisionTreeClassifier.predict_proba\", \"DecisionTreeClassifier.predict\"], \"sklearn/gaussian_process/gpc.py\": [\"_BinaryGaussianProcessClassifierLaplace.log_marginal_likelihood\", \"GaussianProcessClassifier\", \"GaussianProcessClassifier.fit\", \"_BinaryGaussianProcessClassifierLaplace.fit\", \"GaussianProcessClassifier.log_marginal_likelihood\"], \"sklearn/utils/estimator_checks.py\": [\"_yield_all_checks\", \"check_estimator_sparse_data\", \"set_checking_parameters\"], \"sklearn/metrics/pairwise.py\": [\"euclidean_distances\"], \"sklearn/linear_model/base.py\": [\"LinearRegression.fit\", \"LinearRegression\", \"LinearRegression.predict\"], \"sklearn/utils/deprecation.py\": [\"wrapped\"], \"sklearn/pipeline.py\": [\"Pipeline.fit\", \"make_pipeline\", \"Pipeline.predict\", \"Pipeline.predict_log_proba\", \"Pipeline.predict_proba\"], \"sklearn/base.py\": [\"GaussianRandomProjection.fit_transform\", \"AdaBoostClassifier.get_params\"], \"sklearn/metrics/classification.py\": [\"fbeta_score\", \"precision_recall_fscore_support\"], \"sklearn/gaussian_process/kernels.py\": [\"RBF.theta\"], \"sklearn/ensemble/bagging.py\": [\"BaggingClassifier.predict_log_proba\", \"BaggingClassifier.fit\", \"BaggingClassifier\", \"BaggingClassifier.predict\", \"BaggingClassifier.predict_proba\"], \"sklearn/preprocessing/_function_transformer.py\": [\"FunctionTransformer\", \"FunctionTransformer.fit\"], \"sklearn/utils/_unittest_backport.py\": [\"TestCase.assertRaises\"], \"sklearn/decomposition/online_lda.py\": [\"LatentDirichletAllocation\", \"LatentDirichletAllocation.fit\"], \"sklearn/utils/metaestimators.py\": [\"<lambda>\"], \"sklearn/linear_model/theil_sen.py\": [\"TheilSenRegressor.fit\", \"TheilSenRegressor\"], \"sklearn/datasets/samples_generator.py\": [\"make_low_rank_matrix\"], \"sklearn/utils/validation.py\": [\"check_random_state\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'sklearn/datasets/base.py': ['load_boston', 'load_iris'], 'sklearn/utils/extmath.py': ['randomized_svd'], 'sklearn/tree/tree.py': ['DecisionTreeClassifier.fit', 'DecisionTreeClassifier', 'DecisionTreeClassifier.predict_log_proba', 'DecisionTreeClassifier.predict_proba', 'DecisionTreeClassifier.predict'], 'sklearn/gaussian_process/gpc.py': ['_BinaryGaussianProcessClassifierLaplace.log_marginal_likelihood', 'GaussianProcessClassifier', 'GaussianProcessClassifier.fit', '_BinaryGaussianProcessClassifierLaplace.fit', 'GaussianProcessClassifier.log_marginal_likelihood'], 'sklearn/utils/estimator_checks.py': ['_yield_all_checks', 'check_estimator_sparse_data', 'set_checking_parameters'], 'sklearn/metrics/pairwise.py': ['euclidean_distances'], 'sklearn/linear_model/base.py': ['LinearRegression.fit', 'LinearRegression', 'LinearRegression.predict'], 'sklearn/utils/deprecation.py': ['wrapped'], 'sklearn/pipeline.py': ['Pipeline.fit', 'make_pipeline', 'Pipeline.predict', 'Pipeline.predict_log_proba', 'Pipeline.predict_proba'], 'sklearn/base.py': ['GaussianRandomProjection.fit_transform', 'AdaBoostClassifier.get_params'], 'sklearn/metrics/classification.py': ['fbeta_score', 'precision_recall_fscore_support'], 'sklearn/gaussian_process/kernels.py': ['RBF.theta'], 'sklearn/ensemble/bagging.py': ['BaggingClassifier.predict_log_proba', 'BaggingClassifier.fit', 'BaggingClassifier', 'BaggingClassifier.predict', 'BaggingClassifier.predict_proba'], 'sklearn/preprocessing/_function_transformer.py': ['FunctionTransformer', 'FunctionTransformer.fit'], 'sklearn/utils/_unittest_backport.py': ['TestCase.assertRaises'], 'sklearn/decomposition/online_lda.py': ['LatentDirichletAllocation', 'LatentDirichletAllocation.fit'], 'sklearn/utils/metaestimators.py': ['<lambda>'], 'sklearn/linear_model/theil_sen.py': ['TheilSenRegressor.fit', 'TheilSenRegressor'], 'sklearn/datasets/samples_generator.py': ['make_low_rank_matrix'], 'sklearn/utils/validation.py': ['check_random_state']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.07366666666666671
}