{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-5571",
  "patch": "diff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 2af038c8a7c..7e006e875e2 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -206,6 +206,10 @@ Internal Changes\n   pandas-specific implementation into ``PandasIndex.query()`` and\n   ``PandasMultiIndex.query()`` (:pull:`5322`).\n   By `Benoit Bovy <https://github.com/benbovy>`_.\n+- Refactor `xarray.core.duck_array_ops` to no longer special-case dispatching to\n+  dask versions of functions when acting on dask arrays, instead relying numpy\n+  and dask's adherence to NEP-18 to dispatch automatically. (:pull:`5571`)\n+  By `Tom Nicholas <https://github.com/TomNicholas>`_.\n \n .. _whats-new.0.18.2:\n \ndiff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\nindex 579ac3a7b0f..00c92c030c8 100644\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -11,6 +11,15 @@\n \n import numpy as np\n import pandas as pd\n+from numpy import all as array_all  # noqa\n+from numpy import any as array_any  # noqa\n+from numpy import zeros_like  # noqa\n+from numpy import around, broadcast_to  # noqa\n+from numpy import concatenate as _concatenate\n+from numpy import einsum, isclose, isin, isnan, isnat, pad  # noqa\n+from numpy import stack as _stack\n+from numpy import take, tensordot, transpose, unravel_index  # noqa\n+from numpy import where as _where\n \n from . import dask_array_compat, dask_array_ops, dtypes, npcompat, nputils\n from .nputils import nanfirst, nanlast\n@@ -34,31 +43,15 @@ def _dask_or_eager_func(\n     name,\n     eager_module=np,\n     dask_module=dask_array,\n-    list_of_args=False,\n-    array_args=slice(1),\n-    requires_dask=None,\n ):\n     \"\"\"Create a function that dispatches to dask for dask array inputs.\"\"\"\n-    if dask_module is not None:\n-\n-        def f(*args, **kwargs):\n-            if list_of_args:\n-                dispatch_args = args[0]\n-            else:\n-                dispatch_args = args[array_args]\n-            if any(is_duck_dask_array(a) for a in dispatch_args):\n-                try:\n-                    wrapped = getattr(dask_module, name)\n-                except AttributeError as e:\n-                    raise AttributeError(f\"{e}: requires dask >={requires_dask}\")\n-            else:\n-                wrapped = getattr(eager_module, name)\n-            return wrapped(*args, **kwargs)\n \n-    else:\n-\n-        def f(*args, **kwargs):\n-            return getattr(eager_module, name)(*args, **kwargs)\n+    def f(*args, **kwargs):\n+        if any(is_duck_dask_array(a) for a in args):\n+            wrapped = getattr(dask_module, name)\n+        else:\n+            wrapped = getattr(eager_module, name)\n+        return wrapped(*args, **kwargs)\n \n     return f\n \n@@ -72,16 +65,40 @@ def fail_on_dask_array_input(values, msg=None, func_name=None):\n         raise NotImplementedError(msg % func_name)\n \n \n-around = _dask_or_eager_func(\"around\")\n-isclose = _dask_or_eager_func(\"isclose\")\n-\n+# Requires special-casing because pandas won't automatically dispatch to dask.isnull via NEP-18\n+pandas_isnull = _dask_or_eager_func(\"isnull\", eager_module=pd, dask_module=dask_array)\n \n-isnat = np.isnat\n-isnan = _dask_or_eager_func(\"isnan\")\n-zeros_like = _dask_or_eager_func(\"zeros_like\")\n-\n-\n-pandas_isnull = _dask_or_eager_func(\"isnull\", eager_module=pd)\n+# np.around has failing doctests, overwrite it so they pass:\n+# https://github.com/numpy/numpy/issues/19759\n+around.__doc__ = str.replace(\n+    around.__doc__ or \"\",\n+    \"array([0.,  2.])\",\n+    \"array([0., 2.])\",\n+)\n+around.__doc__ = str.replace(\n+    around.__doc__ or \"\",\n+    \"array([0.,  2.])\",\n+    \"array([0., 2.])\",\n+)\n+around.__doc__ = str.replace(\n+    around.__doc__ or \"\",\n+    \"array([0.4,  1.6])\",\n+    \"array([0.4, 1.6])\",\n+)\n+around.__doc__ = str.replace(\n+    around.__doc__ or \"\",\n+    \"array([0.,  2.,  2.,  4.,  4.])\",\n+    \"array([0., 2., 2., 4., 4.])\",\n+)\n+around.__doc__ = str.replace(\n+    around.__doc__ or \"\",\n+    (\n+        '    .. [2] \"How Futile are Mindless Assessments of\\n'\n+        '           Roundoff in Floating-Point Computation?\", William Kahan,\\n'\n+        \"           https://people.eecs.berkeley.edu/~wkahan/Mindless.pdf\\n\"\n+    ),\n+    \"\",\n+)\n \n \n def isnull(data):\n@@ -114,21 +131,10 @@ def notnull(data):\n     return ~isnull(data)\n \n \n-transpose = _dask_or_eager_func(\"transpose\")\n-_where = _dask_or_eager_func(\"where\", array_args=slice(3))\n-isin = _dask_or_eager_func(\"isin\", array_args=slice(2))\n-take = _dask_or_eager_func(\"take\")\n-broadcast_to = _dask_or_eager_func(\"broadcast_to\")\n-pad = _dask_or_eager_func(\"pad\", dask_module=dask_array_compat)\n-\n-_concatenate = _dask_or_eager_func(\"concatenate\", list_of_args=True)\n-_stack = _dask_or_eager_func(\"stack\", list_of_args=True)\n-\n-array_all = _dask_or_eager_func(\"all\")\n-array_any = _dask_or_eager_func(\"any\")\n-\n-tensordot = _dask_or_eager_func(\"tensordot\", array_args=slice(2))\n-einsum = _dask_or_eager_func(\"einsum\", array_args=slice(1, None))\n+# TODO replace with simply np.ma.masked_invalid once numpy/numpy#16022 is fixed\n+masked_invalid = _dask_or_eager_func(\n+    \"masked_invalid\", eager_module=np.ma, dask_module=getattr(dask_array, \"ma\", None)\n+)\n \n \n def gradient(x, coord, axis, edge_order):\n@@ -166,11 +172,6 @@ def cumulative_trapezoid(y, x, axis):\n     return cumsum(integrand, axis=axis, skipna=False)\n \n \n-masked_invalid = _dask_or_eager_func(\n-    \"masked_invalid\", eager_module=np.ma, dask_module=getattr(dask_array, \"ma\", None)\n-)\n-\n-\n def astype(data, dtype, **kwargs):\n     if (\n         isinstance(data, sparse_array_type)\n@@ -317,9 +318,7 @@ def _ignore_warnings_if(condition):\n         yield\n \n \n-def _create_nan_agg_method(\n-    name, dask_module=dask_array, coerce_strings=False, invariant_0d=False\n-):\n+def _create_nan_agg_method(name, coerce_strings=False, invariant_0d=False):\n     from . import nanops\n \n     def f(values, axis=None, skipna=None, **kwargs):\n@@ -344,7 +343,8 @@ def f(values, axis=None, skipna=None, **kwargs):\n         else:\n             if name in [\"sum\", \"prod\"]:\n                 kwargs.pop(\"min_count\", None)\n-            func = _dask_or_eager_func(name, dask_module=dask_module)\n+\n+            func = getattr(np, name)\n \n         try:\n             with warnings.catch_warnings():\n@@ -378,9 +378,7 @@ def f(values, axis=None, skipna=None, **kwargs):\n std.numeric_only = True\n var = _create_nan_agg_method(\"var\")\n var.numeric_only = True\n-median = _create_nan_agg_method(\n-    \"median\", dask_module=dask_array_compat, invariant_0d=True\n-)\n+median = _create_nan_agg_method(\"median\", invariant_0d=True)\n median.numeric_only = True\n prod = _create_nan_agg_method(\"prod\", invariant_0d=True)\n prod.numeric_only = True\n@@ -389,7 +387,6 @@ def f(values, axis=None, skipna=None, **kwargs):\n cumprod_1d.numeric_only = True\n cumsum_1d = _create_nan_agg_method(\"cumsum\", invariant_0d=True)\n cumsum_1d.numeric_only = True\n-unravel_index = _dask_or_eager_func(\"unravel_index\")\n \n \n _mean = _create_nan_agg_method(\"mean\", invariant_0d=True)\ndiff --git a/xarray/core/nanops.py b/xarray/core/nanops.py\nindex 48106bff289..c1a4d629f97 100644\n--- a/xarray/core/nanops.py\n+++ b/xarray/core/nanops.py\n@@ -3,14 +3,7 @@\n import numpy as np\n \n from . import dtypes, nputils, utils\n-from .duck_array_ops import (\n-    _dask_or_eager_func,\n-    count,\n-    fillna,\n-    isnull,\n-    where,\n-    where_method,\n-)\n+from .duck_array_ops import count, fillna, isnull, where, where_method\n from .pycompat import dask_array_type\n \n try:\n@@ -53,7 +46,7 @@ def _nan_argminmax_object(func, fill_value, value, axis=None, **kwargs):\n     \"\"\"\n     valid_count = count(value, axis=axis)\n     value = fillna(value, fill_value)\n-    data = _dask_or_eager_func(func)(value, axis=axis, **kwargs)\n+    data = getattr(np, func)(value, axis=axis, **kwargs)\n \n     # TODO This will evaluate dask arrays and might be costly.\n     if (valid_count == 0).any():\n@@ -111,7 +104,7 @@ def nanargmax(a, axis=None):\n \n def nansum(a, axis=None, dtype=None, out=None, min_count=None):\n     a, mask = _replace_nan(a, 0)\n-    result = _dask_or_eager_func(\"sum\")(a, axis=axis, dtype=dtype)\n+    result = np.sum(a, axis=axis, dtype=dtype)\n     if min_count is not None:\n         return _maybe_null_out(result, axis, mask, min_count)\n     else:\n@@ -120,7 +113,7 @@ def nansum(a, axis=None, dtype=None, out=None, min_count=None):\n \n def _nanmean_ddof_object(ddof, value, axis=None, dtype=None, **kwargs):\n     \"\"\"In house nanmean. ddof argument will be used in _nanvar method\"\"\"\n-    from .duck_array_ops import _dask_or_eager_func, count, fillna, where_method\n+    from .duck_array_ops import count, fillna, where_method\n \n     valid_count = count(value, axis=axis)\n     value = fillna(value, 0)\n@@ -129,7 +122,7 @@ def _nanmean_ddof_object(ddof, value, axis=None, dtype=None, **kwargs):\n     if dtype is None and value.dtype.kind == \"O\":\n         dtype = value.dtype if value.dtype.kind in [\"cf\"] else float\n \n-    data = _dask_or_eager_func(\"sum\")(value, axis=axis, dtype=dtype, **kwargs)\n+    data = np.sum(value, axis=axis, dtype=dtype, **kwargs)\n     data = data / (valid_count - ddof)\n     return where_method(data, valid_count != 0)\n \n@@ -155,7 +148,7 @@ def nanmedian(a, axis=None, out=None):\n     # possibly blow memory\n     if axis is not None and len(np.atleast_1d(axis)) == a.ndim:\n         axis = None\n-    return _dask_or_eager_func(\"nanmedian\", eager_module=nputils)(a, axis=axis)\n+    return nputils.nanmedian(a, axis=axis)\n \n \n def _nanvar_object(value, axis=None, ddof=0, keepdims=False, **kwargs):\n@@ -170,20 +163,16 @@ def nanvar(a, axis=None, dtype=None, out=None, ddof=0):\n     if a.dtype.kind == \"O\":\n         return _nanvar_object(a, axis=axis, dtype=dtype, ddof=ddof)\n \n-    return _dask_or_eager_func(\"nanvar\", eager_module=nputils)(\n-        a, axis=axis, dtype=dtype, ddof=ddof\n-    )\n+    return nputils.nanvar(a, axis=axis, dtype=dtype, ddof=ddof)\n \n \n def nanstd(a, axis=None, dtype=None, out=None, ddof=0):\n-    return _dask_or_eager_func(\"nanstd\", eager_module=nputils)(\n-        a, axis=axis, dtype=dtype, ddof=ddof\n-    )\n+    return nputils.nanstd(a, axis=axis, dtype=dtype, ddof=ddof)\n \n \n def nanprod(a, axis=None, dtype=None, out=None, min_count=None):\n     a, mask = _replace_nan(a, 1)\n-    result = _dask_or_eager_func(\"nanprod\")(a, axis=axis, dtype=dtype, out=out)\n+    result = nputils.nanprod(a, axis=axis, dtype=dtype, out=out)\n     if min_count is not None:\n         return _maybe_null_out(result, axis, mask, min_count)\n     else:\n@@ -191,12 +180,8 @@ def nanprod(a, axis=None, dtype=None, out=None, min_count=None):\n \n \n def nancumsum(a, axis=None, dtype=None, out=None):\n-    return _dask_or_eager_func(\"nancumsum\", eager_module=nputils)(\n-        a, axis=axis, dtype=dtype\n-    )\n+    return nputils.nancumsum(a, axis=axis, dtype=dtype)\n \n \n def nancumprod(a, axis=None, dtype=None, out=None):\n-    return _dask_or_eager_func(\"nancumprod\", eager_module=nputils)(\n-        a, axis=axis, dtype=dtype\n-    )\n+    return nputils.nancumprod(a, axis=axis, dtype=dtype)\ndiff --git a/xarray/ufuncs.py b/xarray/ufuncs.py\nindex b80175273e0..7f6eed55e9b 100644\n--- a/xarray/ufuncs.py\n+++ b/xarray/ufuncs.py\n@@ -20,7 +20,6 @@\n \n from .core.dataarray import DataArray as _DataArray\n from .core.dataset import Dataset as _Dataset\n-from .core.duck_array_ops import _dask_or_eager_func\n from .core.groupby import GroupBy as _GroupBy\n from .core.pycompat import dask_array_type as _dask_array_type\n from .core.variable import Variable as _Variable\n@@ -71,7 +70,7 @@ def __call__(self, *args, **kwargs):\n                     new_args = tuple(reversed(args))\n \n         if res is _UNDEFINED:\n-            f = _dask_or_eager_func(self._name, array_args=slice(len(args)))\n+            f = getattr(_np, self._name)\n             res = f(*new_args, **kwargs)\n         if res is NotImplemented:\n             raise TypeError(\n",
  "test_patch": "diff --git a/xarray/tests/test_units.py b/xarray/tests/test_units.py\nindex 543100ef98c..7bde6ce8b9f 100644\n--- a/xarray/tests/test_units.py\n+++ b/xarray/tests/test_units.py\n@@ -13,6 +13,7 @@\n     assert_duckarray_allclose,\n     assert_equal,\n     assert_identical,\n+    requires_dask,\n     requires_matplotlib,\n )\n from .test_plot import PlotTestCase\n@@ -5579,6 +5580,24 @@ def test_merge(self, variant, unit, error, dtype):\n         assert_equal(expected, actual)\n \n \n+@requires_dask\n+class TestPintWrappingDask:\n+    def test_duck_array_ops(self):\n+        import dask.array\n+\n+        d = dask.array.array([1, 2, 3])\n+        q = pint.Quantity(d, units=\"m\")\n+        da = xr.DataArray(q, dims=\"x\")\n+\n+        actual = da.mean().compute()\n+        actual.name = None\n+        expected = xr.DataArray(pint.Quantity(np.array(2.0), units=\"m\"))\n+\n+        assert_units_equal(expected, actual)\n+        # Don't use isinstance b/c we don't want to allow subclasses through\n+        assert type(expected.data) == type(actual.data)  # noqa\n+\n+\n @requires_matplotlib\n class TestPlots(PlotTestCase):\n     def test_units_in_line_plot_labels(self):\n",
  "base_commit": "434090909dfad3e77df2488ab957ceb650045285",
  "head_commit": "a349538c82cadf5d89da6486d335ced1f2e319ff",
  "created_at": 1625340273000,
  "version": "0.18",
  "duration_changes": "[{\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.01622544229030609, \"head\": 0.015458054840564728}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.02824222296476364, \"head\": 0.02472682297229767}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015248317271471024, \"head\": 0.014764167368412018}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025064006447792053, \"head\": 0.021820586174726486}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015683993697166443, \"head\": 0.01310984417796135}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015790637582540512, \"head\": 0.013159777969121933}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.017516128718852997, \"head\": 0.013472545892000198}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01576247066259384, \"head\": 0.013212010264396667}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015777990221977234, \"head\": 0.013196747750043869}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.01669996604323387, \"head\": 0.014180146157741547}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016635887324810028, \"head\": 0.014477185904979706}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01774464175105095, \"head\": 0.01415247842669487}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016940247267484665, \"head\": 0.014081913977861404}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02610388770699501, \"head\": 0.022821787744760513}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016593914479017258, \"head\": 0.013907834887504578}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016706202179193497, \"head\": 0.013961847871541977}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016585931181907654, \"head\": 0.013915099203586578}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01668423041701317, \"head\": 0.016808707267045975}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.015753261744976044, \"head\": 0.011403746902942657}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.015841130167245865, \"head\": 0.014918677508831024}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015547309070825577, \"head\": 0.013696428388357162}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.01439082995057106, \"head\": 0.013755809515714645}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006531771272420883, \"head\": 0.005814272910356522}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01649203523993492, \"head\": 0.011587545275688171}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016483578830957413, \"head\": 0.013589587062597275}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.01529550552368164, \"head\": 0.014286339282989502}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.016561631113290787, \"head\": 0.01320105791091919}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03347453474998474, \"head\": 0.03437395393848419}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6049951948225498, \"head\": 0.6319616697728634}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3586435355246067, \"head\": 0.3513563610613346}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01758558675646782, \"head\": 0.01552092656493187}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.23744980245828629, \"head\": 0.022359110414981842}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.01582777127623558, \"head\": 0.013625364750623703}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.014017030596733093, \"head\": 0.012120183557271957}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009568426758050919, \"head\": 0.00853186845779419}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.016330871731042862, \"head\": 0.014093324542045593}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.015326987951993942, \"head\": 0.012590710073709488}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010609820485115051, \"head\": 0.009573545306921005}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02466295287013054, \"head\": 0.0222221240401268}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014474451541900635, \"head\": 0.0148509182035923}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014193892478942871, \"head\": 0.012935340404510498}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.014009036123752594, \"head\": 0.11826015636324883}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.015092693269252777, \"head\": 0.013284672051668167}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027897074818611145, \"head\": 0.024479378014802933}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014924682676792145, \"head\": 0.013538721948862076}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.01477636769413948, \"head\": 0.013526014983654022}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.0146988146007061, \"head\": 0.013524778187274933}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.014032751321792603, \"head\": 0.011520054191350937}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013897035270929337, \"head\": 0.011540785431861877}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.038258086889982224, \"head\": 0.031039804220199585}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.018084097653627396, \"head\": 0.016338616609573364}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018651235848665237, \"head\": 0.01587909460067749}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016678854823112488, \"head\": 0.013745099306106567}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016344666481018066, \"head\": 0.01362612470984459}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05239385366439819, \"head\": 0.040103763341903687}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.054253701120615005, \"head\": 0.040611978620290756}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04265371710062027, \"head\": 0.03180062398314476}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016340401023626328, \"head\": 0.017540570348501205}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027152594178915024, \"head\": 0.024899907410144806}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.014978855848312378, \"head\": 0.01590460166335106}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024795901030302048, \"head\": 0.022044897079467773}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.01536506786942482, \"head\": 0.014119673520326614}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015331342816352844, \"head\": 0.01708035171031952}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.01633419096469879, \"head\": 0.013369321823120117}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015586771070957184, \"head\": 0.013200405985116959}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015616629272699356, \"head\": 0.0131818987429142}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016627300530672073, \"head\": 0.0141528882086277}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016564592719078064, \"head\": 0.014735285192728043}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016539957374334335, \"head\": 0.01444997638463974}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016587764024734497, \"head\": 0.014218490570783615}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02597557008266449, \"head\": 0.023369353264570236}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01637404039502144, \"head\": 0.01431266963481903}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016443081200122833, \"head\": 0.01429709792137146}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01729772984981537, \"head\": 0.014697931706905365}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01673581451177597, \"head\": 0.017439324408769608}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01650990918278694, \"head\": 0.011661309748888016}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.01604093611240387, \"head\": 0.014892570674419403}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015773184597492218, \"head\": 0.014036238193511963}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.015040084719657898, \"head\": 0.013419337570667267}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006296422332525253, \"head\": 0.005705848336219788}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016753707081079483, \"head\": 0.011114019900560379}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016602683812379837, \"head\": 0.013691790401935577}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015491995960474014, \"head\": 0.014014143496751785}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01662476360797882, \"head\": 0.012751970440149307}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03484569117426872, \"head\": 0.03420355170965195}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6135918274521828, \"head\": 0.6384066492319107}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3313870467245579, \"head\": 0.34116358309984207}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.016322724521160126, \"head\": 0.015427354723215103}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13346506655216217, \"head\": 0.022420886904001236}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014580197632312775, \"head\": 0.01342981681227684}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.0133863165974617, \"head\": 0.012107275426387787}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.00916527584195137, \"head\": 0.008515533059835434}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015177041292190552, \"head\": 0.014292459934949875}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.01473245769739151, \"head\": 0.012449804693460464}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010386191308498383, \"head\": 0.009617414325475693}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02572540193796158, \"head\": 0.021830666810274124}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014433614909648895, \"head\": 0.014561664313077927}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.013778012245893478, \"head\": 0.013518113642930984}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013556133955717087, \"head\": 0.11879904940724373}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014330882579088211, \"head\": 0.013256419450044632}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.0277353897690773, \"head\": 0.024586878716945648}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014666818082332611, \"head\": 0.013542208820581436}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014491073787212372, \"head\": 0.013406503945589066}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014387156814336777, \"head\": 0.013485118746757507}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013774745166301727, \"head\": 0.01171473041176796}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013491552323102951, \"head\": 0.011475685983896255}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.038805264979600906, \"head\": 0.03130665421485901}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.01760837808251381, \"head\": 0.016535621136426926}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.01788884773850441, \"head\": 0.01697704568505287}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01597224920988083, \"head\": 0.014068637043237686}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.0174173042178154, \"head\": 0.013594988733530045}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.0556928776204586, \"head\": 0.04094543680548668}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05542156845331192, \"head\": 0.043893586844205856}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04450211301445961, \"head\": 0.03205442056059837}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.017370548099279404, \"head\": 0.015468563884496689}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.028487402945756912, \"head\": 0.025255993008613586}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.01562681794166565, \"head\": 0.014141503721475601}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025616463273763657, \"head\": 0.02194872871041298}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.01597171649336815, \"head\": 0.013524461537599564}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.01585054025053978, \"head\": 0.01337556540966034}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016606692224740982, \"head\": 0.013263624161481857}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01583750918507576, \"head\": 0.013719622045755386}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015813417732715607, \"head\": 0.013233788311481476}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016765277832746506, \"head\": 0.014268584549427032}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016675397753715515, \"head\": 0.016042400151491165}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01684325560927391, \"head\": 0.015265025198459625}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.0170476995408535, \"head\": 0.014526940882205963}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.026859253644943237, \"head\": 0.024401351809501648}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.017056837677955627, \"head\": 0.014004390686750412}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01674763485789299, \"head\": 0.014085549861192703}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016670983284711838, \"head\": 0.014124032109975815}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.018321257084608078, \"head\": 0.017220694571733475}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01670653000473976, \"head\": 0.012279331684112549}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.017028987407684326, \"head\": 0.015243075788021088}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01640733703970909, \"head\": 0.014252986758947372}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.015301275998353958, \"head\": 0.014021962881088257}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.0065071359276771545, \"head\": 0.005808252841234207}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.017068859189748764, \"head\": 0.011194184422492981}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016981184482574463, \"head\": 0.01352033019065857}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.01604801043868065, \"head\": 0.014776799827814102}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.0178297720849514, \"head\": 0.013073306530714035}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03557348996400833, \"head\": 0.03402256965637207}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6753341294825077, \"head\": 0.6324602738022804}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.33702413365244865, \"head\": 0.346540242433548}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.016859889030456543, \"head\": 0.017056316137313843}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.2109132669866085, \"head\": 0.022922120988368988}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.015043102204799652, \"head\": 0.014077343046665192}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013535894453525543, \"head\": 0.012141764163970947}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009312093257904053, \"head\": 0.008772440254688263}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015642721205949783, \"head\": 0.014504138380289078}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014837905764579773, \"head\": 0.013047289103269577}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010554216802120209, \"head\": 0.009726442396640778}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.024288982152938843, \"head\": 0.02222336456179619}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014198992401361465, \"head\": 0.014821432530879974}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.01386178657412529, \"head\": 0.013186998665332794}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.01519199088215828, \"head\": 0.11923621967434883}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014896351844072342, \"head\": 0.013612050563097}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.02768705040216446, \"head\": 0.02574004977941513}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014575880020856857, \"head\": 0.013810873031616211}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014492705464363098, \"head\": 0.01380087435245514}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014481544494628906, \"head\": 0.01373649388551712}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013798628002405167, \"head\": 0.012883804738521576}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013566501438617706, \"head\": 0.011820212006568909}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.037597667425870895, \"head\": 0.03129349276423454}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.01783868670463562, \"head\": 0.016284987330436707}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.017988987267017365, \"head\": 0.01595020294189453}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016063079237937927, \"head\": 0.014441099017858505}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.015949364751577377, \"head\": 0.014236856251955032}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05059098079800606, \"head\": 0.040418002754449844}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05232148990035057, \"head\": 0.04133683070540428}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04216952621936798, \"head\": 0.0320717990398407}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.01638428121805191, \"head\": 0.0155799500644207}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.028236962854862213, \"head\": 0.025507301092147827}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.0153079554438591, \"head\": 0.014183301478624344}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.02461768314242363, \"head\": 0.02243908867239952}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015702322125434875, \"head\": 0.013567473739385605}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015670020133256912, \"head\": 0.013339795172214508}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016270648688077927, \"head\": 0.013212066143751144}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01565186306834221, \"head\": 0.013315822929143906}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015573326498270035, \"head\": 0.013205252587795258}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.017322443425655365, \"head\": 0.014326773583889008}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.017546989023685455, \"head\": 0.0147373266518116}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01664608344435692, \"head\": 0.014171522110700607}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016649138182401657, \"head\": 0.014160718768835068}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02713010087609291, \"head\": 0.02893376350402832}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01689264550805092, \"head\": 0.014190945774316788}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01776067167520523, \"head\": 0.014060743153095245}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016480404883623123, \"head\": 0.014091279357671738}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01706649363040924, \"head\": 0.01662706956267357}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.016749780625104904, \"head\": 0.013589035719633102}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016674384474754333, \"head\": 0.014714315533638}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015926171094179153, \"head\": 0.013717155903577805}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014413837343454361, \"head\": 0.013508684933185577}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006264731287956238, \"head\": 0.005725577473640442}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016500253230333328, \"head\": 0.01118510589003563}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.017034515738487244, \"head\": 0.013292666524648666}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.016300823539495468, \"head\": 0.014230906963348389}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01694425567984581, \"head\": 0.01291172206401825}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03507328778505325, \"head\": 0.03534557297825813}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6455711089074612, \"head\": 0.6283042468130589}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.34114306047558784, \"head\": 0.3350161947309971}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01766248419880867, \"head\": 0.015553731471300125}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1497422493994236, \"head\": 0.02299472689628601}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.01592438668012619, \"head\": 0.013689350336790085}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.01423240453004837, \"head\": 0.012683253735303879}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.01205858588218689, \"head\": 0.008601926267147064}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.018256645649671555, \"head\": 0.014098860323429108}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.015155702829360962, \"head\": 0.014891959726810455}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010430004447698593, \"head\": 0.010427519679069519}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.028909582644701004, \"head\": 0.02513795718550682}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.015196207910776138, \"head\": 0.014947067946195602}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.013961885124444962, \"head\": 0.013266850262880325}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013754226267337799, \"head\": 0.11881714314222336}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.01473361998796463, \"head\": 0.01355542242527008}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.028653472661972046, \"head\": 0.025111567229032516}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014779776334762573, \"head\": 0.014019615948200226}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.01460249349474907, \"head\": 0.014740433543920517}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014651574194431305, \"head\": 0.017390131950378418}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013783331960439682, \"head\": 0.011688534170389175}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.01403253898024559, \"head\": 0.01302841305732727}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03821367770433426, \"head\": 0.033288393169641495}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017709724605083466, \"head\": 0.016530580818653107}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.01823163777589798, \"head\": 0.015973974019289017}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01681208610534668, \"head\": 0.013714883476495743}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.01696065068244934, \"head\": 0.013723999261856079}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.0508597195148468, \"head\": 0.04068012163043022}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05281766131520271, \"head\": 0.0415656678378582}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04925791546702385, \"head\": 0.03207095339894295}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.01627112179994583, \"head\": 0.0157880000770092}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027875564992427826, \"head\": 0.024827271699905396}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015355397015810013, \"head\": 0.014389894902706146}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024865951389074326, \"head\": 0.022519059479236603}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015644241124391556, \"head\": 0.013708200305700302}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015678152441978455, \"head\": 0.013338454067707062}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016174647957086563, \"head\": 0.01324097067117691}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015662606805562973, \"head\": 0.013319157063961029}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.0159771665930748, \"head\": 0.01324961706995964}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016661904752254486, \"head\": 0.014635656028985977}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016678623855113983, \"head\": 0.01493833214044571}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01753443479537964, \"head\": 0.014393899589776993}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016675788909196854, \"head\": 0.014307066798210144}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02604396641254425, \"head\": 0.02313312515616417}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016416199505329132, \"head\": 0.014016717672348022}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016741853207349777, \"head\": 0.01473209261894226}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01647299900650978, \"head\": 0.014074742794036865}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01681249588727951, \"head\": 0.016717880964279175}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.016268163919448853, \"head\": 0.011270962655544281}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016154620796442032, \"head\": 0.01465243473649025}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015841610729694366, \"head\": 0.01396385207772255}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014435425400733948, \"head\": 0.013653136789798737}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006287474185228348, \"head\": 0.005951371043920517}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016546938568353653, \"head\": 0.011435315012931824}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016732316464185715, \"head\": 0.013348951935768127}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015537440776824951, \"head\": 0.01426912471652031}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01664574444293976, \"head\": 0.012915588915348053}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03376961499452591, \"head\": 0.0341353639960289}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6076441779732704, \"head\": 0.6256816051900387}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.348387498408556, \"head\": 0.35828133672475815}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.02002306655049324, \"head\": 0.016186941415071487}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13629884645342827, \"head\": 0.023119207471609116}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014658547937870026, \"head\": 0.014029249548912048}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013714831322431564, \"head\": 0.012403357774019241}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009741082787513733, \"head\": 0.008595466613769531}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.016503367573022842, \"head\": 0.014218252152204514}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014938563108444214, \"head\": 0.012657850980758667}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010569695383310318, \"head\": 0.009777780622243881}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02518300712108612, \"head\": 0.02216179668903351}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.01439172774553299, \"head\": 0.014959249645471573}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014259368181228638, \"head\": 0.01357664167881012}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013933677226305008, \"head\": 0.12198323756456375}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014803659170866013, \"head\": 0.01383882761001587}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.02826743945479393, \"head\": 0.024907801300287247}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.015017122030258179, \"head\": 0.018102891743183136}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.015558026731014252, \"head\": 0.015992578119039536}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.01463085412979126, \"head\": 0.013832427561283112}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.01386379823088646, \"head\": 0.011806633323431015}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013548988848924637, \"head\": 0.011794831603765488}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03809782862663269, \"head\": 0.03638511896133423}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.018002577126026154, \"head\": 0.020695704966783524}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.01829345151782036, \"head\": 0.016116127371788025}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01626933366060257, \"head\": 0.01423322781920433}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016262583434581757, \"head\": 0.013783954083919525}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05256035551428795, \"head\": 0.04474504292011261}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05312930420041084, \"head\": 0.04120459780097008}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.042692188173532486, \"head\": 0.032645754516124725}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.01633436605334282, \"head\": 0.015624314546585083}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027287449687719345, \"head\": 0.02589087188243866}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015132930129766464, \"head\": 0.014791734516620636}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024955380707979202, \"head\": 0.02345563843846321}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015648357570171356, \"head\": 0.013705793768167496}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015596922487020493, \"head\": 0.013739638030529022}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016502756625413895, \"head\": 0.01651196926832199}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015635892748832703, \"head\": 0.013652786612510681}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015624433755874634, \"head\": 0.014348313212394714}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016547072678804398, \"head\": 0.014207098633050919}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016858212649822235, \"head\": 0.01459912583231926}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01657102257013321, \"head\": 0.01634710282087326}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016502976417541504, \"head\": 0.016108673065900803}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.026088081300258636, \"head\": 0.023046422749757767}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01650315523147583, \"head\": 0.014166884124279022}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016980323940515518, \"head\": 0.01465924084186554}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.0164378322660923, \"head\": 0.014598164707422256}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01689193770289421, \"head\": 0.017543621361255646}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.016040407121181488, \"head\": 0.011409707367420197}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016318149864673615, \"head\": 0.015479601919651031}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01578688994050026, \"head\": 0.014051485806703568}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014356307685375214, \"head\": 0.013673603534698486}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.0062087588012218475, \"head\": 0.006020694971084595}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01655738800764084, \"head\": 0.013337485492229462}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.01645268127322197, \"head\": 0.014019783586263657}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.016486987471580505, \"head\": 0.01428055390715599}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01702570915222168, \"head\": 0.012954961508512497}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.0335455983877182, \"head\": 0.03473604470491409}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6187894605100155, \"head\": 0.6198837012052536}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3352195620536804, \"head\": 0.3400284871459007}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01644735038280487, \"head\": 0.01595667004585266}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13205186277627945, \"head\": 0.0237431600689888}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014369010925292969, \"head\": 0.013725221157073975}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013355646282434464, \"head\": 0.012026097625494003}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009096276015043259, \"head\": 0.008456394076347351}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015162702649831772, \"head\": 0.015756841748952866}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014774303883314133, \"head\": 0.012517053633928299}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010358612984418869, \"head\": 0.009952228516340256}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.023984383791685104, \"head\": 0.02298736199736595}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014207255095243454, \"head\": 0.015167511999607086}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.01385536789894104, \"head\": 0.013418946415185928}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013660881668329239, \"head\": 0.12648791819810867}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014367148280143738, \"head\": 0.0134761743247509}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.028461597859859467, \"head\": 0.024747099727392197}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014651522040367126, \"head\": 0.014756642282009125}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.01441521942615509, \"head\": 0.013839416205883026}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.01461746171116829, \"head\": 0.014394111931324005}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013586923480033875, \"head\": 0.012008264660835266}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.01367342472076416, \"head\": 0.012066077440977097}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03770791366696358, \"head\": 0.03118050843477249}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.01769450679421425, \"head\": 0.016279656440019608}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018164299428462982, \"head\": 0.016290925443172455}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.017420820891857147, \"head\": 0.01500946655869484}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016050122678279877, \"head\": 0.017301317304372787}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05105780065059662, \"head\": 0.04079858958721161}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05212995782494545, \"head\": 0.04675007238984108}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.042033348232507706, \"head\": 0.03215334936976433}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.015921104699373245, \"head\": 0.01662679761648178}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027314946055412292, \"head\": 0.025533419102430344}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.01630430296063423, \"head\": 0.015054862946271896}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024953041225671768, \"head\": 0.022956401109695435}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015262685716152191, \"head\": 0.013431809842586517}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015347912907600403, \"head\": 0.013422742486000061}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.015796758234500885, \"head\": 0.013738136738538742}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01646079123020172, \"head\": 0.013764537870883942}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015715472400188446, \"head\": 0.013411950320005417}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016286637634038925, \"head\": 0.01453728973865509}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.01631496101617813, \"head\": 0.015406250953674316}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016362011432647705, \"head\": 0.01478523388504982}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.017810724675655365, \"head\": 0.01450735330581665}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02658398449420929, \"head\": 0.02423979714512825}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01604030653834343, \"head\": 0.014008346945047379}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016075659543275833, \"head\": 0.014047279953956604}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016521744430065155, \"head\": 0.014206428080797195}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.016832124441862106, \"head\": 0.016798172146081924}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.015920381993055344, \"head\": 0.01149735227227211}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.015707917511463165, \"head\": 0.014971878379583359}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01566099002957344, \"head\": 0.014939416199922562}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014201167970895767, \"head\": 0.014958158135414124}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.0067157745361328125, \"head\": 0.0057830289006233215}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.018123533576726913, \"head\": 0.011361788958311081}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.01660260558128357, \"head\": 0.014348845928907394}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015230663120746613, \"head\": 0.017117008566856384}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.016973212361335754, \"head\": 0.015012923628091812}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03493548184633255, \"head\": 0.038237351924180984}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6132175847887993, \"head\": 0.6303895711898804}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3417942151427269, \"head\": 0.3595150038599968}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.017028894275426865, \"head\": 0.015875354409217834}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.14154110103845596, \"head\": 0.022914931178092957}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014619853347539902, \"head\": 0.013815291225910187}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.015619244426488876, \"head\": 0.012871567159891129}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.010182902216911316, \"head\": 0.008852940052747726}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015377920120954514, \"head\": 0.014525100588798523}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014512419700622559, \"head\": 0.012697506695985794}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010328713804483414, \"head\": 0.009821817278862}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.023837994784116745, \"head\": 0.022557679563760757}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014105957001447678, \"head\": 0.01603737846016884}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014402218163013458, \"head\": 0.013363618403673172}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.01363159716129303, \"head\": 0.1141635812819004}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.0143253393471241, \"head\": 0.013657063245773315}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027451805770397186, \"head\": 0.02506614848971367}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.015247926115989685, \"head\": 0.013824507594108582}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014472436159849167, \"head\": 0.013782702386379242}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014512903988361359, \"head\": 0.013816922903060913}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013471618294715881, \"head\": 0.011820841580629349}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013453330844640732, \"head\": 0.01174120232462883}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03771773353219032, \"head\": 0.03155820816755295}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017823059111833572, \"head\": 0.016434457153081894}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.017935439944267273, \"head\": 0.016484562307596207}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.0160745307803154, \"head\": 0.01402825117111206}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016779925674200058, \"head\": 0.013865113258361816}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05045262351632118, \"head\": 0.03995803743600845}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.052903201431035995, \"head\": 0.04073295369744301}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.041395340114831924, \"head\": 0.03169465810060501}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.015972770750522614, \"head\": 0.01862717792391777}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027171753346920013, \"head\": 0.027468036860227585}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015052437782287598, \"head\": 0.015242747962474823}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024824045598506927, \"head\": 0.023007065057754517}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015462253242731094, \"head\": 0.019072730094194412}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.01530182734131813, \"head\": 0.014338746666908264}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.015845417976379395, \"head\": 0.013309042900800705}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01538420096039772, \"head\": 0.013220511376857758}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015403248369693756, \"head\": 0.013216990977525711}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.01641768217086792, \"head\": 0.014436580240726471}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016237519681453705, \"head\": 0.014735221862792969}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016220010817050934, \"head\": 0.015030700713396072}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.01619540899991989, \"head\": 0.014280468225479126}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02583026885986328, \"head\": 0.02564939484000206}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01635582745075226, \"head\": 0.015165340155363083}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01649026945233345, \"head\": 0.016552221029996872}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01644519343972206, \"head\": 0.014427758753299713}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01653153821825981, \"head\": 0.01659993827342987}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01605870947241783, \"head\": 0.011323362588882446}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.01609264686703682, \"head\": 0.014777000993490219}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015910301357507706, \"head\": 0.014538370072841644}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.01443859189748764, \"head\": 0.013504087924957275}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006282564252614975, \"head\": 0.005701359361410141}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016546394675970078, \"head\": 0.011213608086109161}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016568180173635483, \"head\": 0.013401925563812256}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015474602580070496, \"head\": 0.014237433671951294}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.017611969262361526, \"head\": 0.012805715203285217}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.034502096474170685, \"head\": 0.03451620042324066}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6179748326539993, \"head\": 0.635150857269764}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.33445557579398155, \"head\": 0.34565935656428337}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01655248925089836, \"head\": 0.01603025570511818}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13611024990677834, \"head\": 0.023207034915685654}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014445357024669647, \"head\": 0.014132607728242874}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.0132858045399189, \"head\": 0.01235557347536087}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009168576449155807, \"head\": 0.008802816271781921}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.01534595713019371, \"head\": 0.01472405344247818}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014893557876348495, \"head\": 0.012730419635772705}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010419007390737534, \"head\": 0.010028649121522903}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02420433983206749, \"head\": 0.022683270275592804}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014396775513887405, \"head\": 0.015208359807729721}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014070693403482437, \"head\": 0.013361938297748566}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013867359608411789, \"head\": 0.1425699032843113}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014580179005861282, \"head\": 0.013797126710414886}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027906648814678192, \"head\": 0.0327276811003685}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.015232395380735397, \"head\": 0.014535706490278244}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014824479818344116, \"head\": 0.014108963310718536}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014754410833120346, \"head\": 0.013891074806451797}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013927292078733444, \"head\": 0.011943042278289795}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.0140300951898098, \"head\": 0.011960543692111969}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03836655244231224, \"head\": 0.03200696408748627}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.018324952572584152, \"head\": 0.01712220162153244}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.01825426146388054, \"head\": 0.016063347458839417}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016908876597881317, \"head\": 0.013908956199884415}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.01640041545033455, \"head\": 0.013833556324243546}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.053206853568553925, \"head\": 0.040275413542985916}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.06508603319525719, \"head\": 0.04143272712826729}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.043781835585832596, \"head\": 0.03338594734668732}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016359038650989532, \"head\": 0.01574760302901268}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.028046082705259323, \"head\": 0.0245712511241436}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015581373125314713, \"head\": 0.01417151466012001}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025544900447130203, \"head\": 0.022343479096889496}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015838999301195145, \"head\": 0.013546045869588852}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015814632177352905, \"head\": 0.013598509132862091}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016345158219337463, \"head\": 0.013765368610620499}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015859253704547882, \"head\": 0.013747211545705795}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.01567835360765457, \"head\": 0.01333925873041153}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016614042222499847, \"head\": 0.014408037066459656}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016671784222126007, \"head\": 0.014747556298971176}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01655411347746849, \"head\": 0.01441679522395134}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016493607312440872, \"head\": 0.014213133603334427}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02609759196639061, \"head\": 0.02335527166724205}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016663778573274612, \"head\": 0.014207758009433746}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016614601016044617, \"head\": 0.01441461592912674}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016666997224092484, \"head\": 0.014687392860651016}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01672673597931862, \"head\": 0.01671873778104782}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.015971139073371887, \"head\": 0.011464901268482208}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.015907295048236847, \"head\": 0.014850124716758728}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01569303125143051, \"head\": 0.014089807868003845}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014240473508834839, \"head\": 0.013695426285266876}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006251368671655655, \"head\": 0.005824673920869827}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016555465757846832, \"head\": 0.011434052139520645}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016426723450422287, \"head\": 0.014747995883226395}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015353206545114517, \"head\": 0.01428014412522316}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01654723659157753, \"head\": 0.012916631996631622}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.033768486231565475, \"head\": 0.03471894562244415}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6092536449432373, \"head\": 0.6466961093246937}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3382997065782547, \"head\": 0.34253397956490517}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.016958292573690414, \"head\": 0.015614576637744904}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1417619213461876, \"head\": 0.02267681434750557}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.01484939455986023, \"head\": 0.013772167265415192}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013455390930175781, \"head\": 0.0143359936773777}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009120840579271317, \"head\": 0.010338682681322098}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015196379274129868, \"head\": 0.016264334321022034}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014762062579393387, \"head\": 0.012577522546052933}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010410115122795105, \"head\": 0.00980045273900032}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.023896969854831696, \"head\": 0.02227230742573738}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014105219393968582, \"head\": 0.01614817976951599}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.013886094093322754, \"head\": 0.015455245971679688}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013829290866851807, \"head\": 0.13313905522227287}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.015028402209281921, \"head\": 0.013722378760576248}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027939993888139725, \"head\": 0.025431402027606964}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014841120690107346, \"head\": 0.014143139123916626}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014841563999652863, \"head\": 0.014475051313638687}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014759033918380737, \"head\": 0.01387113705277443}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.014023397117853165, \"head\": 0.011758465319871902}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013862762600183487, \"head\": 0.011707063764333725}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.037815965712070465, \"head\": 0.032246023416519165}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017941445112228394, \"head\": 0.016458362340927124}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018380723893642426, \"head\": 0.01626913622021675}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01629934459924698, \"head\": 0.013858512043952942}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016073118895292282, \"head\": 0.01377367228269577}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.051624786108732224, \"head\": 0.041362665593624115}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05377763882279396, \"head\": 0.041626572608947754}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04340366646647453, \"head\": 0.040732573717832565}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016235489398241043, \"head\": 0.01558678224682808}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.02791719138622284, \"head\": 0.026837032288312912}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015473771840333939, \"head\": 0.015168886631727219}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025636974722146988, \"head\": 0.025733154267072678}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015766728669404984, \"head\": 0.013789016753435135}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015723630785942078, \"head\": 0.022055387496948242}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016156211495399475, \"head\": 0.01790754869580269}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015808772295713425, \"head\": 0.013359185308218002}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015777461230754852, \"head\": 0.015730734914541245}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.017078489065170288, \"head\": 0.01687602698802948}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016637790948152542, \"head\": 0.01544036716222763}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016750261187553406, \"head\": 0.014485340565443039}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.01664753630757332, \"head\": 0.014245320111513138}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02666550874710083, \"head\": 0.023731466382741928}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016519997268915176, \"head\": 0.01402486115694046}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016611069440841675, \"head\": 0.014175940304994583}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016581010073423386, \"head\": 0.01418304443359375}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01700032874941826, \"head\": 0.019854210317134857}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.018217511475086212, \"head\": 0.011931296437978745}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.01698988303542137, \"head\": 0.014609105885028839}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015986032783985138, \"head\": 0.014001719653606415}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014515656977891922, \"head\": 0.015559423714876175}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006301060318946838, \"head\": 0.0070594437420368195}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01898958534002304, \"head\": 0.011308331042528152}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.017632730305194855, \"head\": 0.013379570096731186}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.01541171595454216, \"head\": 0.014257386326789856}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.016714531928300858, \"head\": 0.01293233036994934}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03370025008916855, \"head\": 0.03473089635372162}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6285514421761036, \"head\": 0.66184351593256}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3564355634152889, \"head\": 0.3372672162950039}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.016808632761240005, \"head\": 0.016565684229135513}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1527331918478012, \"head\": 0.022749677300453186}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.015362206846475601, \"head\": 0.01415296271443367}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013819903135299683, \"head\": 0.012316763401031494}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009404577314853668, \"head\": 0.008690468966960907}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.0157303549349308, \"head\": 0.01428854838013649}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.015181142836809158, \"head\": 0.012631617486476898}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010827358812093735, \"head\": 0.009709421545267105}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02466471493244171, \"head\": 0.022328849881887436}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014776598662137985, \"head\": 0.016874823719263077}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014348801225423813, \"head\": 0.013819050043821335}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.015509963035583496, \"head\": 0.13181283324956894}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.015280228108167648, \"head\": 0.013324867933988571}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.03241302818059921, \"head\": 0.02587062120437622}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.018049802631139755, \"head\": 0.01427064836025238}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.015001632273197174, \"head\": 0.013918314129114151}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.01546730101108551, \"head\": 0.013787470757961273}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.016825933009386063, \"head\": 0.013975653797388077}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.015605580061674118, \"head\": 0.017969056963920593}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.038429006934165955, \"head\": 0.038245268166065216}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.018594779074192047, \"head\": 0.01649521291255951}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018609166145324707, \"head\": 0.01615210622549057}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016594931483268738, \"head\": 0.014240171760320663}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.01635979861021042, \"head\": 0.014038600027561188}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.052023258060216904, \"head\": 0.04145928844809532}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.0564228817820549, \"head\": 0.041147805750370026}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04970075562596321, \"head\": 0.032033223658800125}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.01706620305776596, \"head\": 0.015681490302085876}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.02789836749434471, \"head\": 0.024435903877019882}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015486996620893478, \"head\": 0.01414673775434494}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024930808693170547, \"head\": 0.022186145186424255}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015709269791841507, \"head\": 0.013340402394533157}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.01563197746872902, \"head\": 0.013340268284082413}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016562707722187042, \"head\": 0.01329764723777771}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015579961240291595, \"head\": 0.01380767673254013}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015649620443582535, \"head\": 0.014837495982646942}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016548369079828262, \"head\": 0.016583867371082306}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016511444002389908, \"head\": 0.019447576254606247}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01683192327618599, \"head\": 0.014807227998971939}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016399957239627838, \"head\": 0.014017932116985321}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02556220069527626, \"head\": 0.02286260947585106}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016294073313474655, \"head\": 0.013867326080799103}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01635371521115303, \"head\": 0.014009382575750351}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01634371280670166, \"head\": 0.013917014002799988}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.016748756170272827, \"head\": 0.017229542136192322}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01602109894156456, \"head\": 0.011443540453910828}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016113124787807465, \"head\": 0.014633800834417343}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015702899545431137, \"head\": 0.014028280973434448}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014390993863344193, \"head\": 0.01364743709564209}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.0062393248081207275, \"head\": 0.005780532956123352}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01633550226688385, \"head\": 0.011259656399488449}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016381800174713135, \"head\": 0.013414587825536728}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.0154346264898777, \"head\": 0.014184676110744476}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.016598474234342575, \"head\": 0.012925148010253906}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03396371006965637, \"head\": 0.03440472483634949}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6404286213219166, \"head\": 0.6301891840994358}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.33657001331448555, \"head\": 0.3403909206390381}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01956786960363388, \"head\": 0.016019046306610107}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13165953382849693, \"head\": 0.02618955448269844}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014336392283439636, \"head\": 0.015471536666154861}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013372126966714859, \"head\": 0.01232825219631195}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009082630276679993, \"head\": 0.008723344653844833}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015170879662036896, \"head\": 0.014324039220809937}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014788221567869186, \"head\": 0.012640714645385742}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010272771120071411, \"head\": 0.009717866778373718}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02394130825996399, \"head\": 0.02333734557032585}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014154426753520966, \"head\": 0.014782406389713287}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.013897165656089783, \"head\": 0.01298379898071289}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.01385582983493805, \"head\": 0.12223349511623383}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014468453824520111, \"head\": 0.01338183879852295}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027711644768714905, \"head\": 0.024688679724931717}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014794282615184784, \"head\": 0.013921663165092468}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.01461857184767723, \"head\": 0.013708721846342087}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014702379703521729, \"head\": 0.013693824410438538}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013766959309577942, \"head\": 0.011757910251617432}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013645444065332413, \"head\": 0.011729329824447632}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03773590922355652, \"head\": 0.03180300071835518}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017913762480020523, \"head\": 0.01643161103129387}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.0183492973446846, \"head\": 0.01606995239853859}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016315504908561707, \"head\": 0.013928994536399841}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016025133430957794, \"head\": 0.013736523687839508}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.050744157284498215, \"head\": 0.04056563973426819}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05232828110456467, \"head\": 0.04122849553823471}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04216025769710541, \"head\": 0.0321773961186409}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016137581318616867, \"head\": 0.01578625664114952}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.02798650413751602, \"head\": 0.02532845363020897}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015380706638097763, \"head\": 0.014344684779644012}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025179121643304825, \"head\": 0.023088488727808}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.01572030410170555, \"head\": 0.01338154822587967}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015751194208860397, \"head\": 0.013316821306943893}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016178172081708908, \"head\": 0.013327386230230331}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01583673432469368, \"head\": 0.013360749930143356}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015742912888526917, \"head\": 0.013741813600063324}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.0167037732899189, \"head\": 0.015013806521892548}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016769874840974808, \"head\": 0.01612856239080429}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01668402925133705, \"head\": 0.014319699257612228}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016625747084617615, \"head\": 0.015310961753129959}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.026073582470417023, \"head\": 0.02384103462100029}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016643017530441284, \"head\": 0.015181619673967361}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01662096008658409, \"head\": 0.021456804126501083}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01667940989136696, \"head\": 0.015454225242137909}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.016719404608011246, \"head\": 0.016771670430898666}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.016124844551086426, \"head\": 0.011385083198547363}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016200225800275803, \"head\": 0.014531858265399933}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.015999536961317062, \"head\": 0.020455729216337204}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014558088034391403, \"head\": 0.019533555954694748}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006308794021606445, \"head\": 0.008362408727407455}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01662960648536682, \"head\": 0.015795797109603882}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016609184443950653, \"head\": 0.013847693800926208}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015554193407297134, \"head\": 0.015459112823009491}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01689598709344864, \"head\": 0.014449536800384521}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03402361646294594, \"head\": 0.03518688306212425}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6258206106722355, \"head\": 0.6306139752268791}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.33578185364603996, \"head\": 0.3610400967299938}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.016583718359470367, \"head\": 0.017387647181749344}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.139060128480196, \"head\": 0.02401430532336235}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014797858893871307, \"head\": 0.014018122106790543}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.01352168619632721, \"head\": 0.012252513319253922}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.0093800388276577, \"head\": 0.008671417832374573}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.01540684700012207, \"head\": 0.014373712241649628}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.015624433755874634, \"head\": 0.012773551046848297}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010444045066833496, \"head\": 0.009722165763378143}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.025071196258068085, \"head\": 0.02284884825348854}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014731284230947495, \"head\": 0.014973439276218414}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014181651175022125, \"head\": 0.018105030059814453}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.0149824358522892, \"head\": 0.147114098072052}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.018300529569387436, \"head\": 0.013277038931846619}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.02851663902401924, \"head\": 0.02466394379734993}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.015055142343044281, \"head\": 0.013582523912191391}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014892958104610443, \"head\": 0.013844437897205353}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.015618864446878433, \"head\": 0.013569176197052002}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.014060720801353455, \"head\": 0.011591490358114243}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.01393863558769226, \"head\": 0.011582799255847931}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03809989243745804, \"head\": 0.031374525278806686}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.01798681542277336, \"head\": 0.01819663494825363}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018376778811216354, \"head\": 0.017349235713481903}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01670331507921219, \"head\": 0.01384173333644867}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016355756670236588, \"head\": 0.013680730015039444}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05166888236999512, \"head\": 0.05181368440389633}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05278077349066734, \"head\": 0.04196803644299507}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.042691707611083984, \"head\": 0.03246530145406723}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016253728419542313, \"head\": 0.015659481287002563}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.028907474130392075, \"head\": 0.02469376102089882}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.018267754465341568, \"head\": 0.014347091317176819}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.027436435222625732, \"head\": 0.022135447710752487}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015783794224262238, \"head\": 0.013459470123052597}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015903808176517487, \"head\": 0.013401489704847336}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.017420239746570587, \"head\": 0.01331716775894165}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.016016710549592972, \"head\": 0.013334669172763824}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.01575567200779915, \"head\": 0.01327553391456604}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.01665326952934265, \"head\": 0.014348123222589493}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016322314739227295, \"head\": 0.01477164775133133}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016572684049606323, \"head\": 0.014368213713169098}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.0163564532995224, \"head\": 0.014356926083564758}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02616991102695465, \"head\": 0.023002658039331436}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016418185085058212, \"head\": 0.014178592711687088}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.017166536301374435, \"head\": 0.01421615481376648}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016759570688009262, \"head\": 0.014221057295799255}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01686091721057892, \"head\": 0.016384877264499664}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.016316033899784088, \"head\": 0.011242412030696869}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016003794968128204, \"head\": 0.014540042728185654}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01590455323457718, \"head\": 0.013607379049062729}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014716044068336487, \"head\": 0.013256359845399857}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.0062288641929626465, \"head\": 0.005737729370594025}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01658184453845024, \"head\": 0.01118064671754837}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.01658206805586815, \"head\": 0.013376977294683456}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015389163047075272, \"head\": 0.014025729149580002}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.017139341682195663, \"head\": 0.012693658471107483}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03403155505657196, \"head\": 0.033957500010728836}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.61746821179986, \"head\": 0.6281670816242695}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.33430302888154984, \"head\": 0.3505987897515297}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01649519056081772, \"head\": 0.016515657305717468}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.12833277508616447, \"head\": 0.022589102387428284}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.017153531312942505, \"head\": 0.013634093105793}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.014480531215667725, \"head\": 0.012331001460552216}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009152993559837341, \"head\": 0.009170204401016235}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015457499772310257, \"head\": 0.014345888048410416}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014843866229057312, \"head\": 0.012624133378267288}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010414216667413712, \"head\": 0.009928122162818909}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.024138756096363068, \"head\": 0.022423680871725082}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.01425769180059433, \"head\": 0.014874976128339767}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014059178531169891, \"head\": 0.014165181666612625}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013884834945201874, \"head\": 0.11899416521191597}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014469362795352936, \"head\": 0.013506919145584106}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027844924479722977, \"head\": 0.025308948010206223}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014821652323007584, \"head\": 0.014025166630744934}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014731224626302719, \"head\": 0.014641515910625458}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014696508646011353, \"head\": 0.013601336628198624}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013826854526996613, \"head\": 0.01145210862159729}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013863373547792435, \"head\": 0.011471323668956757}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03723127767443657, \"head\": 0.031317323446273804}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017913788557052612, \"head\": 0.01627233251929283}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.01897437497973442, \"head\": 0.01596413180232048}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016275759786367416, \"head\": 0.01406794786453247}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016228727996349335, \"head\": 0.013644281774759293}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05122879147529602, \"head\": 0.040633756667375565}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05242395028471947, \"head\": 0.04094218835234642}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04203420132398605, \"head\": 0.03178151324391365}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016540344804525375, \"head\": 0.015584167093038559}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027764417231082916, \"head\": 0.024716481566429138}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015364162623882294, \"head\": 0.014109674841165543}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025214456021785736, \"head\": 0.03259691223502159}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015718750655651093, \"head\": 0.018311496824026108}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015895944088697433, \"head\": 0.017376478761434555}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.01613476499915123, \"head\": 0.014329411089420319}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015750110149383545, \"head\": 0.014093596488237381}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015689268708229065, \"head\": 0.014756403863430023}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.01670035719871521, \"head\": 0.015284880995750427}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016862545162439346, \"head\": 0.016462203115224838}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016659460961818695, \"head\": 0.014630496501922607}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016649551689624786, \"head\": 0.014507155865430832}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02632807567715645, \"head\": 0.02375197783112526}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01646224781870842, \"head\": 0.014369435608386993}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016478348523378372, \"head\": 0.014261361211538315}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01662100851535797, \"head\": 0.014164146035909653}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01696561649441719, \"head\": 0.0179908350110054}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01617695391178131, \"head\": 0.012390930205583572}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.01623798906803131, \"head\": 0.017767634242773056}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.016022201627492905, \"head\": 0.014143779873847961}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014764487743377686, \"head\": 0.013879653066396713}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006389185786247253, \"head\": 0.005838904529809952}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01678437367081642, \"head\": 0.012419510632753372}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016744378954172134, \"head\": 0.014928512275218964}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015759289264678955, \"head\": 0.018466699868440628}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01758643239736557, \"head\": 0.015843283385038376}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.034224122762680054, \"head\": 0.0391959510743618}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6253770180046558, \"head\": 0.7418983615934849}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3383112847805023, \"head\": 0.367551788687706}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.017411265522241592, \"head\": 0.016852490603923798}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1306459978222847, \"head\": 0.02711576595902443}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014449913054704666, \"head\": 0.0168328657746315}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013422355055809021, \"head\": 0.014799952507019043}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009175267070531845, \"head\": 0.010042916983366013}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015400741249322891, \"head\": 0.014772038906812668}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014967277646064758, \"head\": 0.012592345476150513}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.0105823315680027, \"head\": 0.009994424879550934}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.024134207516908646, \"head\": 0.022582732141017914}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014377187937498093, \"head\": 0.015357371419668198}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014124065637588501, \"head\": 0.01309170201420784}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.014126967638731003, \"head\": 0.2169327512383461}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.01477247104048729, \"head\": 0.013616189360618591}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.02801959589123726, \"head\": 0.025103401392698288}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014928910881280899, \"head\": 0.013818304985761642}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014847952872514725, \"head\": 0.01639239862561226}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.015006549656391144, \"head\": 0.016552969813346863}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.01397806778550148, \"head\": 0.012491799890995026}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013861637562513351, \"head\": 0.011635363101959229}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03767894208431244, \"head\": 0.03666815161705017}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.018017195165157318, \"head\": 0.019758202135562897}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018202580511569977, \"head\": 0.016338516026735306}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016445104032754898, \"head\": 0.013971555978059769}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016227837651968002, \"head\": 0.014421924948692322}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05113197863101959, \"head\": 0.041708216071128845}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.052269838750362396, \"head\": 0.041352711617946625}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04198337718844414, \"head\": 0.03200962021946907}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016614023596048355, \"head\": 0.018113892525434494}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.028154537081718445, \"head\": 0.025416407734155655}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015327014029026031, \"head\": 0.01440395787358284}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.02496621385216713, \"head\": 0.022581156343221664}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.016091201454401016, \"head\": 0.013520997017621994}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.01589163765311241, \"head\": 0.0135020911693573}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.01587030664086342, \"head\": 0.013473939150571823}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015490300953388214, \"head\": 0.013416070491075516}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015554092824459076, \"head\": 0.013473737984895706}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016642756760120392, \"head\": 0.014901082962751389}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.017733607441186905, \"head\": 0.01859385520219803}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016543712466955185, \"head\": 0.016155794262886047}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.01706690713763237, \"head\": 0.014486156404018402}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.025713548064231873, \"head\": 0.02362842485308647}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.017224904149770737, \"head\": 0.014434825628995895}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01666012406349182, \"head\": 0.015275698155164719}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016289662569761276, \"head\": 0.014246586710214615}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.016402430832386017, \"head\": 0.017988920211791992}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.015899382531642914, \"head\": 0.011718709021806717}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016301967203617096, \"head\": 0.015271909534931183}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01595919579267502, \"head\": 0.015359614044427872}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014663565903902054, \"head\": 0.014647237956523895}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006314456462860107, \"head\": 0.006058424711227417}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016631629317998886, \"head\": 0.011483706533908844}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.0166192464530468, \"head\": 0.01372871920466423}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.016391225159168243, \"head\": 0.014703072607517242}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01744915544986725, \"head\": 0.013285495340824127}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03343868628144264, \"head\": 0.03639541566371918}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.615305133163929, \"head\": 0.714109618216753}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3369106873869896, \"head\": 0.3653544820845127}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01655822992324829, \"head\": 0.016131959855556488}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1297694779932499, \"head\": 0.02279902994632721}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014292154461145401, \"head\": 0.01460898295044899}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013400834053754807, \"head\": 0.014704283326864243}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009147271513938904, \"head\": 0.01145036518573761}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015137121081352234, \"head\": 0.01671343296766281}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.01476917415857315, \"head\": 0.012883633375167847}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010727904736995697, \"head\": 0.00980282574892044}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.024513252079486847, \"head\": 0.02752752974629402}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014285236597061157, \"head\": 0.015945710241794586}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014065995812416077, \"head\": 0.013180829584598541}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013931319117546082, \"head\": 0.21466150879859924}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014675237238407135, \"head\": 0.013948451727628708}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.02936752513051033, \"head\": 0.02547437697649002}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014934375882148743, \"head\": 0.013787619769573212}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014806166291236877, \"head\": 0.013647332787513733}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014714300632476807, \"head\": 0.01367572695016861}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013809822499752045, \"head\": 0.011834856122732162}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.014622200280427933, \"head\": 0.012433234602212906}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03790012374520302, \"head\": 0.048058461397886276}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017903409898281097, \"head\": 0.026569556444883347}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018226992338895798, \"head\": 0.016858723014593124}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01636796072125435, \"head\": 0.014392297714948654}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.01649485155940056, \"head\": 0.014674197882413864}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.050752587616443634, \"head\": 0.04145440831780434}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05359390005469322, \"head\": 0.042836252599954605}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04160249978303909, \"head\": 0.032538022845983505}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016359984874725342, \"head\": 0.015654560178518295}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027931813150644302, \"head\": 0.024702075868844986}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.01531236618757248, \"head\": 0.014242462813854218}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024843618273735046, \"head\": 0.023030493408441544}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015702560544013977, \"head\": 0.013663943856954575}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015731222927570343, \"head\": 0.013581272214651108}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.01665758714079857, \"head\": 0.013516541570425034}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.016352500766515732, \"head\": 0.013594426214694977}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.016098495572805405, \"head\": 0.013350557535886765}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016671251505613327, \"head\": 0.014380905777215958}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.016684144735336304, \"head\": 0.014740992337465286}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.017372168600559235, \"head\": 0.014431245625019073}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.01681104302406311, \"head\": 0.014457639306783676}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.025631744414567947, \"head\": 0.023288089781999588}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01631402224302292, \"head\": 0.01421067863702774}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01634790375828743, \"head\": 0.014300502836704254}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016328617930412292, \"head\": 0.014245763421058655}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.016776610165834427, \"head\": 0.016667895019054413}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01599499210715294, \"head\": 0.011372044682502747}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016045179218053818, \"head\": 0.014728516340255737}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01583433896303177, \"head\": 0.01384928822517395}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.01455777883529663, \"head\": 0.013513956218957901}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006351374089717865, \"head\": 0.005725979804992676}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.01663714274764061, \"head\": 0.011195778846740723}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016472093760967255, \"head\": 0.013523481786251068}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015519354492425919, \"head\": 0.01416342705488205}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.016728568822145462, \"head\": 0.012747783213853836}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.033842187374830246, \"head\": 0.03411843627691269}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6202927529811859, \"head\": 0.622322291135788}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.33722764253616333, \"head\": 0.3532957322895527}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.0167839452624321, \"head\": 0.01589396223425865}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13291310146450996, \"head\": 0.02328869327902794}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014484699815511703, \"head\": 0.014110639691352844}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013525187969207764, \"head\": 0.013208389282226562}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009201426059007645, \"head\": 0.008833669126033783}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015553399920463562, \"head\": 0.014707159250974655}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.015132635831832886, \"head\": 0.013034272938966751}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010513681918382645, \"head\": 0.00985020399093628}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.024212956428527832, \"head\": 0.02257026731967926}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014200646430253983, \"head\": 0.01507510244846344}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.013909861445426941, \"head\": 0.013195466250181198}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013737745583057404, \"head\": 0.11931835487484932}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014628760516643524, \"head\": 0.01351381465792656}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027529004961252213, \"head\": 0.024871092289686203}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014736153185367584, \"head\": 0.013880893588066101}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014692481607198715, \"head\": 0.013790585100650787}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014561358839273453, \"head\": 0.013788830488920212}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013744428753852844, \"head\": 0.011874541640281677}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013708148151636124, \"head\": 0.011859364807605743}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03725280985236168, \"head\": 0.03158283606171608}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017627492547035217, \"head\": 0.016522273421287537}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.017942160367965698, \"head\": 0.016700129956007004}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016217239201068878, \"head\": 0.014193084090948105}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016108855605125427, \"head\": 0.013871259987354279}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05046159029006958, \"head\": 0.040706533938646317}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.0520692840218544, \"head\": 0.0417206697165966}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.041619133204221725, \"head\": 0.03204452618956566}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.01619672030210495, \"head\": 0.015596501529216766}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027538202702999115, \"head\": 0.024379167705774307}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015256822109222412, \"head\": 0.01383453980088234}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025010492652654648, \"head\": 0.021860241889953613}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.01643860712647438, \"head\": 0.013777881860733032}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015632618218660355, \"head\": 0.016841750591993332}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.01598465070128441, \"head\": 0.01667441800236702}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015516143292188644, \"head\": 0.013631075620651245}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015892960131168365, \"head\": 0.013349685817956924}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016571275889873505, \"head\": 0.01452178880572319}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.0167166106402874, \"head\": 0.017774324864149094}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01645178720355034, \"head\": 0.015188626945018768}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016450129449367523, \"head\": 0.014462962746620178}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02672792598605156, \"head\": 0.023196548223495483}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016360700130462646, \"head\": 0.014071151614189148}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016406655311584473, \"head\": 0.016917593777179718}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016351517289876938, \"head\": 0.017202671617269516}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01647559553384781, \"head\": 0.01794428750872612}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.015985552221536636, \"head\": 0.013243444263935089}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.015978656709194183, \"head\": 0.0144585520029068}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01575925573706627, \"head\": 0.015230823308229446}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014272652566432953, \"head\": 0.01508326455950737}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006214067339897156, \"head\": 0.005719836801290512}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016370564699172974, \"head\": 0.011038590222597122}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016376718878746033, \"head\": 0.013162132352590561}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015318118035793304, \"head\": 0.015539254993200302}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.016528785228729248, \"head\": 0.012931466102600098}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.033698223531246185, \"head\": 0.03355169668793678}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6407832466065884, \"head\": 0.64785485714674}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3327033631503582, \"head\": 0.344284288585186}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01646854355931282, \"head\": 0.01588001474738121}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1353301778435707, \"head\": 0.027094624936580658}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014592360705137253, \"head\": 0.01666775718331337}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013388540595769882, \"head\": 0.012806504964828491}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009112957864999771, \"head\": 0.008602067828178406}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.01519610732793808, \"head\": 0.014070849865674973}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014755088835954666, \"head\": 0.012325789779424667}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010336637496948242, \"head\": 0.009531058371067047}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.023803304880857468, \"head\": 0.02224675938487053}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014421351253986359, \"head\": 0.015028633177280426}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014033220708370209, \"head\": 0.013010047376155853}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013806365430355072, \"head\": 0.11881570890545845}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014397166669368744, \"head\": 0.01339791715145111}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027657203376293182, \"head\": 0.02457820251584053}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014786045998334885, \"head\": 0.013572245836257935}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014821693301200867, \"head\": 0.013645794242620468}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014659170061349869, \"head\": 0.01348770409822464}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.01359504833817482, \"head\": 0.011617634445428848}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013533275574445724, \"head\": 0.011591833084821701}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.03687168285250664, \"head\": 0.031001482158899307}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017686493694782257, \"head\": 0.016240842640399933}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.017940320074558258, \"head\": 0.015895865857601166}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01605474203824997, \"head\": 0.013676438480615616}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.015976887196302414, \"head\": 0.013621848076581955}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05101526156067848, \"head\": 0.04002391919493675}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05187055841088295, \"head\": 0.040455471724271774}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04411944001913071, \"head\": 0.031505998224020004}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016316384077072144, \"head\": 0.018535606563091278}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.02847602218389511, \"head\": 0.024564217776060104}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015405602753162384, \"head\": 0.014129996299743652}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.025018148124217987, \"head\": 0.022015713155269623}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015781059861183167, \"head\": 0.013686951249837875}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.016581863164901733, \"head\": 0.01325131207704544}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.016223330050706863, \"head\": 0.013201069086790085}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015848200768232346, \"head\": 0.013198461383581161}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015738248825073242, \"head\": 0.01309031993150711}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016744591295719147, \"head\": 0.014387775212526321}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.01738853007555008, \"head\": 0.015683956444263458}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016958653926849365, \"head\": 0.01658600941300392}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016704771667718887, \"head\": 0.01412804052233696}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.02614184468984604, \"head\": 0.02312268316745758}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016599368304014206, \"head\": 0.013907574117183685}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.017015479505062103, \"head\": 0.014062445610761642}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01655833050608635, \"head\": 0.015545587986707687}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.01662546768784523, \"head\": 0.016631174832582474}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01603098213672638, \"head\": 0.011209778487682343}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.016287200152873993, \"head\": 0.014545965939760208}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.016495760530233383, \"head\": 0.01368292048573494}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014333739876747131, \"head\": 0.013575702905654907}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006288614124059677, \"head\": 0.005861796438694}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016544774174690247, \"head\": 0.011223513633012772}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.01661130040884018, \"head\": 0.013333436101675034}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015515487641096115, \"head\": 0.0138847716152668}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01683349534869194, \"head\": 0.012578975409269333}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03362491354346275, \"head\": 0.03403827175498009}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6258616894483566, \"head\": 0.6109585911035538}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3421959728002548, \"head\": 0.33817998319864273}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.016986053436994553, \"head\": 0.015814613550901413}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.25384921953082085, \"head\": 0.0222199484705925}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.016374576836824417, \"head\": 0.01355653628706932}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.014054358005523682, \"head\": 0.012039273977279663}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009556442499160767, \"head\": 0.008529219776391983}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.016506623476743698, \"head\": 0.014163173735141754}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.015077345073223114, \"head\": 0.012598153203725815}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010567601770162582, \"head\": 0.009562313556671143}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02449975535273552, \"head\": 0.021874621510505676}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014348525553941727, \"head\": 0.01453450322151184}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014129441231489182, \"head\": 0.01301470398902893}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013967346400022507, \"head\": 0.12845632806420326}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014815505594015121, \"head\": 0.013363197445869446}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.02777406945824623, \"head\": 0.024418551474809647}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014887209981679916, \"head\": 0.013566762208938599}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.015035215765237808, \"head\": 0.013568360358476639}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014840979129076004, \"head\": 0.013560190796852112}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.0139697827398777, \"head\": 0.011835217475891113}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013910450041294098, \"head\": 0.011912010610103607}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.038316287100315094, \"head\": 0.03249286860227585}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.01815180853009224, \"head\": 0.016268081963062286}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.018823329359292984, \"head\": 0.015995480120182037}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016690406948328018, \"head\": 0.014859061688184738}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016348086297512054, \"head\": 0.01380762830376625}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.052610453218221664, \"head\": 0.04034971073269844}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05278535187244415, \"head\": 0.04181700944900513}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04287060722708702, \"head\": 0.03184213489294052}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.016128771007061005, \"head\": 0.017006702721118927}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.02743048593401909, \"head\": 0.02557983621954918}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.015029195696115494, \"head\": 0.014212287962436676}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.024639401584863663, \"head\": 0.024942778050899506}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015372108668088913, \"head\": 0.013378389179706573}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.01540863886475563, \"head\": 0.013463031500577927}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.01596025750041008, \"head\": 0.0134805329144001}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.015423357486724854, \"head\": 0.013520177453756332}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.015367589890956879, \"head\": 0.014722518622875214}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.016462750732898712, \"head\": 0.015542279928922653}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.0163278728723526, \"head\": 0.014833178371191025}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.016415592283010483, \"head\": 0.014427244663238525}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016304712742567062, \"head\": 0.014209460467100143}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.025898747146129608, \"head\": 0.023393094539642334}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.016187723726034164, \"head\": 0.015610598027706146}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.016166172921657562, \"head\": 0.014244668185710907}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.016149111092090607, \"head\": 0.014211636036634445}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.016735311597585678, \"head\": 0.017636224627494812}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.016171574592590332, \"head\": 0.011488988995552063}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.01610034704208374, \"head\": 0.01581767573952675}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01588568463921547, \"head\": 0.015894312411546707}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.01440749317407608, \"head\": 0.01365792378783226}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.006204858422279358, \"head\": 0.005754400044679642}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016411323100328445, \"head\": 0.011244352906942368}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.01636442169547081, \"head\": 0.013411171734333038}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.015243548899888992, \"head\": 0.014285247772932053}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01665341854095459, \"head\": 0.01499888300895691}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.0337303951382637, \"head\": 0.03582417219877243}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6039586812257767, \"head\": 0.6848289519548416}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3339195102453232, \"head\": 0.366398461163044}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.01657111570239067, \"head\": 0.01637614145874977}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.13584132865071297, \"head\": 0.023122694343328476}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014540795236825943, \"head\": 0.015611547976732254}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013342272490262985, \"head\": 0.012908905744552612}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009083282202482224, \"head\": 0.009440876543521881}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015153378248214722, \"head\": 0.01584605872631073}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014675185084342957, \"head\": 0.013350948691368103}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.010316088795661926, \"head\": 0.009724527597427368}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.023844890296459198, \"head\": 0.02297525852918625}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014128781855106354, \"head\": 0.015361346304416656}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.013870451599359512, \"head\": 0.013007182627916336}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.013706497848033905, \"head\": 0.17794479802250862}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.014447670429944992, \"head\": 0.013372570276260376}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027290333062410355, \"head\": 0.02471384033560753}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014660537242889404, \"head\": 0.01363448053598404}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.014529164880514145, \"head\": 0.013562776148319244}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.01467067375779152, \"head\": 0.013509146869182587}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.013634800910949707, \"head\": 0.011676028370857239}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013583485037088394, \"head\": 0.011534471064805984}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.0369030199944973, \"head\": 0.03164076432585716}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.017586294561624527, \"head\": 0.01633061096072197}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.017938636243343353, \"head\": 0.021507158875465393}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.016179747879505157, \"head\": 0.016926642507314682}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.01602783426642418, \"head\": 0.015723522752523422}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.05037575587630272, \"head\": 0.04170510172843933}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.052591707557439804, \"head\": 0.04813766106963158}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04133177548646927, \"head\": 0.031998906284570694}}, {\"xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]\": {\"base\": 0.015897538512945175, \"head\": 0.015803571790456772}, \"xarray/tests/test_computation.py::test_apply_groupby_add\": {\"base\": 0.027502212673425674, \"head\": 0.028216652572155}, \"xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]\": {\"base\": 0.01551903411746025, \"head\": 0.0157729834318161}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]\": {\"base\": 0.02452641725540161, \"head\": 0.02446211501955986}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]\": {\"base\": 0.015422653406858444, \"head\": 0.01597921922802925}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]\": {\"base\": 0.015715986490249634, \"head\": 0.013356540352106094}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]\": {\"base\": 0.015989169478416443, \"head\": 0.01314438134431839}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]\": {\"base\": 0.01547032967209816, \"head\": 0.013200856745243073}, \"xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]\": {\"base\": 0.016271669417619705, \"head\": 0.01320727914571762}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]\": {\"base\": 0.01652083545923233, \"head\": 0.014622528105974197}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]\": {\"base\": 0.01648460328578949, \"head\": 0.015187650918960571}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]\": {\"base\": 0.01637645810842514, \"head\": 0.014519136399030685}, \"xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]\": {\"base\": 0.016401156783103943, \"head\": 0.01442652940750122}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]\": {\"base\": 0.0255606546998024, \"head\": 0.023645825684070587}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]\": {\"base\": 0.01615677773952484, \"head\": 0.014863576740026474}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]\": {\"base\": 0.01635325327515602, \"head\": 0.01431700587272644}, \"xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]\": {\"base\": 0.01625802367925644, \"head\": 0.014362439513206482}, \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\": {\"base\": 0.017029765993356705, \"head\": 0.016896195709705353}, \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\": {\"base\": 0.01592281460762024, \"head\": 0.011467024683952332}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim\": {\"base\": 0.01580917090177536, \"head\": 0.014914058148860931}, \"xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned\": {\"base\": 0.01559717208147049, \"head\": 0.014107611030340195}, \"xarray/tests/test_groupby.py::TestDataArrayResample::test_resample\": {\"base\": 0.014265205711126328, \"head\": 0.013662371784448624}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs\": {\"base\": 0.00622684508562088, \"head\": 0.005826018750667572}, \"xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count\": {\"base\": 0.016579709947109222, \"head\": 0.011223748326301575}, \"xarray/tests/test_groupby.py::test_groupby_dataset_reduce\": {\"base\": 0.016547217965126038, \"head\": 0.014114346355199814}, \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\": {\"base\": 0.01518387719988823, \"head\": 0.014623280614614487}, \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\": {\"base\": 0.01658565178513527, \"head\": 0.013128779828548431}, \"xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits\": {\"base\": 0.03342839702963829, \"head\": 0.0386214405298233}, \"xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks\": {\"base\": 0.6054724790155888, \"head\": 0.6824657432734966}, \"xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid\": {\"base\": 0.3406878374516964, \"head\": 0.3609672486782074}, \"xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one\": {\"base\": 0.017733808606863022, \"head\": 0.015734732151031494}, \"xarray/tests/test_ufuncs.py::test_binary\": {\"base\": 0.1262759491801262, \"head\": 0.0224432572722435}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]\": {\"base\": 0.014286376535892487, \"head\": 0.013754118233919144}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]\": {\"base\": 0.013346627354621887, \"head\": 0.012234620749950409}, \"xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]\": {\"base\": 0.009071961045265198, \"head\": 0.008628405630588531}, \"xarray/tests/test_units.py::TestDataArray::test_resample[float64]\": {\"base\": 0.015114214271306992, \"head\": 0.014237355440855026}, \"xarray/tests/test_units.py::TestDataArray::test_resample[int64]\": {\"base\": 0.014636605978012085, \"head\": 0.012765645980834961}, \"xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]\": {\"base\": 0.011112086474895477, \"head\": 0.009685013443231583}, \"xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]\": {\"base\": 0.02386188507080078, \"head\": 0.022082585841417313}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]\": {\"base\": 0.014099039137363434, \"head\": 0.014804389327764511}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]\": {\"base\": 0.014012843370437622, \"head\": 0.013593867421150208}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]\": {\"base\": 0.014261610805988312, \"head\": 0.12333507090806961}, \"xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]\": {\"base\": 0.01465899869799614, \"head\": 0.01336108148097992}, \"xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]\": {\"base\": 0.027527127414941788, \"head\": 0.02485239878296852}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]\": {\"base\": 0.014687895774841309, \"head\": 0.013650089502334595}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]\": {\"base\": 0.01460174098610878, \"head\": 0.01358972117304802}, \"xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]\": {\"base\": 0.014760587364435196, \"head\": 0.014147855341434479}, \"xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]\": {\"base\": 0.01378696784377098, \"head\": 0.011680666357278824}, \"xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]\": {\"base\": 0.013653699308633804, \"head\": 0.011648144572973251}, \"xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]\": {\"base\": 0.038475118577480316, \"head\": 0.03131149336695671}, \"xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]\": {\"base\": 0.01813039556145668, \"head\": 0.01627456396818161}, \"xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]\": {\"base\": 0.01844995841383934, \"head\": 0.016075532883405685}, \"xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]\": {\"base\": 0.01619116961956024, \"head\": 0.013835400342941284}, \"xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]\": {\"base\": 0.016060180962085724, \"head\": 0.014642234891653061}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\": {\"base\": 0.052008021622896194, \"head\": 0.04169953241944313}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\": {\"base\": 0.05185522139072418, \"head\": 0.04468487575650215}, \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\": {\"base\": 0.04298708215355873, \"head\": 0.03182552382349968}}]",
  "efficiency_test": [
    "xarray/tests/test_cftimeindex_resample.py::test_resample[31-left-right-3AS-MAR->AS-MAR]",
    "xarray/tests/test_computation.py::test_apply_groupby_add",
    "xarray/tests/test_computation.py::test_corr[None-da_a2-da_b2]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a1-da_b1]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a3-da_b3]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a4-da_b4]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a5-da_b5]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a6-da_b6]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[None-da_a7-da_b7]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a3-da_b3]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a4-da_b4]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a5-da_b5]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[time-da_a7-da_b7]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a2-da_b2]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a3-da_b3]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a5-da_b5]",
    "xarray/tests/test_computation.py::test_covcorr_consistency[x-da_a6-da_b6]",
    "xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]",
    "xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]",
    "xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_bins_multidim",
    "xarray/tests/test_groupby.py::TestDataArrayGroupBy::test_groupby_math_not_aligned",
    "xarray/tests/test_groupby.py::TestDataArrayResample::test_resample",
    "xarray/tests/test_groupby.py::TestDatasetResample::test_resample_by_last_discarding_attrs",
    "xarray/tests/test_groupby.py::TestDatasetResample::test_resample_min_count",
    "xarray/tests/test_groupby.py::test_groupby_dataset_reduce",
    "xarray/tests/test_groupby.py::test_groupby_grouping_errors",
    "xarray/tests/test_groupby.py::test_multi_index_groupby_sum",
    "xarray/tests/test_plot.py::TestContourf::test_diverging_color_limits",
    "xarray/tests/test_plot.py::TestFacetGrid::test_num_ticks",
    "xarray/tests/test_plot.py::TestPcolormesh::test_convenient_facetgrid",
    "xarray/tests/test_plot.py::TestSurface::test_can_plot_axis_size_one",
    "xarray/tests/test_ufuncs.py::test_binary",
    "xarray/tests/test_units.py::TestDataArray::test_computation_objects[float64-method_groupby_bins-data]",
    "xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_groupby_bins-data]",
    "xarray/tests/test_units.py::TestDataArray::test_computation_objects[int64-method_weighted-data]",
    "xarray/tests/test_units.py::TestDataArray::test_resample[float64]",
    "xarray/tests/test_units.py::TestDataArray::test_resample[int64]",
    "xarray/tests/test_units.py::TestDataset::test_comparisons[float64-method_equals-coords-identical_unit]",
    "xarray/tests/test_units.py::TestDataset::test_computation_objects[int64-coords-method_groupby_bins]",
    "xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-coords-method_assign]",
    "xarray/tests/test_units.py::TestDataset::test_content_manipulation[float64-data-method_assign]",
    "xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-coords-method_assign_coords]",
    "xarray/tests/test_units.py::TestDataset::test_content_manipulation[int64-data-method_assign]",
    "xarray/tests/test_units.py::TestDataset::test_grouped_operations[float64-data-method_assign_coords]",
    "xarray/tests/test_units.py::TestDataset::test_head_tail_thin[float64-coords-method_thin]",
    "xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_tail]",
    "xarray/tests/test_units.py::TestDataset::test_head_tail_thin[int64-coords-method_thin]",
    "xarray/tests/test_units.py::TestDataset::test_merge[float64-coords-identical_unit]",
    "xarray/tests/test_units.py::TestDataset::test_merge[int64-coords-identical_unit]",
    "xarray/tests/test_units.py::TestDataset::test_resample[int64-coords]",
    "xarray/tests/test_units.py::test_combine_by_coords[float64-data-identical_unit]",
    "xarray/tests/test_units.py::test_combine_by_coords[int64-data-identical_unit]",
    "xarray/tests/test_units.py::test_combine_nested[float64-data-no_unit]",
    "xarray/tests/test_units.py::test_combine_nested[int64-data-no_unit]",
    "xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]",
    "xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]",
    "xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]"
  ],
  "patch_functions": "{\"xarray/core/duck_array_ops.py\": [\"_create_nan_agg_method.f\", \"_dask_or_eager_func\", \"_create_nan_agg_method\", \"_dask_or_eager_func.f\"], \"xarray/core/nanops.py\": [\"nancumsum\", \"nancumprod\", \"nanvar\", \"_nanmean_ddof_object\", \"nansum\", \"nanmedian\", \"nanprod\", \"_nan_argminmax_object\", \"nanstd\"], \"xarray/ufuncs.py\": [\"_UFuncDispatcher.__call__\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'xarray/core/duck_array_ops.py': ['_create_nan_agg_method.f', '_dask_or_eager_func', '_create_nan_agg_method', '_dask_or_eager_func.f'], 'xarray/core/nanops.py': ['nancumsum', 'nancumprod', 'nanvar', '_nanmean_ddof_object', 'nansum', 'nanmedian', 'nanprod', '_nan_argminmax_object', 'nanstd'], 'xarray/ufuncs.py': ['_UFuncDispatcher.__call__']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"xarray/core/common.py\": [\"DataArrayGroupBy.wrapped_func\", \"DataArray.groupby_bins\", \"DataArray.wrapped_func\", \"DataArray.get_axis_num\", \"Dataset.assign_coords\", \"Dataset.groupby_bins\", \"DataArray.where\", \"DataArray.weighted\", \"DataArray.notnull\", \"Dataset.resample\", \"Dataset.wrapped_func\", \"DataArray.resample\", \"Dataset.groupby\", \"DatasetGroupBy.wrapped_func\", \"DatasetResample.wrapped_func\", \"DataArray.groupby\", \"DataArrayResample.wrapped_func\", \"DataArray.rolling\"], \"xarray/core/groupby.py\": [\"DatasetResample.last\", \"DataArrayGroupBy._iter_grouped\", \"DataArrayResample.reduce\", \"DatasetGroupBy.assign_coords\", \"DataArrayGroupBy.map\"], \"xarray/core/dataarray.py\": [\"DataArray.name\", \"DataArray\", \"DataArray.dims\", \"DataArray.to_dataset\", \"DataArray.compute\", \"DataArray.xindexes\", \"DataArray.variable\", \"DataArray.data\", \"DataArray.values\", \"DataArray.to_series\", \"DataArray.coords\", \"DataArray.copy\", \"from_series\", \"DataArray.ndim\", \"DataArray.isel\", \"DataArray.attrs\", \"DataArray.dtype\", \"DataArray.chunk\"], \"xarray/core/variable.py\": [\"Variable.isel\", \"IndexVariable.equals\", \"Variable.data\", \"Variable.chunk\", \"concat\", \"Variable.set_dims\", \"Variable\", \"IndexVariable.copy\", \"Variable.equals\", \"Variable.copy\", \"IndexVariable.chunk\", \"Variable.stack\", \"Variable.reduce\"], \"xarray/plot/plot.py\": [\"plotmethod\", \"newplotfunc\"], \"xarray/core/combine.py\": [\"combine_by_coords\", \"combine_nested\"], \"xarray/core/computation.py\": [\"where\", \"corr\", \"cov\", \"apply_ufunc\", \"<genexpr>\"], \"xarray/core/dataset.py\": [\"Dataset.copy\", \"Dataset.thin\", \"Dataset\", \"Dataset.data_vars\", \"Dataset.tail\", \"Dataset.attrs\", \"Dataset.chunk\", \"Dataset.unstack\", \"Dataset.to_array\", \"Dataset.equals\", \"Dataset.update\", \"Dataset.coords\", \"Dataset.merge\", \"Dataset.set_coords\", \"Dataset.assign\", \"Dataset.stack\", \"Dataset.isel\"], \"xarray/core/weighted.py\": [\"DataArrayWeighted.sum\", \"DataArrayWeighted.mean\", \"DataArrayWeighted.sum_of_weights\"], \"xarray/core/coordinates.py\": [\"DatasetCoordinates.to_dataset\", \"DatasetCoordinates.update\"], \"xarray/coding/cftime_offsets.py\": [\"cftime_range\"], \"xarray/core/indexes.py\": [\"PandasIndex.equals\", \"PandasIndex.copy\", \"PandasIndex.to_pandas_index\"], \"xarray/core/duck_array_ops.py\": [\"mean\", \"notnull\", \"where\", \"last\"], \"xarray/core/alignment.py\": [\"broadcast\"], \"xarray/core/rolling.py\": [\"DataArrayRolling.method\"], \"xarray/plot/facetgrid.py\": [\"FacetGrid.set_ticks\", \"FacetGrid.map_dataarray\"], \"xarray/core/utils.py\": [\"dict_equiv\"], \"xarray/core/concat.py\": [\"concat\"], \"xarray/core/indexing.py\": [\"PandasIndexingAdapter.copy\"], \"xarray/core/merge.py\": [\"append\"], \"xarray/core/dtypes.py\": [\"maybe_promote\"], \"xarray/coding/cftimeindex.py\": [\"CFTimeIndex.to_datetimeindex\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'xarray/core/common.py': ['DataArrayGroupBy.wrapped_func', 'DataArray.groupby_bins', 'DataArray.wrapped_func', 'DataArray.get_axis_num', 'Dataset.assign_coords', 'Dataset.groupby_bins', 'DataArray.where', 'DataArray.weighted', 'DataArray.notnull', 'Dataset.resample', 'Dataset.wrapped_func', 'DataArray.resample', 'Dataset.groupby', 'DatasetGroupBy.wrapped_func', 'DatasetResample.wrapped_func', 'DataArray.groupby', 'DataArrayResample.wrapped_func', 'DataArray.rolling'], 'xarray/core/groupby.py': ['DatasetResample.last', 'DataArrayGroupBy._iter_grouped', 'DataArrayResample.reduce', 'DatasetGroupBy.assign_coords', 'DataArrayGroupBy.map'], 'xarray/core/dataarray.py': ['DataArray.name', 'DataArray', 'DataArray.dims', 'DataArray.to_dataset', 'DataArray.compute', 'DataArray.xindexes', 'DataArray.variable', 'DataArray.data', 'DataArray.values', 'DataArray.to_series', 'DataArray.coords', 'DataArray.copy', 'from_series', 'DataArray.ndim', 'DataArray.isel', 'DataArray.attrs', 'DataArray.dtype', 'DataArray.chunk'], 'xarray/core/variable.py': ['Variable.isel', 'IndexVariable.equals', 'Variable.data', 'Variable.chunk', 'concat', 'Variable.set_dims', 'Variable', 'IndexVariable.copy', 'Variable.equals', 'Variable.copy', 'IndexVariable.chunk', 'Variable.stack', 'Variable.reduce'], 'xarray/plot/plot.py': ['plotmethod', 'newplotfunc'], 'xarray/core/combine.py': ['combine_by_coords', 'combine_nested'], 'xarray/core/computation.py': ['where', 'corr', 'cov', 'apply_ufunc', '<genexpr>'], 'xarray/core/dataset.py': ['Dataset.copy', 'Dataset.thin', 'Dataset', 'Dataset.data_vars', 'Dataset.tail', 'Dataset.attrs', 'Dataset.chunk', 'Dataset.unstack', 'Dataset.to_array', 'Dataset.equals', 'Dataset.update', 'Dataset.coords', 'Dataset.merge', 'Dataset.set_coords', 'Dataset.assign', 'Dataset.stack', 'Dataset.isel'], 'xarray/core/weighted.py': ['DataArrayWeighted.sum', 'DataArrayWeighted.mean', 'DataArrayWeighted.sum_of_weights'], 'xarray/core/coordinates.py': ['DatasetCoordinates.to_dataset', 'DatasetCoordinates.update'], 'xarray/coding/cftime_offsets.py': ['cftime_range'], 'xarray/core/indexes.py': ['PandasIndex.equals', 'PandasIndex.copy', 'PandasIndex.to_pandas_index'], 'xarray/core/duck_array_ops.py': ['mean', 'notnull', 'where', 'last'], 'xarray/core/alignment.py': ['broadcast'], 'xarray/core/rolling.py': ['DataArrayRolling.method'], 'xarray/plot/facetgrid.py': ['FacetGrid.set_ticks', 'FacetGrid.map_dataarray'], 'xarray/core/utils.py': ['dict_equiv'], 'xarray/core/concat.py': ['concat'], 'xarray/core/indexing.py': ['PandasIndexingAdapter.copy'], 'xarray/core/merge.py': ['append'], 'xarray/core/dtypes.py': ['maybe_promote'], 'xarray/coding/cftimeindex.py': ['CFTimeIndex.to_datetimeindex']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.11670175438596501
}