{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-11754",
  "patch": "diff --git a/sklearn/linear_model/cd_fast.pyx b/sklearn/linear_model/cd_fast.pyx\nindex bc39754cb2368..986bc81780359 100644\n--- a/sklearn/linear_model/cd_fast.pyx\n+++ b/sklearn/linear_model/cd_fast.pyx\n@@ -15,6 +15,7 @@ cimport cython\n from cpython cimport bool\n from cython cimport floating\n import warnings\n+from ..exceptions import ConvergenceWarning\n \n from ..utils._cython_blas cimport (_axpy, _dot, _asum, _ger, _gemv, _nrm2, \n                                    _copy, _scal)\n@@ -246,6 +247,14 @@ def enet_coordinate_descent(floating[::1] w,\n                 if gap < tol:\n                     # return if we reached desired tolerance\n                     break\n+\n+        else:\n+            with gil:\n+                warnings.warn(\"Objective did not converge.\"\n+                \" You might want to increase the number of iterations.\"\n+                \" Duality gap: {}, tolerance: {}\".format(gap, tol),\n+                ConvergenceWarning)\n+\n     return w, gap, tol, n_iter + 1\n \n \n@@ -456,6 +465,13 @@ def sparse_enet_coordinate_descent(floating [::1] w,\n                     # return if we reached desired tolerance\n                     break\n \n+        else:\n+            with gil:\n+                warnings.warn(\"Objective did not converge.\"\n+                \" You might want to increase the number of iterations.\"\n+                \" Duality gap: {}, tolerance: {}\".format(gap, tol),\n+                ConvergenceWarning)\n+\n     return w, gap, tol, n_iter + 1\n \n \n@@ -604,6 +620,13 @@ def enet_coordinate_descent_gram(floating[::1] w,\n                     # return if we reached desired tolerance\n                     break\n \n+\n+        with gil:\n+            warnings.warn(\"Objective did not converge.\"\n+            \" You might want to increase the number of iterations.\"\n+            \" Duality gap: {}, tolerance: {}\".format(gap, tol),\n+            ConvergenceWarning)\n+\n     return np.asarray(w), gap, tol, n_iter + 1\n \n \n@@ -794,5 +817,11 @@ def enet_coordinate_descent_multi_task(floating[::1, :] W, floating l1_reg,\n                 if gap < tol:\n                     # return if we reached desired tolerance\n                     break\n+                else:\n+                    with gil:\n+                        warnings.warn(\"Objective did not converge.\"\n+                        \" You might want to increase the number of iterations.\"\n+                        \" Duality gap: {}, tolerance: {}\".format(gap, tol),\n+                        ConvergenceWarning)\n \n     return np.asarray(W), gap, tol, n_iter + 1\ndiff --git a/sklearn/linear_model/coordinate_descent.py b/sklearn/linear_model/coordinate_descent.py\nindex 581c7022b46d3..4a2b3116c9200 100644\n--- a/sklearn/linear_model/coordinate_descent.py\n+++ b/sklearn/linear_model/coordinate_descent.py\n@@ -23,7 +23,6 @@\n from ..utils.fixes import _joblib_parallel_args\n from ..utils.validation import check_is_fitted\n from ..utils.validation import column_or_1d\n-from ..exceptions import ConvergenceWarning\n \n from . import cd_fast\n \n@@ -481,13 +480,6 @@ def enet_path(X, y, l1_ratio=0.5, eps=1e-3, n_alphas=100, alphas=None,\n         coefs[..., i] = coef_\n         dual_gaps[i] = dual_gap_\n         n_iters.append(n_iter_)\n-        if dual_gap_ > eps_:\n-            warnings.warn('Objective did not converge.' +\n-                          ' You might want' +\n-                          ' to increase the number of iterations.' +\n-                          ' Fitting data with very small alpha' +\n-                          ' may cause precision problems.',\n-                          ConvergenceWarning)\n \n         if verbose:\n             if verbose > 2:\n@@ -1812,11 +1804,6 @@ def fit(self, X, y):\n \n         self._set_intercept(X_offset, y_offset, X_scale)\n \n-        if self.dual_gap_ > self.eps_:\n-            warnings.warn('Objective did not converge, you might want'\n-                          ' to increase the number of iterations',\n-                          ConvergenceWarning)\n-\n         # return self for chaining fit and predict calls\n         return self\n \n",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_coordinate_descent.py b/sklearn/linear_model/tests/test_coordinate_descent.py\nindex 630cfe558a350..482fcd9dfa2cd 100644\n--- a/sklearn/linear_model/tests/test_coordinate_descent.py\n+++ b/sklearn/linear_model/tests/test_coordinate_descent.py\n@@ -828,3 +828,20 @@ def test_warm_start_multitask_lasso():\n     clf2 = MultiTaskLasso(alpha=0.1, max_iter=10)\n     ignore_warnings(clf2.fit)(X, Y)\n     assert_array_almost_equal(clf2.coef_, clf.coef_)\n+\n+\n+@pytest.mark.parametrize('klass, n_classes, kwargs',\n+                         [(Lasso, 1, dict(precompute=True)),\n+                          (Lasso, 1, dict(precompute=False)),\n+                          (MultiTaskLasso, 2, dict()),\n+                          (MultiTaskLasso, 2, dict())])\n+def test_enet_coordinate_descent(klass, n_classes, kwargs):\n+    \"\"\"Test that a warning is issued if model does not converge\"\"\"\n+    clf = klass(max_iter=2, **kwargs)\n+    n_samples = 5\n+    n_features = 2\n+    X = np.ones((n_samples, n_features)) * 1e50\n+    y = np.ones((n_samples, n_classes))\n+    if klass == Lasso:\n+        y = y.ravel()\n+    assert_warns(ConvergenceWarning, clf.fit, X, y)\ndiff --git a/sklearn/linear_model/tests/test_sparse_coordinate_descent.py b/sklearn/linear_model/tests/test_sparse_coordinate_descent.py\nindex 6def1fa546da8..ff35f808faa13 100644\n--- a/sklearn/linear_model/tests/test_sparse_coordinate_descent.py\n+++ b/sklearn/linear_model/tests/test_sparse_coordinate_descent.py\n@@ -8,6 +8,8 @@\n \n from sklearn.utils.testing import assert_greater\n from sklearn.utils.testing import ignore_warnings\n+from sklearn.utils.testing import assert_warns\n+from sklearn.exceptions import ConvergenceWarning\n \n from sklearn.linear_model.coordinate_descent import (Lasso, ElasticNet,\n                                                      LassoCV, ElasticNetCV)\n@@ -290,3 +292,13 @@ def test_same_multiple_output_sparse_dense():\n         predict_sparse = l_sp.predict(sample_sparse)\n \n         assert_array_almost_equal(predict_sparse, predict_dense)\n+\n+\n+def test_sparse_enet_coordinate_descent():\n+    \"\"\"Test that a warning is issued if model does not converge\"\"\"\n+    clf = Lasso(max_iter=2)\n+    n_samples = 5\n+    n_features = 2\n+    X = sp.csc_matrix((n_samples, n_features)) * 1e50\n+    y = np.ones(n_samples)\n+    assert_warns(ConvergenceWarning, clf.fit, X, y)\n",
  "base_commit": "f8b108d0c6f2f82b2dc4e32a6793f9d9ac9cf2f4",
  "head_commit": "dc7e3eefaf8a6c342b703ba11c6d4904a19f9d85",
  "created_at": 1533507216000,
  "version": "0.21",
  "duration_changes": "[{\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015215322375297546, \"head\": 0.015327367931604385}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.4414938278496265, \"head\": 0.9260502643883228}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.010004129260778427, \"head\": 0.007486574351787567}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.09061091020703316, \"head\": 0.006166517734527588}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.003095753490924835, \"head\": 0.003079894930124283}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0011209174990653992, \"head\": 0.0009726285934448242}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.0303344689309597, \"head\": 0.09403276443481445}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.07431847974658012, \"head\": 0.018308378756046295}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.834844134747982, \"head\": 0.9408644586801529}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015787333250045776, \"head\": 0.015101216733455658}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004975084215402603, \"head\": 0.004713736474514008}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.0097225122153759, \"head\": 0.009213969111442566}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.01031573861837387, \"head\": 0.009052328765392303}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.1315312497317791, \"head\": 0.14877722784876823}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.19762244448065758, \"head\": 0.18512878194451332}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.006176326423883438, \"head\": 0.0038453713059425354}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.009322181344032288, \"head\": 0.010011442005634308}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012480922043323517, \"head\": 0.016062479466199875}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008449029177427292, \"head\": 0.012375112622976303}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007619280368089676, \"head\": 0.010670050978660583}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01986508071422577, \"head\": 0.02106909081339836}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.08453301712870598, \"head\": 0.09499283879995346}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.004760231822729111, \"head\": 0.003333769738674164}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.05883614346385002, \"head\": 0.06830528378486633}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.01147223636507988, \"head\": 0.011384792625904083}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.045274678617715836, \"head\": 0.026888255029916763}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015347424894571304, \"head\": 0.016138598322868347}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 7.139240626245737, \"head\": 10.899856425821781}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.01933305338025093, \"head\": 0.011041078716516495}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.008806124329566956, \"head\": 0.07817191258072853}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.004270952194929123, \"head\": 0.00477449968457222}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0039720721542835236, \"head\": 0.0013181790709495544}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.03025495633482933, \"head\": 0.09355079755187035}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.07558329030871391, \"head\": 0.02106204628944397}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9851967841386795, \"head\": 1.015229918062687}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.02463660016655922, \"head\": 0.014995988458395004}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004829723387956619, \"head\": 0.004875287413597107}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009417235851287842, \"head\": 0.0093822181224823}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.009022898972034454, \"head\": 0.008758023381233215}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.1763204075396061, \"head\": 0.15053991228342056}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.22261794283986092, \"head\": 0.1847873330116272}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.0038866624236106873, \"head\": 0.004011116921901703}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008397657424211502, \"head\": 0.008476875722408295}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.01232621818780899, \"head\": 0.012525048106908798}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.00850767269730568, \"head\": 0.008434664458036423}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.011080920696258545, \"head\": 0.007685072720050812}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.027216747403144836, \"head\": 0.01689351350069046}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.10228048637509346, \"head\": 0.07939866557717323}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.004338853061199188, \"head\": 0.0033787935972213745}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.06963478028774261, \"head\": 0.06934960186481476}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.014931265264749527, \"head\": 0.011732690036296844}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.02704775705933571, \"head\": 0.044816527515649796}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015015412122011185, \"head\": 0.01566949486732483}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 2.0772346816956997, \"head\": 2.668167643249035}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.10025640949606895, \"head\": 0.014149706810712814}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.0106889046728611, \"head\": 0.08926965668797493}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.003211025148630142, \"head\": 0.003919091075658798}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0011652521789073944, \"head\": 0.0011906623840332031}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.10382889956235886, \"head\": 0.030805565416812897}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.07943740114569664, \"head\": 0.06855105236172676}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8565003909170628, \"head\": 0.9288388974964619}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015405900776386261, \"head\": 0.016082514077425003}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.005729638040065765, \"head\": 0.005222626030445099}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.011955488473176956, \"head\": 0.0096263587474823}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.009418819099664688, \"head\": 0.010602042078971863}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.19920611381530762, \"head\": 0.13379795849323273}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.19509180635213852, \"head\": 0.20202520117163658}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.004123598337173462, \"head\": 0.003951791673898697}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008495450019836426, \"head\": 0.008517131209373474}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012454375624656677, \"head\": 0.0122571662068367}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008467346429824829, \"head\": 0.008585840463638306}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.010949783027172089, \"head\": 0.007714617997407913}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.02002716064453125, \"head\": 0.017320148646831512}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.10223982110619545, \"head\": 0.07949426770210266}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.004661381244659424, \"head\": 0.018665630370378494}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.05448993295431137, \"head\": 0.05581517890095711}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011947821825742722, \"head\": 0.012307390570640564}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.044315155595541, \"head\": 0.04240116477012634}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015120763331651688, \"head\": 0.014795619994401932}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.561370339244604, \"head\": 3.538712225854397}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.007665395736694336, \"head\": 0.009855575859546661}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.09029567241668701, \"head\": 0.00915248692035675}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0035135969519615173, \"head\": 0.0040216147899627686}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.001077156513929367, \"head\": 0.001126948744058609}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.09468669444322586, \"head\": 0.030489690601825714}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.01947207748889923, \"head\": 0.05507255718111992}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8406047411262989, \"head\": 0.9437697641551495}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015286486595869064, \"head\": 0.015128474682569504}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.00477595254778862, \"head\": 0.004998110234737396}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.01005648449063301, \"head\": 0.00985342264175415}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.014419343322515488, \"head\": 0.010667335242033005}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.12865103036165237, \"head\": 0.13385643810033798}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.19216176122426987, \"head\": 0.18743517994880676}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.004064645618200302, \"head\": 0.003901127725839615}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008414927870035172, \"head\": 0.008534245193004608}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012411363422870636, \"head\": 0.012542102485895157}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008688051253557205, \"head\": 0.008574120700359344}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007677391171455383, \"head\": 0.007837597280740738}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01724475994706154, \"head\": 0.01731794700026512}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.10930833593010902, \"head\": 0.07903071492910385}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003358464688062668, \"head\": 0.003361854702234268}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.07194346562027931, \"head\": 0.06668252870440483}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011476520448923111, \"head\": 0.012017164379358292}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.027345698326826096, \"head\": 0.04569827392697334}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.014580141752958298, \"head\": 0.0151158906519413}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 5.204378139227629, \"head\": 1.9662596173584461}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.009336911141872406, \"head\": 0.0939221940934658}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.00799805298447609, \"head\": 0.008146345615386963}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.003589961677789688, \"head\": 0.0035665780305862427}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.06392191350460052, \"head\": 0.08248725533485413}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.036173250526189804, \"head\": 0.028697017580270767}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.07097163796424866, \"head\": 0.06859078630805016}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8460358381271362, \"head\": 0.8275696262717247}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015336114913225174, \"head\": 0.014846667647361755}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004771176725625992, \"head\": 0.004718557000160217}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009485810995101929, \"head\": 0.00925876572728157}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.008040755987167358, \"head\": 0.007445156574249268}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.04032634198665619, \"head\": 0.03916582837700844}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.24095742776989937, \"head\": 0.2656765431165695}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.004006657749414444, \"head\": 0.00385163351893425}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008588798344135284, \"head\": 0.00828627124428749}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012393530458211899, \"head\": 0.012182902544736862}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008469726890325546, \"head\": 0.00845036655664444}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007755856961011887, \"head\": 0.007624462246894836}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.016986921429634094, \"head\": 0.016573935747146606}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09556359425187111, \"head\": 0.0918508805334568}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.0033845677971839905, \"head\": 0.0033242739737033844}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.0718960165977478, \"head\": 0.07081521302461624}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011770427227020264, \"head\": 0.011409062892198563}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.02709805965423584, \"head\": 0.026698250323534012}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015379700809717178, \"head\": 0.01733557879924774}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 2.9529444947838783, \"head\": 1.9726760052144527}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.11945223808288574, \"head\": 0.009492043405771255}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.008997645229101181, \"head\": 0.09327634051442146}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0033035241067409515, \"head\": 0.0029788725078105927}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.001126609742641449, \"head\": 0.0010452456772327423}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.15668974071741104, \"head\": 0.02857576310634613}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.027577392756938934, \"head\": 0.06862480193376541}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8646744191646576, \"head\": 0.9559266492724419}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015294890850782394, \"head\": 0.015041492879390717}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004792995750904083, \"head\": 0.004708204418420792}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.00938834622502327, \"head\": 0.009227126836776733}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.008929155766963959, \"head\": 0.007322076708078384}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.1774970293045044, \"head\": 0.10435489192605019}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1875416524708271, \"head\": 0.260535329580307}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.003952044993638992, \"head\": 0.0038685277104377747}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008699163794517517, \"head\": 0.008411191403865814}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012584444135427475, \"head\": 0.012346692383289337}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008586127310991287, \"head\": 0.008492622524499893}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.0076560042798519135, \"head\": 0.007651414722204208}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.018431279808282852, \"head\": 0.01674778014421463}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09873243421316147, \"head\": 0.09297569841146469}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003360513597726822, \"head\": 0.003564976155757904}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.07639710232615471, \"head\": 0.07057389616966248}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.014115002006292343, \"head\": 0.011410646140575409}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.0472322441637516, \"head\": 0.027112368494272232}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015917088836431503, \"head\": 0.015908341854810715}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.6460876800119877, \"head\": 3.101073741912842}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.10376440733671188, \"head\": 0.10248750820755959}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.006314009428024292, \"head\": 0.009424015879631042}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.002992376685142517, \"head\": 0.004081930965185165}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.001107390969991684, \"head\": 0.001365959644317627}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.07755422592163086, \"head\": 0.07704422622919083}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.0759430043399334, \"head\": 0.023620638996362686}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9628923833370209, \"head\": 0.8476645611226559}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015317510813474655, \"head\": 0.015264112502336502}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004797887057065964, \"head\": 0.005067214369773865}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009487956762313843, \"head\": 0.0094427689909935}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.011161163449287415, \"head\": 0.008214820176362991}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.10937811806797981, \"head\": 0.0891202874481678}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1860915943980217, \"head\": 0.2664354518055916}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.0040996745228767395, \"head\": 0.004139617085456848}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.010127440094947815, \"head\": 0.00862177461385727}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.016010355204343796, \"head\": 0.012552343308925629}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.0123172327876091, \"head\": 0.008518565446138382}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.010656435042619705, \"head\": 0.007777567952871323}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.02317766472697258, \"head\": 0.017545681446790695}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.11175783351063728, \"head\": 0.09585604071617126}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.0033751577138900757, \"head\": 0.003387581557035446}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.06473500654101372, \"head\": 0.07264184579253197}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.029135145246982574, \"head\": 0.01234273612499237}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.027090195566415787, \"head\": 0.027797739952802658}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.018747635185718536, \"head\": 0.015163421630859375}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.23695595189929, \"head\": 1.508690271526575}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.00955071672797203, \"head\": 0.0940818078815937}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.08198411390185356, \"head\": 0.008465822786092758}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0038878098130226135, \"head\": 0.003630448132753372}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0013929195702075958, \"head\": 0.0010811015963554382}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.09668101370334625, \"head\": 0.10765255242586136}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.01894224062561989, \"head\": 0.018514171242713928}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8729109354317188, \"head\": 0.9484211541712284}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.018816012889146805, \"head\": 0.015324581414461136}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004733122885227203, \"head\": 0.004883334040641785}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.011584188789129257, \"head\": 0.009656034409999847}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.013715136796236038, \"head\": 0.00926046073436737}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.13746164366602898, \"head\": 0.07770847529172897}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1932717114686966, \"head\": 0.2613540329039097}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.004222292453050613, \"head\": 0.00399327278137207}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008564919233322144, \"head\": 0.008405137807130814}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012772675603628159, \"head\": 0.012249380350112915}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008539192378520966, \"head\": 0.008511632680892944}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007668852806091309, \"head\": 0.007589045912027359}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.017180107533931732, \"head\": 0.016678649932146072}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.07860014587640762, \"head\": 0.096393883228302}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003356359899044037, \"head\": 0.0033199265599250793}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.10280688852071762, \"head\": 0.06853550672531128}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.01376568153500557, \"head\": 0.011430218815803528}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.04637015983462334, \"head\": 0.027278240770101547}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.01510726660490036, \"head\": 0.014926962554454803}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.8052937053143978, \"head\": 1.9522307626903057}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.09926659986376762, \"head\": 0.09870179742574692}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.09096115827560425, \"head\": 0.09458668902516365}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.003086403012275696, \"head\": 0.0030672475695610046}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0010996386408805847, \"head\": 0.0010547041893005371}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.029208209365606308, \"head\": 0.02946695312857628}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.0729442834854126, \"head\": 0.07416628673672676}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9006354585289955, \"head\": 0.876907754689455}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015309084206819534, \"head\": 0.014967825263738632}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.00474197044968605, \"head\": 0.004736118018627167}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009507670998573303, \"head\": 0.009299710392951965}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.011783253401517868, \"head\": 0.008928485214710236}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.05146303400397301, \"head\": 0.1924961395561695}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.27518340572714806, \"head\": 0.18682901933789253}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.004124335944652557, \"head\": 0.004097007215023041}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.01074148342013359, \"head\": 0.008433941751718521}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.01603066921234131, \"head\": 0.012380525469779968}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.012358937412500381, \"head\": 0.008487656712532043}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.010806094855070114, \"head\": 0.007657736539840698}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.021199356764554977, \"head\": 0.01688651368021965}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.10982808470726013, \"head\": 0.07853147387504578}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.019614383578300476, \"head\": 0.0033432915806770325}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.0661809928715229, \"head\": 0.0665772520005703}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.032018907368183136, \"head\": 0.011486686766147614}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.03622328117489815, \"head\": 0.02648717164993286}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015352558344602585, \"head\": 0.015056312084197998}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 2.3718236088752747, \"head\": 2.3688483498990536}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.09345894306898117, \"head\": 0.09367496147751808}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.00811062753200531, \"head\": 0.00601554661989212}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.08586353808641434, \"head\": 0.0029885731637477875}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0013111308217048645, \"head\": 0.0010376013815402985}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.09571410715579987, \"head\": 0.029367588460445404}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.023074381053447723, \"head\": 0.06949709355831146}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8380219824612141, \"head\": 0.8379158303141594}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015797682106494904, \"head\": 0.015188496559858322}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004834417253732681, \"head\": 0.004752766340970993}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009519238024950027, \"head\": 0.009367972612380981}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.012127939611673355, \"head\": 0.009061772376298904}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.08495159074664116, \"head\": 0.11572481691837311}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.22813858464360237, \"head\": 0.18189958855509758}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.003899354487657547, \"head\": 0.0039056725800037384}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008513662964105606, \"head\": 0.00832461565732956}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012505032122135162, \"head\": 0.012327756732702255}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.00857909768819809, \"head\": 0.00845303013920784}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.00766092911362648, \"head\": 0.007644690573215485}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.017469868063926697, \"head\": 0.01689097285270691}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.08529331535100937, \"head\": 0.08605793118476868}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003590628504753113, \"head\": 0.0033759772777557373}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.05358003079891205, \"head\": 0.06882885470986366}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.012062698602676392, \"head\": 0.011546149849891663}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.04469415917992592, \"head\": 0.027267511934041977}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015694890171289444, \"head\": 0.014957152307033539}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.9593901261687279, \"head\": 2.7959144115448}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.010988399386405945, \"head\": 0.09903880208730698}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.00817694142460823, \"head\": 0.09500382095575333}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0036054104566574097, \"head\": 0.003148842602968216}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0013890042901039124, \"head\": 0.0010793618857860565}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.03337685018777847, \"head\": 0.029654420912265778}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.08363235369324684, \"head\": 0.06784607842564583}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.7939221113920212, \"head\": 0.8599313721060753}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.01608332246541977, \"head\": 0.015543431043624878}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004944887012243271, \"head\": 0.004903007298707962}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009593125432729721, \"head\": 0.00963684543967247}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.01008860394358635, \"head\": 0.008880171924829483}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.16704411432147026, \"head\": 0.10895923525094986}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.20579712092876434, \"head\": 0.2562704458832741}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.005268402397632599, \"head\": 0.0052282437682151794}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.009030915796756744, \"head\": 0.00864192470908165}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012558531016111374, \"head\": 0.01246156170964241}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008602410554885864, \"head\": 0.00849691778421402}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007701866328716278, \"head\": 0.007615350186824799}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01937195658683777, \"head\": 0.017201177775859833}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09282349795103073, \"head\": 0.09589600563049316}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003426235169172287, \"head\": 0.0033372342586517334}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.06471368670463562, \"head\": 0.06968553364276886}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.03324948996305466, \"head\": 0.011392056941986084}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.03517761081457138, \"head\": 0.027214400470256805}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015239983797073364, \"head\": 0.015313718467950821}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.6153376586735249, \"head\": 2.2986682802438736}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.009871196001768112, \"head\": 0.01430082693696022}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.008312538266181946, \"head\": 0.01349513977766037}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.003606930375099182, \"head\": 0.003920424729585648}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0010002553462982178, \"head\": 0.0011154785752296448}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.1045808233320713, \"head\": 0.08106628805398941}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.01882905885577202, \"head\": 0.018930640071630478}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9618126787245274, \"head\": 0.8897757716476917}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.01959044113755226, \"head\": 0.015401482582092285}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004950951784849167, \"head\": 0.004796165972948074}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009475905448198318, \"head\": 0.009550031274557114}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.010863382369279861, \"head\": 0.009189680218696594}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.16686825454235077, \"head\": 0.0676005445420742}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1914338730275631, \"head\": 0.1849830150604248}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.003872305154800415, \"head\": 0.003927323967218399}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008573304861783981, \"head\": 0.008574724197387695}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012546058744192123, \"head\": 0.01247723400592804}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008795242756605148, \"head\": 0.008483964949846268}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007675357162952423, \"head\": 0.007684644311666489}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01720159873366356, \"head\": 0.01729775220155716}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.08712134137749672, \"head\": 0.09670178964734077}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003387611359357834, \"head\": 0.003376048058271408}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.07001730054616928, \"head\": 0.07019119337201118}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011544544249773026, \"head\": 0.011914968490600586}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.041540708392858505, \"head\": 0.027320601046085358}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.016203977167606354, \"head\": 0.015396274626255035}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 2.3815665543079376, \"head\": 2.6837503761053085}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.009516261518001556, \"head\": 0.10287639498710632}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.11575527489185333, \"head\": 0.009207203984260559}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0027790777385234833, \"head\": 0.003966566175222397}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0011146143078804016, \"head\": 0.0011619031429290771}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.06951435655355453, \"head\": 0.030791025608778}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.021166544407606125, \"head\": 0.059027161449193954}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9827026538550854, \"head\": 1.0202474817633629}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.014998294413089752, \"head\": 0.014974474906921387}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004805602133274078, \"head\": 0.00497625395655632}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009418778121471405, \"head\": 0.009415976703166962}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.00976473093032837, \"head\": 0.007960811257362366}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.1615220494568348, \"head\": 0.12012648954987526}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1841670647263527, \"head\": 0.18707318976521492}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.003902420401573181, \"head\": 0.0038992315530776978}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.010114386677742004, \"head\": 0.008497890084981918}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.01606512814760208, \"head\": 0.012441840022802353}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.012427076697349548, \"head\": 0.008499003946781158}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.013517294079065323, \"head\": 0.0076685622334480286}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.02177204191684723, \"head\": 0.01731167733669281}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.08407129719853401, \"head\": 0.09956655278801918}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003354530781507492, \"head\": 0.0033657103776931763}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.06578176468610764, \"head\": 0.07041927799582481}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.016700081527233124, \"head\": 0.012189682573080063}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.045260291546583176, \"head\": 0.02783169224858284}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.014769140630960464, \"head\": 0.014807987958192825}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 4.28894716501236, \"head\": 4.830464709550142}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.09890259429812431, \"head\": 0.10202454030513763}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.0941932164132595, \"head\": 0.009415827691555023}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0029386766254901886, \"head\": 0.004040651023387909}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0010962113738059998, \"head\": 0.0011592991650104523}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.028566081076860428, \"head\": 0.031179767102003098}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.09179888293147087, \"head\": 0.06081722676753998}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8278973959386349, \"head\": 0.9492435865104198}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015025001019239426, \"head\": 0.01510515809059143}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004743579775094986, \"head\": 0.005016636103391647}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009424310177564621, \"head\": 0.009501900523900986}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.012247029691934586, \"head\": 0.008596528321504593}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.1498842090368271, \"head\": 0.19388284534215927}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1949918046593666, \"head\": 0.18533965945243835}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.00383836030960083, \"head\": 0.003861650824546814}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008298512548208237, \"head\": 0.008400969207286835}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012307532131671906, \"head\": 0.01231016218662262}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008457798510789871, \"head\": 0.008488554507493973}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.008700337260961533, \"head\": 0.007674582302570343}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.020990554243326187, \"head\": 0.017009105533361435}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.0929531455039978, \"head\": 0.09422486647963524}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.0033338628709316254, \"head\": 0.0033263973891735077}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.08319691941142082, \"head\": 0.08131501451134682}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.013814106583595276, \"head\": 0.015682365745306015}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.028433434665203094, \"head\": 0.030621759593486786}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.014389768242835999, \"head\": 0.015806883573532104}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.500484649091959, \"head\": 2.023731794208288}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.018434256315231323, \"head\": 0.00951426848769188}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.0862804502248764, \"head\": 0.0912892185151577}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0028656460344791412, \"head\": 0.0038795992732048035}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0012505315244197845, \"head\": 0.0010577775537967682}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.09147769585251808, \"head\": 0.10773304477334023}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.02300199493765831, \"head\": 0.01870695874094963}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8667126595973969, \"head\": 0.9370322301983833}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015349611639976501, \"head\": 0.015259943902492523}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004805367439985275, \"head\": 0.00480414554476738}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009516049176454544, \"head\": 0.009445678442716599}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.007939163595438004, \"head\": 0.008897967636585236}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.05366244167089462, \"head\": 0.08836253359913826}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.24934234842658043, \"head\": 0.26735998317599297}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.0038804374635219574, \"head\": 0.003933969885110855}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008464314043521881, \"head\": 0.010044902563095093}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012521203607320786, \"head\": 0.01592104882001877}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008454032242298126, \"head\": 0.012421395629644394}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007638208568096161, \"head\": 0.01063084602355957}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.016967736184597015, \"head\": 0.021081294864416122}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09687809646129608, \"head\": 0.13679997250437737}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.0035707876086235046, \"head\": 0.004625719040632248}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.05388885363936424, \"head\": 0.09104955941438675}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.030854716897010803, \"head\": 0.01510588452219963}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.02689366042613983, \"head\": 0.03802119195461273}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015032265335321426, \"head\": 0.014877695590257645}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.2884701192378998, \"head\": 1.5513669438660145}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.08830396085977554, \"head\": 0.09204857796430588}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.008179325610399246, \"head\": 0.006356101483106613}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0037856325507164, \"head\": 0.0032460838556289673}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0012847259640693665, \"head\": 0.0009751841425895691}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.10338753089308739, \"head\": 0.10469815507531166}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.018517721444368362, \"head\": 0.01838158816099167}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.938979335129261, \"head\": 0.9062105379998684}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015826817601919174, \"head\": 0.015207696706056595}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.006706424057483673, \"head\": 0.0047475919127464294}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.011494651436805725, \"head\": 0.009387698024511337}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.010770067572593689, \"head\": 0.008897066116333008}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.17255846038460732, \"head\": 0.14097202941775322}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.19814781472086906, \"head\": 0.1865944229066372}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.005342569202184677, \"head\": 0.004081226885318756}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.00889037549495697, \"head\": 0.008528627455234528}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012377101927995682, \"head\": 0.012503080070018768}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008514437824487686, \"head\": 0.008492473512887955}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007666312158107758, \"head\": 0.007664334028959274}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01706196367740631, \"head\": 0.016796164214611053}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09262516722083092, \"head\": 0.07842498272657394}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003362666815519333, \"head\": 0.0033491700887680054}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.0793851986527443, \"head\": 0.06980528682470322}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.016986053436994553, \"head\": 0.011417396366596222}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.03778112679719925, \"head\": 0.026916474103927612}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.015499003231525421, \"head\": 0.015603169798851013}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 7.268192041665316, \"head\": 1.6500993221998215}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.011768586933612823, \"head\": 0.09054886549711227}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.009000249207019806, \"head\": 0.00622938945889473}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0038817450404167175, \"head\": 0.003278277814388275}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0011316165328025818, \"head\": 0.08560203015804291}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.03071695938706398, \"head\": 0.029365722090005875}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.018833011388778687, \"head\": 0.018762022256851196}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9694924764335155, \"head\": 0.9482542909681797}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.01792072132229805, \"head\": 0.0152139812707901}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.006007079035043716, \"head\": 0.004826169461011887}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009615365415811539, \"head\": 0.009327154606580734}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.010510500520467758, \"head\": 0.009131629019975662}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.186903178691864, \"head\": 0.18974598497152328}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.1876661404967308, \"head\": 0.18352866917848587}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.0038993284106254578, \"head\": 0.003541901707649231}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008439544588327408, \"head\": 0.010124504566192627}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012420069426298141, \"head\": 0.01612931117415428}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008525989949703217, \"head\": 0.012320995330810547}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007692057639360428, \"head\": 0.01056511327624321}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.017010655254125595, \"head\": 0.01837444305419922}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.08120637759566307, \"head\": 0.07879992574453354}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003423977643251419, \"head\": 0.023030512034893036}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.07371389493346214, \"head\": 0.052453380078077316}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011912968009710312, \"head\": 0.011421166360378265}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.026817891746759415, \"head\": 0.04168456792831421}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.01507788896560669, \"head\": 0.015305671840906143}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 4.498158171772957, \"head\": 3.0197685323655605}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.007825661450624466, \"head\": 0.10326655209064484}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.09628193452954292, \"head\": 0.009153258055448532}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0036301612854003906, \"head\": 0.003966588526964188}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0014234483242034912, \"head\": 0.0011081323027610779}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.030659381300210953, \"head\": 0.09778431057929993}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.0868850089609623, \"head\": 0.01873067393898964}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9324393793940544, \"head\": 0.8962677344679832}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.01522427424788475, \"head\": 0.015057165175676346}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004727762192487717, \"head\": 0.004963122308254242}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.00936242938041687, \"head\": 0.009318877011537552}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.008905787020921707, \"head\": 0.008565444499254227}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.14260946586728096, \"head\": 0.13282890617847443}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.22629423439502716, \"head\": 0.18862755224108696}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.003980487585067749, \"head\": 0.003959499299526215}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.010068587958812714, \"head\": 0.008446000516414642}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.01610276848077774, \"head\": 0.01240469142794609}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.012441109865903854, \"head\": 0.008444774895906448}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.010692313313484192, \"head\": 0.007677894085645676}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01794113591313362, \"head\": 0.016900844871997833}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09463663026690483, \"head\": 0.07870137318968773}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.0033827945590019226, \"head\": 0.0033381283283233643}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.07051995769143105, \"head\": 0.06909181550145149}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011750370264053345, \"head\": 0.011908348649740219}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.027417901903390884, \"head\": 0.027147457003593445}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.01559293270111084, \"head\": 0.01628701761364937}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 1.2189398631453514, \"head\": 1.905836496502161}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.008058305829763412, \"head\": 0.09960722178220749}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.006551776081323624, \"head\": 0.09491180628538132}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.07975198328495026, \"head\": 0.0030241385102272034}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.0011217594146728516, \"head\": 0.0010446161031723022}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.1013975664973259, \"head\": 0.029239758849143982}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.021208591759204865, \"head\": 0.07217578589916229}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.8377681784331799, \"head\": 0.8451406471431255}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.015454139560461044, \"head\": 0.01852479577064514}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004821155220270157, \"head\": 0.004903554916381836}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009400490671396255, \"head\": 0.009508796036243439}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.009301844984292984, \"head\": 0.008572176098823547}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.1545984148979187, \"head\": 0.21352511644363403}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.18760357052087784, \"head\": 0.1831306703388691}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.003896605223417282, \"head\": 0.0038648322224617004}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.008568167686462402, \"head\": 0.008370816707611084}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.012570463120937347, \"head\": 0.012343931943178177}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008507803082466125, \"head\": 0.008463691920042038}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.00770646333694458, \"head\": 0.0076864659786224365}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.019825059920549393, \"head\": 0.016767822206020355}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.10187884047627449, \"head\": 0.08397731557488441}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.0033717937767505646, \"head\": 0.005178317427635193}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.07325069233775139, \"head\": 0.09266481921076775}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.011613324284553528, \"head\": 0.011306468397378922}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.02760031819343567, \"head\": 0.04065266624093056}}, {\"sklearn/cluster/tests/test_k_means.py::test_k_means_function\": {\"base\": 0.01571446657180786, \"head\": 0.014935072511434555}, \"sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments\": {\"base\": 2.4410618916153908, \"head\": 1.4992956034839153}, \"sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]\": {\"base\": 0.10282664746046066, \"head\": 0.09215560927987099}, \"sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible\": {\"base\": 0.013788096606731415, \"head\": 0.008109349757432938}, \"sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars\": {\"base\": 0.0032316073775291443, \"head\": 0.0038520023226737976}, \"sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]\": {\"base\": 0.06369844824075699, \"head\": 0.004913680255413055}, \"sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]\": {\"base\": 0.03425435349345207, \"head\": 0.11187385022640228}, \"sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error\": {\"base\": 0.07671035453677177, \"head\": 0.01859142631292343}, \"sklearn/manifold/tests/test_mds.py::test_MDS\": {\"base\": 0.9160501733422279, \"head\": 0.8805617913603783}, \"sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2\": {\"base\": 0.01500660553574562, \"head\": 0.015161078423261642}, \"sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]\": {\"base\": 0.004751507192850113, \"head\": 0.004713267087936401}, \"sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds\": {\"base\": 0.009375985711812973, \"head\": 0.009287279099225998}, \"sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]\": {\"base\": 0.008867200464010239, \"head\": 0.008557185530662537}, \"sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]\": {\"base\": 0.040823791176080704, \"head\": 0.1410180628299713}, \"sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]\": {\"base\": 0.26146070659160614, \"head\": 0.18502701073884964}, \"sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]\": {\"base\": 0.00391591340303421, \"head\": 0.004006166011095047}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]\": {\"base\": 0.00845130905508995, \"head\": 0.008392002433538437}, \"sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]\": {\"base\": 0.01251325011253357, \"head\": 0.012391820549964905}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]\": {\"base\": 0.008531086146831512, \"head\": 0.008465565741062164}, \"sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]\": {\"base\": 0.007707066833972931, \"head\": 0.007645301520824432}, \"sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]\": {\"base\": 0.01717487722635269, \"head\": 0.016708049923181534}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]\": {\"base\": 0.09514330327510834, \"head\": 0.07886004447937012}, \"sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]\": {\"base\": 0.003426153212785721, \"head\": 0.0033570565283298492}, \"sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]\": {\"base\": 0.08674784004688263, \"head\": 0.06689212843775749}, \"sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function\": {\"base\": 0.013960208743810654, \"head\": 0.011388160288333893}, \"sklearn/utils/tests/test_multiclass.py::test_is_multilabel\": {\"base\": 0.027976572513580322, \"head\": 0.026556674391031265}}]",
  "efficiency_test": [
    "sklearn/cluster/tests/test_k_means.py::test_k_means_function",
    "sklearn/cluster/tests/test_k_means.py::test_minibatch_with_many_reassignments",
    "sklearn/cluster/tests/test_spectral.py::test_spectral_clustering[discretize-arpack]",
    "sklearn/compose/tests/test_target.py::test_transform_target_regressor_invertible",
    "sklearn/linear_model/least_angle.py::sklearn.linear_model.least_angle.LassoLars",
    "sklearn/linear_model/tests/test_base.py::test_preprocess_copy_data_no_checks[False-True]",
    "sklearn/linear_model/tests/test_logistic.py::test_logistic_cv_multinomial_score[recall-multiclass_agg_list4]",
    "sklearn/manifold/tests/test_isomap.py::test_isomap_reconstruction_error",
    "sklearn/manifold/tests/test_mds.py::test_MDS",
    "sklearn/metrics/tests/test_classification.py::test_precision_recall_f1_score_multilabel_2",
    "sklearn/preprocessing/tests/test_data.py::test_power_transformer_nans[box-cox]",
    "sklearn/preprocessing/tests/test_data.py::test_quantile_transform_bounds",
    "sklearn/tests/test_common.py::test_class_weight_balanced_linear_classifiers[RidgeClassifierCV-RidgeClassifierCV]",
    "sklearn/tests/test_common.py::test_estimators[AdaBoostClassifier-check_estimators_dtypes]",
    "sklearn/tests/test_common.py::test_estimators[BaggingRegressor-check_sample_weights_pandas_series]",
    "sklearn/tests/test_common.py::test_estimators[BayesianGaussianMixture-check_estimators_empty_data_messages]",
    "sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_dtype_object]",
    "sklearn/tests/test_common.py::test_estimators[FactorAnalysis-check_estimators_dtypes]",
    "sklearn/tests/test_common.py::test_estimators[GaussianNB-check_classifiers_regression_target]",
    "sklearn/tests/test_common.py::test_estimators[GaussianNB-check_estimators_nan_inf]",
    "sklearn/tests/test_common.py::test_estimators[Isomap-check_transformer_general(readonly_memmap=True)]",
    "sklearn/tests/test_common.py::test_estimators[NMF-check_estimator_sparse_data]",
    "sklearn/tests/test_common.py::test_estimators[NMF-check_estimators_empty_data_messages]",
    "sklearn/tests/test_common.py::test_estimators[RidgeCV-check_estimator_sparse_data]",
    "sklearn/tests/test_multiclass.py::test_ovr_multilabel_decision_function",
    "sklearn/utils/tests/test_multiclass.py::test_is_multilabel"
  ],
  "patch_functions": "{\"sklearn/linear_model/coordinate_descent.py\": [\"MultiTaskElasticNet.fit\", \"enet_path\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'sklearn/linear_model/coordinate_descent.py': ['MultiTaskElasticNet.fit', 'enet_path']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"sklearn/multiclass.py\": [\"OneVsRestClassifier\", \"OneVsRestClassifier.fit\", \"OneVsRestClassifier.predict\", \"OneVsRestClassifier.decision_function\"], \"sklearn/preprocessing/data.py\": [\"PowerTransformer.transform\", \"KernelCenterer\", \"PowerTransformer\", \"QuantileTransformer.transform\", \"QuantileTransformer.inverse_transform\", \"QuantileTransformer\", \"StandardScaler.transform\", \"PowerTransformer.fit\", \"StandardScaler.fit\", \"QuantileTransformer.fit\", \"KernelCenterer.fit\"], \"sklearn/cluster/spectral.py\": [\"SpectralClustering.fit\", \"SpectralClustering\"], \"sklearn/linear_model/least_angle.py\": [\"LassoLars._fit\", \"<listcomp>\", \"lars_path\", \"_get_gram\"], \"sklearn/utils/__init__.py\": [\"shuffle\"], \"sklearn/utils/estimator_checks.py\": [\"_yield_all_checks\", \"check_class_weight_balanced_linear_classifier\", \"check_estimator_sparse_data\", \"set_checking_parameters\"], \"sklearn/metrics/cluster/supervised.py\": [\"v_measure_score\", \"adjusted_rand_score\"], \"sklearn/linear_model/logistic.py\": [\"_log_reg_scoring_path\", \"LogisticRegression.fit\", \"LogisticRegression\"], \"sklearn/neighbors/base.py\": [\"NearestNeighbors.kneighbors_graph\", \"NearestNeighbors.fit\"], \"sklearn/utils/deprecation.py\": [\"wrapped\"], \"sklearn/svm/base.py\": [\"SVC.decision_function\", \"SVC.fit\"], \"sklearn/neighbors/graph.py\": [\"kneighbors_graph\"], \"sklearn/utils/_pprint.py\": [\"_EstimatorPrettyPrinter.format\"], \"sklearn/datasets/samples_generator.py\": [\"make_blobs\", \"make_multilabel_classification\", \"make_classification\", \"make_regression\", \"make_friedman1\"], \"sklearn/metrics/classification.py\": [\"fbeta_score\", \"precision_recall_fscore_support\"], \"sklearn/base.py\": [\"KernelCenterer.fit_transform\", \"AdaBoostClassifier.get_params\", \"TransformedTargetRegressor.set_params\", \"QuantileTransformer.fit_transform\", \"LogisticRegression.get_params\"], \"sklearn/datasets/base.py\": [\"load_iris\"], \"sklearn/svm/classes.py\": [\"SVC\"], \"sklearn/preprocessing/label.py\": [\"LabelBinarizer.fit\", \"LabelEncoder.fit\", \"MultiLabelBinarizer.fit\"], \"sklearn/manifold/isomap.py\": [\"Isomap\", \"Isomap.reconstruction_error\", \"Isomap.fit\"], \"sklearn/manifold/mds.py\": [\"MDS.fit\", \"MDS\"], \"sklearn/utils/validation.py\": [\"check_X_y\"], \"sklearn/cluster/k_means_.py\": [\"MiniBatchKMeans.fit\", \"MiniBatchKMeans\", \"k_means\"], \"sklearn/utils/_unittest_backport.py\": [\"TestCase.assertRaises\"], \"sklearn/metrics/scorer.py\": [\"get_scorer\"], \"sklearn/decomposition/kernel_pca.py\": [\"KernelPCA.fit_transform\", \"KernelPCA.fit\"], \"sklearn/utils/metaestimators.py\": [\"<lambda>\"], \"sklearn/linear_model/base.py\": [\"LinearRegression\", \"LassoLars._set_intercept\", \"_preprocess_data\"], \"sklearn/compose/_target.py\": [\"TransformedTargetRegressor\"], \"sklearn/utils/multiclass.py\": [\"is_multilabel\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'sklearn/multiclass.py': ['OneVsRestClassifier', 'OneVsRestClassifier.fit', 'OneVsRestClassifier.predict', 'OneVsRestClassifier.decision_function'], 'sklearn/preprocessing/data.py': ['PowerTransformer.transform', 'KernelCenterer', 'PowerTransformer', 'QuantileTransformer.transform', 'QuantileTransformer.inverse_transform', 'QuantileTransformer', 'StandardScaler.transform', 'PowerTransformer.fit', 'StandardScaler.fit', 'QuantileTransformer.fit', 'KernelCenterer.fit'], 'sklearn/cluster/spectral.py': ['SpectralClustering.fit', 'SpectralClustering'], 'sklearn/linear_model/least_angle.py': ['LassoLars._fit', '<listcomp>', 'lars_path', '_get_gram'], 'sklearn/utils/__init__.py': ['shuffle'], 'sklearn/utils/estimator_checks.py': ['_yield_all_checks', 'check_class_weight_balanced_linear_classifier', 'check_estimator_sparse_data', 'set_checking_parameters'], 'sklearn/metrics/cluster/supervised.py': ['v_measure_score', 'adjusted_rand_score'], 'sklearn/linear_model/logistic.py': ['_log_reg_scoring_path', 'LogisticRegression.fit', 'LogisticRegression'], 'sklearn/neighbors/base.py': ['NearestNeighbors.kneighbors_graph', 'NearestNeighbors.fit'], 'sklearn/utils/deprecation.py': ['wrapped'], 'sklearn/svm/base.py': ['SVC.decision_function', 'SVC.fit'], 'sklearn/neighbors/graph.py': ['kneighbors_graph'], 'sklearn/utils/_pprint.py': ['_EstimatorPrettyPrinter.format'], 'sklearn/datasets/samples_generator.py': ['make_blobs', 'make_multilabel_classification', 'make_classification', 'make_regression', 'make_friedman1'], 'sklearn/metrics/classification.py': ['fbeta_score', 'precision_recall_fscore_support'], 'sklearn/base.py': ['KernelCenterer.fit_transform', 'AdaBoostClassifier.get_params', 'TransformedTargetRegressor.set_params', 'QuantileTransformer.fit_transform', 'LogisticRegression.get_params'], 'sklearn/datasets/base.py': ['load_iris'], 'sklearn/svm/classes.py': ['SVC'], 'sklearn/preprocessing/label.py': ['LabelBinarizer.fit', 'LabelEncoder.fit', 'MultiLabelBinarizer.fit'], 'sklearn/manifold/isomap.py': ['Isomap', 'Isomap.reconstruction_error', 'Isomap.fit'], 'sklearn/manifold/mds.py': ['MDS.fit', 'MDS'], 'sklearn/utils/validation.py': ['check_X_y'], 'sklearn/cluster/k_means_.py': ['MiniBatchKMeans.fit', 'MiniBatchKMeans', 'k_means'], 'sklearn/utils/_unittest_backport.py': ['TestCase.assertRaises'], 'sklearn/metrics/scorer.py': ['get_scorer'], 'sklearn/decomposition/kernel_pca.py': ['KernelPCA.fit_transform', 'KernelPCA.fit'], 'sklearn/utils/metaestimators.py': ['<lambda>'], 'sklearn/linear_model/base.py': ['LinearRegression', 'LassoLars._set_intercept', '_preprocess_data'], 'sklearn/compose/_target.py': ['TransformedTargetRegressor'], 'sklearn/utils/multiclass.py': ['is_multilabel']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.007500000000000006
}