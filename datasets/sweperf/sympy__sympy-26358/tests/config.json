{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-26358",
  "patch": "diff --git a/sympy/integrals/heurisch.py b/sympy/integrals/heurisch.py\nindex 344edf250a2e..2a1b61c27da3 100644\n--- a/sympy/integrals/heurisch.py\n+++ b/sympy/integrals/heurisch.py\n@@ -1,7 +1,8 @@\n from __future__ import annotations\n \n-from itertools import permutations\n+from collections import defaultdict\n from functools import reduce\n+from itertools import permutations\n \n from sympy.core.add import Add\n from sympy.core.basic import Basic\n@@ -503,7 +504,16 @@ def heurisch(f, x, rewrite=False, hints=None, mappings=None, retries=3,\n         # optimizing the number of permutations of mapping              #\n         assert mapping[-1][0] == x # if not, find it and correct this comment\n         unnecessary_permutations = [mapping.pop(-1)]\n-        mappings = permutations(mapping)\n+        # only permute types of objects and let the ordering\n+        # of types take care of the order of replacement\n+        types = defaultdict(list)\n+        for i in mapping:\n+            types[type(i)].append(i)\n+        mapping = [types[i] for i in types]\n+        def _iter_mappings():\n+            for i in permutations(mapping):\n+                yield [j for i in i for j in i]\n+        mappings = _iter_mappings()\n     else:\n         unnecessary_permutations = unnecessary_permutations or []\n \n",
  "test_patch": "diff --git a/sympy/integrals/tests/test_heurisch.py b/sympy/integrals/tests/test_heurisch.py\nindex 2b4ffa0684f0..e220132f582f 100644\n--- a/sympy/integrals/tests/test_heurisch.py\n+++ b/sympy/integrals/tests/test_heurisch.py\n@@ -2,7 +2,7 @@\n from sympy.core.add import Add\n from sympy.core.function import (Derivative, Function, diff)\n from sympy.core.numbers import (I, Rational, pi)\n-from sympy.core.relational import Ne\n+from sympy.core.relational import Eq, Ne\n from sympy.core.symbol import (Symbol, symbols)\n from sympy.functions.elementary.exponential import (LambertW, exp, log)\n from sympy.functions.elementary.hyperbolic import (asinh, cosh, sinh, tanh)\n@@ -12,6 +12,8 @@\n from sympy.functions.special.bessel import (besselj, besselk, bessely, jn)\n from sympy.functions.special.error_functions import erf\n from sympy.integrals.integrals import Integral\n+from sympy.logic.boolalg import And\n+from sympy.matrices import Matrix\n from sympy.simplify.ratsimp import ratsimp\n from sympy.simplify.simplify import simplify\n from sympy.integrals.heurisch import components, heurisch, heurisch_wrapper\n@@ -365,3 +367,33 @@ def f(x):\n     Uz = integrate(f(z), z)\n     Ut = integrate(f(t), t)\n     assert Ut == Uz.subs(z, t)\n+\n+\n+def test_heurisch_complex_erf_issue_26338():\n+    r = symbols('r', real=True)\n+    a = exp(-r**2/(2*(2 - I)**2))\n+    assert heurisch(a, r, hints=[]) is None  # None, not a wrong soln\n+    a = sqrt(pi)*erf((1 + I)/2)/2\n+    assert integrate(exp(-I*r**2/2), (r, 0, 1)) == a - I*a\n+\n+    a = exp(-x**2/(2*(2 - I)**2))\n+    assert heurisch(a, x, hints=[]) is None  # None, not a wrong soln\n+    a = sqrt(pi)*erf((1 + I)/2)/2\n+    assert integrate(exp(-I*x**2/2), (x, 0, 1)) == a - I*a\n+\n+\n+def test_issue_15498():\n+    Z0 = Function('Z0')\n+    k01, k10, t, s= symbols('k01 k10 t s', real=True, positive=True)\n+    m = Matrix([[exp(-k10*t)]])\n+    _83 = Rational(83, 100)  # 0.83 works, too\n+    [a, b, c, d, e, f, g] = [100, 0.5, _83, 50, 0.6, 2, 120]\n+    AIF_btf = a*(d*e*(1 - exp(-(t - b)/e)) + f*g*(1 - exp(-(t - b)/g)))\n+    AIF_atf = a*(d*e*exp(-(t - b)/e)*(exp((c - b)/e) - 1\n+        ) + f*g*exp(-(t - b)/g)*(exp((c - b)/g) - 1))\n+    AIF_sym = Piecewise((0, t < b), (AIF_btf, And(b <= t, t < c)), (AIF_atf, c <= t))\n+    aif_eq = Eq(Z0(t), AIF_sym)\n+    f_vec = Matrix([[k01*Z0(t)]])\n+    integrand = m*m.subs(t, s)**-1*f_vec.subs(aif_eq.lhs, aif_eq.rhs).subs(t, s)\n+    solution = integrate(integrand[0], (s, 0, t))\n+    assert solution is not None  # does not hang and takes less than 10 s\ndiff --git a/sympy/integrals/tests/test_integrals.py b/sympy/integrals/tests/test_integrals.py\nindex 6fa978f3bfaa..860580896807 100644\n--- a/sympy/integrals/tests/test_integrals.py\n+++ b/sympy/integrals/tests/test_integrals.py\n@@ -1148,7 +1148,7 @@ def test_issue_3940():\n     assert integrate(exp(-x**2 + I*c*x), x) == \\\n         -sqrt(pi)*exp(-c**2/4)*erf(I*c/2 - x)/2\n     assert integrate(exp(a*x**2 + b*x + c), x) == \\\n-        sqrt(pi)*exp(c)*exp(-b**2/(4*a))*erfi(sqrt(a)*x + b/(2*sqrt(a)))/(2*sqrt(a))\n+        sqrt(pi)*exp(c - b**2/(4*a))*erfi((2*a*x + b)/(2*sqrt(a)))/(2*sqrt(a))\n \n     from sympy.core.function import expand_mul\n     from sympy.abc import k\n",
  "base_commit": "2ce089415a59b7659c4b30d395381e0a92797e74",
  "head_commit": "ca87484306b35cf3514024ae73dc2d291378e72c",
  "created_at": 1710513189000,
  "version": "1.13",
  "duration_changes": "[{\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.43682046234607697, \"head\": 0.3701968528330326}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7956165373325348, \"head\": 0.5279049426317215}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.41212545707821846, \"head\": 0.3690907545387745}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4051037952303886, \"head\": 0.7574482671916485}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7403456270694733, \"head\": 0.34183040633797646}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16456425189971924, \"head\": 0.11238330975174904}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.1298755444586277, \"head\": 0.09122387319803238}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.8155187368392944, \"head\": 1.797622475773096}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4389518089592457, \"head\": 0.36615367978811264}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7753851190209389, \"head\": 0.542171947658062}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.40860797092318535, \"head\": 0.3755805306136608}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3858796022832394, \"head\": 0.7362848594784737}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7365652061998844, \"head\": 0.3308911696076393}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.1649969145655632, \"head\": 0.10591723024845123}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12898272275924683, \"head\": 0.08859053254127502}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.819507025182247, \"head\": 1.760748963803053}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.44025908038020134, \"head\": 0.3775334246456623}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7901418842375278, \"head\": 0.5218056999146938}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4126913286745548, \"head\": 0.37020934745669365}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4108983725309372, \"head\": 0.7472786903381348}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7304998077452183, \"head\": 0.331763818860054}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16666388139128685, \"head\": 0.11026531457901001}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12778739631175995, \"head\": 0.0904964804649353}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.8968006372451782, \"head\": 1.8046712763607502}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4375336840748787, \"head\": 0.3624732568860054}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7933137826621532, \"head\": 0.5183630436658859}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4100664258003235, \"head\": 0.36520688235759735}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4081340208649635, \"head\": 0.7307504415512085}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7498438768088818, \"head\": 0.3237825743854046}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.1666652150452137, \"head\": 0.10754048079252243}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.1318753957748413, \"head\": 0.08843909204006195}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.8374498300254345, \"head\": 1.7805341109633446}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.44665126129984856, \"head\": 0.3736177273094654}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.8072330802679062, \"head\": 0.539560578763485}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.413663063198328, \"head\": 0.36140021681785583}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4025492668151855, \"head\": 0.7279887981712818}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7084637954831123, \"head\": 0.33159877732396126}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16470710188150406, \"head\": 0.10458265617489815}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12893012538552284, \"head\": 0.08963144570589066}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.848713807761669, \"head\": 1.8163007088005543}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4454864412546158, \"head\": 0.36136746406555176}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7934062294661999, \"head\": 0.5191625915467739}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4087051972746849, \"head\": 0.36743854731321335}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4048080667853355, \"head\": 0.7422671020030975}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7282863818109035, \"head\": 0.34089910611510277}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.1618034504354, \"head\": 0.10591073706746101}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.1274176798760891, \"head\": 0.08761050924658775}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.932944171130657, \"head\": 1.804098166525364}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.44197677075862885, \"head\": 0.36029907688498497}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7964420542120934, \"head\": 0.5161209180951118}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4120350703597069, \"head\": 0.3532593362033367}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.412110112607479, \"head\": 0.7136653624475002}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7720912396907806, \"head\": 0.3159743696451187}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16742412373423576, \"head\": 0.10346823185682297}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.1871783658862114, \"head\": 0.08918129652738571}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.8322034515440464, \"head\": 1.7917622104287148}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.43837569653987885, \"head\": 0.3685873970389366}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.8012749515473843, \"head\": 0.5135809667408466}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.41342615708708763, \"head\": 0.3736170381307602}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.458025075495243, \"head\": 0.741655383259058}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7235869728028774, \"head\": 0.32739658281207085}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16520094126462936, \"head\": 0.10477936640381813}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12977712601423264, \"head\": 0.08961089327931404}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.93779743462801, \"head\": 1.8122450895607471}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4369744434952736, \"head\": 0.3621208928525448}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7779743187129498, \"head\": 0.5313005149364471}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4055762477219105, \"head\": 0.3630019798874855}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3826456665992737, \"head\": 0.7201836742460728}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7277568355202675, \"head\": 0.3245532363653183}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16434631496667862, \"head\": 0.10458194836974144}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12695686146616936, \"head\": 0.08812782168388367}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.8085282370448112, \"head\": 1.7441927380859852}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4336511008441448, \"head\": 0.36625901609659195}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7957826852798462, \"head\": 0.520620059221983}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4078929238021374, \"head\": 0.37122615054249763}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.40954065695405, \"head\": 0.7431368604302406}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7390520609915257, \"head\": 0.3253844492137432}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.176458902657032, \"head\": 0.11091757193207741}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.1286473087966442, \"head\": 0.09342680126428604}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.915430273860693, \"head\": 1.7576090842485428}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4381796382367611, \"head\": 0.3632003255188465}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7849066704511642, \"head\": 0.5247294716536999}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4087842330336571, \"head\": 0.3665222115814686}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3908657431602478, \"head\": 0.7439374923706055}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7231870144605637, \"head\": 0.30806828662753105}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16341568529605865, \"head\": 0.10579895600676537}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12660063058137894, \"head\": 0.0904901884496212}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.853805251419544, \"head\": 1.7934689708054066}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.43575868010520935, \"head\": 0.36051804572343826}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7818032987415791, \"head\": 0.5245323106646538}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.40596675872802734, \"head\": 0.37248116359114647}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4126907251775265, \"head\": 0.7456420883536339}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7246179915964603, \"head\": 0.32273098826408386}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16275396198034286, \"head\": 0.10716865211725235}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.128601536154747, \"head\": 0.08897127956151962}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.8532243445515633, \"head\": 1.7775392159819603}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4363524802029133, \"head\": 0.3694254755973816}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7918676659464836, \"head\": 0.5235973820090294}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4080900177359581, \"head\": 0.36040735617280006}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4166662022471428, \"head\": 0.7396758981049061}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7275396101176739, \"head\": 0.3320169560611248}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16149110719561577, \"head\": 0.10880200192332268}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12496291473507881, \"head\": 0.09315075725317001}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.844798233360052, \"head\": 1.8522144742310047}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4402158856391907, \"head\": 0.36785155162215233}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.8146522752940655, \"head\": 0.5322085469961166}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.4454038627445698, \"head\": 0.3801308311522007}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.4638022370636463, \"head\": 0.7508403994143009}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7640827186405659, \"head\": 0.3220023848116398}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16813604161143303, \"head\": 0.10391318425536156}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12653662264347076, \"head\": 0.0890217237174511}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.793343160301447, \"head\": 1.8276946134865284}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4341490641236305, \"head\": 0.3691273629665375}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7741817161440849, \"head\": 0.5243946127593517}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.40475694462656975, \"head\": 0.36125287786126137}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.377594854682684, \"head\": 0.718324325978756}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.6926019191741943, \"head\": 0.32357120141386986}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16465653106570244, \"head\": 0.10529297962784767}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12526463344693184, \"head\": 0.09251773729920387}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.7720044516026974, \"head\": 1.8043850846588612}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.43207862973213196, \"head\": 0.38412243127822876}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7835614494979382, \"head\": 0.5237056836485863}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.39205655455589294, \"head\": 0.3612974062561989}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3168470077216625, \"head\": 0.7402593493461609}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7052713930606842, \"head\": 0.3303957059979439}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.15475092828273773, \"head\": 0.10632335022091866}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.11874454468488693, \"head\": 0.0949099212884903}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.622681476175785, \"head\": 1.7735796310007572}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.4156458079814911, \"head\": 0.365655992180109}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7382045648992062, \"head\": 0.5164811313152313}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.39328765124082565, \"head\": 0.3591309264302254}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.378839448094368, \"head\": 0.7178278714418411}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7250929847359657, \"head\": 0.31120540574193}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.16472826525568962, \"head\": 0.10223916918039322}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12454882264137268, \"head\": 0.08950944244861603}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.709825109690428, \"head\": 1.7501173876225948}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.42480970546603203, \"head\": 0.3604937642812729}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7863730564713478, \"head\": 0.5190483964979649}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.3875514082610607, \"head\": 0.3607189245522022}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3395422212779522, \"head\": 0.7109512872993946}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7136820517480373, \"head\": 0.3408890590071678}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.152342326939106, \"head\": 0.10665479302406311}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.11605851352214813, \"head\": 0.09059556946158409}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.6293463706970215, \"head\": 1.8005393855273724}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.40906719118356705, \"head\": 0.35636192187666893}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7512628771364689, \"head\": 0.5267557315528393}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.38576236367225647, \"head\": 0.3702627494931221}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3079417943954468, \"head\": 0.7432451322674751}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.7285976521670818, \"head\": 0.3165967985987663}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.15456987917423248, \"head\": 0.103572066873312}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.15367113426327705, \"head\": 0.08733804896473885}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.6992941461503506, \"head\": 1.7813035808503628}}, {\"sympy/integrals/tests/test_integrals.py::test_integrate_derivatives\": {\"base\": 0.40967412665486336, \"head\": 0.3568962961435318}, \"sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants\": {\"base\": 0.7473091259598732, \"head\": 0.5110145844519138}, \"sympy/integrals/tests/test_integrals.py::test_issue_11254d\": {\"base\": 0.3899558521807194, \"head\": 0.3524456359446049}, \"sympy/integrals/tests/test_integrals.py::test_issue_11856\": {\"base\": 1.3646232634782791, \"head\": 0.7271032780408859}, \"sympy/integrals/tests/test_integrals.py::test_issue_15124\": {\"base\": 0.728024672716856, \"head\": 0.3109721764922142}, \"sympy/integrals/tests/test_integrals.py::test_issue_4703\": {\"base\": 0.15649402141571045, \"head\": 0.1040932945907116}, \"sympy/integrals/tests/test_integrals.py::test_issue_5167\": {\"base\": 0.12649481371045113, \"head\": 0.08772661909461021}, \"sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative\": {\"base\": 2.734141569584608, \"head\": 1.7157905846834183}}]",
  "efficiency_test": [
    "sympy/integrals/tests/test_integrals.py::test_integrate_derivatives",
    "sympy/integrals/tests/test_integrals.py::test_integrate_with_complex_constants",
    "sympy/integrals/tests/test_integrals.py::test_issue_11254d",
    "sympy/integrals/tests/test_integrals.py::test_issue_11856",
    "sympy/integrals/tests/test_integrals.py::test_issue_15124",
    "sympy/integrals/tests/test_integrals.py::test_issue_4703",
    "sympy/integrals/tests/test_integrals.py::test_issue_5167",
    "sympy/integrals/tests/test_integrals.py::test_mul_pow_derivative"
  ],
  "patch_functions": "{\"sympy/integrals/heurisch.py\": [\"heurisch\"]}",
  "problem_statement_oracle": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\n{'sympy/integrals/heurisch.py': ['heurisch']}\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "test_functions": "{\"sympy/core/basic.py\": [\"Symbol.doit\", \"Dimension.has\", \"f.doit\", \"Pow.args\"], \"sympy/core/function.py\": [\"Function\", \"Derivative\"], \"sympy/integrals/heurisch.py\": [\"has\"], \"sympy/functions/elementary/hyperbolic.py\": [\"tanh\", \"cosh\", \"sinh\"], \"sympy/functions/elementary/trigonometric.py\": [\"cos\", \"sinc\", \"sec\", \"tan\"], \"sympy/core/decorators.py\": [\"Symbol._func\"], \"sympy/core/expr.py\": [\"has\"], \"sympy/functions/elementary/exponential.py\": [\"log\", \"exp\", \"exp.exp\"], \"sympy/functions/special/error_functions.py\": [\"Si\", \"erf\", \"erfi\"], \"sympy/core/cache.py\": [\"wrapper\"], \"sympy/core/symbol.py\": [\"symbols\", \"Symbol\"], \"sympy/integrals/integrals.py\": [\"Integral.doit\", \"Integral\", \"integrate\"], \"sympy/functions/elementary/miscellaneous.py\": [\"sqrt\"], \"sympy/tensor/indexed.py\": [\"IndexedBase\"], \"sympy/integrals/transforms.py\": [\"MellinTransform.doit\"], \"sympy/core/containers.py\": [\"Tuple\"]}",
  "problem_statement_realistic": "Please enhance the computational efficiency and execution speed across the entire repository. The optimization efforts may target one or more objective functions, including but not limited to:\ndefaultdict(<class 'list'>, {'sympy/core/basic.py': ['Symbol.doit', 'Dimension.has', 'f.doit', 'Pow.args'], 'sympy/core/function.py': ['Function', 'Derivative'], 'sympy/integrals/heurisch.py': ['has'], 'sympy/functions/elementary/hyperbolic.py': ['tanh', 'cosh', 'sinh'], 'sympy/functions/elementary/trigonometric.py': ['cos', 'sinc', 'sec', 'tan'], 'sympy/core/decorators.py': ['Symbol._func'], 'sympy/core/expr.py': ['has'], 'sympy/functions/elementary/exponential.py': ['log', 'exp', 'exp.exp'], 'sympy/functions/special/error_functions.py': ['Si', 'erf', 'erfi'], 'sympy/core/cache.py': ['wrapper'], 'sympy/core/symbol.py': ['symbols', 'Symbol'], 'sympy/integrals/integrals.py': ['Integral.doit', 'Integral', 'integrate'], 'sympy/functions/elementary/miscellaneous.py': ['sqrt'], 'sympy/tensor/indexed.py': ['IndexedBase'], 'sympy/integrals/transforms.py': ['MellinTransform.doit'], 'sympy/core/containers.py': ['Tuple']})\nThe following conditions apply:\n1. Acceleration of at least one objective function is sufficient for success, as performance evaluations will be conducted collectively on all targeted functions.\n2. Optimization may be achieved either directly through modifications to the objective functions or indirectly by improving computationally intensive subroutines upon which they depend.\n3. Optimization efforts should prioritize maximal efficiency gains where feasible.\n4. All existing unit tests must remain unaltered to preserve functional correctness.",
  "human_performance": 0.32800000000000024
}