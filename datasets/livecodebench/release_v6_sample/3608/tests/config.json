{
  "question_title": "find-the-number-of-subsequences-with-equal-gcd",
  "question_content": "You are given an integer array nums.\nYour task is to find the number of pairs of non-empty subsequences (seq1, seq2) of nums that satisfy the following conditions:\n\nThe subsequences seq1 and seq2 are disjoint, meaning no index of nums is common between them.\nThe GCD of the elements of seq1 is equal to the GCD of the elements of seq2.\n\nReturn the total number of such pairs.\nSince the answer may be very large, return it modulo 10^9 + 7.\n \nExample 1:\n\nInput: nums = [1,2,3,4]\nOutput: 10\nExplanation:\nThe subsequence pairs which have the GCD of their elements equal to 1 are:\n\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n([1, 2, 3, 4], [1, 2, 3, 4])\n\n\nExample 2:\n\nInput: nums = [10,20,30]\nOutput: 2\nExplanation:\nThe subsequence pairs which have the GCD of their elements equal to 10 are:\n\n([10, 20, 30], [10, 20, 30])\n([10, 20, 30], [10, 20, 30])\n\n\nExample 3:\n\nInput: nums = [1,1,1,1]\nOutput: 50\n\n \nConstraints:\n\n1 <= nums.length <= 200\n1 <= nums[i] <= 200",
  "platform": "leetcode",
  "question_id": "3608",
  "contest_id": "weekly-contest-421",
  "contest_date": "2024-10-26T19:30:00",
  "starter_code": "class Solution:\n    def subsequencePairCount(self, nums: List[int]) -> int:\n        ",
  "difficulty": "hard",
  "public_test_cases": "[{\"input\": \"[1, 2, 3, 4]\", \"output\": \"10\", \"testtype\": \"functional\"}, {\"input\": \"[10, 20, 30]\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"[1, 1, 1, 1]\", \"output\": \"50\", \"testtype\": \"functional\"}]",
  "private_test_cases": "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",
  "metadata": "{\"func_name\": \"subsequencePairCount\"}"
}