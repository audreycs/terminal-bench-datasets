{
  "question_title": "sum-of-imbalance-numbers-of-all-subarrays",
  "question_content": "The imbalance number of a 0-indexed integer array arr of length n is defined as the number of indices in sarr = sorted(arr) such that:\n\n0 <= i < n - 1, and\nsarr[i+1] - sarr[i] > 1\n\nHere, sorted(arr) is the function that returns the sorted version of arr.\nGiven a 0-indexed integer array nums, return the sum of imbalance numbers of all its subarrays.\nA subarray is a contiguous non-empty sequence of elements within an array.\n \nExample 1:\n\nInput: nums = [2,3,1,4]\nOutput: 3\nExplanation: There are 3 subarrays with non-zero imbalance numbers:\n- Subarray [3, 1] with an imbalance number of 1.\n- Subarray [3, 1, 4] with an imbalance number of 1.\n- Subarray [1, 4] with an imbalance number of 1.\nThe imbalance number of all other subarrays is 0. Hence, the sum of imbalance numbers of all the subarrays of nums is 3. \n\nExample 2:\n\nInput: nums = [1,3,3,3,5]\nOutput: 8\nExplanation: There are 7 subarrays with non-zero imbalance numbers:\n- Subarray [1, 3] with an imbalance number of 1.\n- Subarray [1, 3, 3] with an imbalance number of 1.\n- Subarray [1, 3, 3, 3] with an imbalance number of 1.\n- Subarray [1, 3, 3, 3, 5] with an imbalance number of 2. \n- Subarray [3, 3, 3, 5] with an imbalance number of 1. \n- Subarray [3, 3, 5] with an imbalance number of 1.\n- Subarray [3, 5] with an imbalance number of 1.\nThe imbalance number of all other subarrays is 0. Hence, the sum of imbalance numbers of all the subarrays of nums is 8. \n \nConstraints:\n\n1 <= nums.length <= 1000\n1 <= nums[i] <= nums.length",
  "platform": "leetcode",
  "question_id": "2849",
  "contest_id": "weekly-contest-352",
  "contest_date": "2023-07-02T00:00:00",
  "starter_code": "class Solution:\n    def sumImbalanceNumbers(self, nums: List[int]) -> int:\n        ",
  "difficulty": "hard",
  "public_test_cases": "[{\"input\": \"[2, 3, 1, 4]\", \"output\": \"3\", \"testtype\": \"functional\"}, {\"input\": \"[1, 3, 3, 3, 5]\", \"output\": \"8\", \"testtype\": \"functional\"}]",
  "private_test_cases": "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",
  "metadata": "{\"func_name\": \"sumImbalanceNumbers\"}"
}