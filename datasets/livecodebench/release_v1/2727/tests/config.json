{
  "question_title": "number-of-senior-citizens",
  "question_content": "You are given a 0-indexed array of strings details. Each element of details provides information about a given passenger compressed into a string of length 15. The system is such that:\n\nThe first ten characters consist of the phone number of passengers.\nThe next character denotes the gender of the person.\nThe following two characters are used to indicate the age of the person.\nThe last two characters determine the seat allotted to that person.\n\nReturn the number of passengers who are strictly more than 60 years old.\n \nExample 1:\n\nInput: details = [\"7868190130M7522\",\"5303914400F9211\",\"9273338290F4010\"]\nOutput: 2\nExplanation: The passengers at indices 0, 1, and 2 have ages 75, 92, and 40. Thus, there are 2 people who are over 60 years old.\n\nExample 2:\n\nInput: details = [\"1313579440F2036\",\"2921522980M5644\"]\nOutput: 0\nExplanation: None of the passengers are older than 60.\n\n \nConstraints:\n\n1 <= details.length <= 100\ndetails[i].length == 15\ndetails[i] consists of digits from '0' to '9'.\ndetails[i][10] is either 'M' or 'F' or 'O'.\nThe phone numbers and seat numbers of the passengers are distinct.",
  "platform": "leetcode",
  "question_id": "2727",
  "contest_id": "biweekly-contest-104",
  "contest_date": "2023-05-13T00:00:00",
  "starter_code": "class Solution:\n    def countSeniors(self, details: List[str]) -> int:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"[\\\"7868190130M7522\\\", \\\"5303914400F9211\\\", \\\"9273338290F4010\\\"]\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"[\\\"1313579440F2036\\\", \\\"2921522980M5644\\\"]\", \"output\": \"0\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJylmcuqJMcRhr3wcwhxwDthMiIvkekHqF1RW4NGC2NkEIiRwGcWxhj8EPb7+vv7VGTLGmM4jARCU9NdmRnx3yL7n7/99++++s3jnz9+xf98+/eXHz7+/On15Q9fv3z74aWuOa36KP1qa/UPL9+9fPP1y0+fXu+PFP3x9fu/vr7+7efv9eAvnz7++fWHnz7+6ceXf3zz9X+/rJjzrojoV3iLz15m73nZijl7ibHqYTa+cGezzlVXs+jnnL6+bGelrdF8ellnrFq/9GV19tn496heyge+++GleWlmlXWuWsq4HzZrJWqzedr84oIMm8Wi9XmNEfNtBW+tzdVitIu629vDWkaheMXLMev/WLa+Z9lqYwEQH36UNuM+2LQVZczmZ6vrflib91pjdTua+V0Xekdhaol2juH3rgtHiTVWr9eM5m8PO81evVm3q/f2eY/8XVDk3Szap11Wxt0O+uN9LbhzrfC7WGPSIw4z57nWLuvsvZfZa5xOW98egpzgCHDl5O/X20O+UxsMauOokX3vc8boc3i/RtFRHqtHL7y1U7Mo5f46jaxWZvg8WtS6scQmF+88BZ/7YXXnvcD4gPv3PgGiaYOLh2vchSxrAghvc5yds96ftLK8jjHKSfHvh+ydF5Y2xrFGPpyzuHG+sU5O2+931tLoFFA++sqHw80XKJv1AJnzs47Fuzo2okddpaFEtedRCmKCQlk/6qrt7gOfHDYGe5l9xK6us71Cw2PZXbNepxm9iHZM83w4AozONjrV7XdvrZdq0HXE1d1a0rf3AUAtTqH4ftjj0dlhJxvL6pYFM9vydlCz3DwaCITWQ8FK1qzbsl4t6gGTa4LIZ+1jtXbVmXgBu7THgNvRWe5+Z3ipHH/52T1B5KU3JLy2djhYuN9JJTu6h+QNWn8f08GW+UClqMfcKmUTtgC3GDX1rFhdbojKRTdy89Um3Z9zQtFdZO/FgbuPw2qfyareqG5YO1vPfYaDlYWKlRMs3luaAtCElwONbPcnJRnegGQcvPxeHY6yqlOoCx7fD32BYBrS5hU9z875gsUp3sEpLfuOnRSqimb1eR9zIJ+VbkRcFZjdCxkfW6WzT8C39znQDrHq6nXcx0RlUboCJa7YRO9tWKujRmA2keLozpbWqP2MmaYBYDvwqrYOkOL7nY4eoCqShPuYE0rSRa9I+kxOo1BLmjUGLc6zI71Vjl79hMIjZUbwRGD8aC03bwYAK38F+80iVRi5rN0AA2qXn6QfIBnSXA2U3gCrHRwPmH+JJ/cnJ6bQQFG9ePV9zNA5aB66G3znXggFpibu67BtmA7CECkIChiScUMhpVFKOwM8Z5UoM/Y66oGm3Z+cfH0ghL2cCGMkGCiR21pFXrX7vpyGqke/oOF8ACw8Ltzz/jpG1aV8xQk1KcbLBxtyuodYrd13WgPER7041UrYdBE1ligzkx2UxhDeNQ/+No9JebvIZUesbBzivDB4/Pd4ilUVNbEcPGfQj/110gi0wp08P1nYPCeC9edsScPKgap8ox2IYwoL5oR0rVZVkGeQcMwGOKN1kbKGY3HS+hCWPBEKjcVjRwuljXshgE2LgAhF3t44F8m18mdSQkssTRHL24IIJINsHL2k5DgeYpV8p5mYG1KwLhQoMQ/JCzR2u3ymDUp/JlWyebGj1BBKsbAO4A32PdsBu1gXdsDQe3V0SmD1NyLkO/Hrhvp2hDpKBpcOgEmrbV2kIk+xGqpSqQoLc4PBrBEA2FJFn9LOGtYG4/xiE9nNaobWW5BKWiYksp96R+cQ6gwg4B3bapz+gg25eaFbVOCdfOFuB1K5dPRy0ZVUG3EAj2L1uvKh9xiFSiK/UvZMJY7UL05/tr2liipVcEPWoMhPzBvdhEmYqWeREYDGgGBws6RcNBwbvpWFd6xcCNMgLKPJ61JRsx3DB6UrONeQVP46074r1IYpbFZoBlVHS7hyaCAzSG0jJbqTQHohQ/YDpU8KNFwL+TOoWsqWFKQU9FW8gKrtoKx5aFQAY9kd0AKIKOQ6MY9EO5gmPaMAJ4bZUiSrAiQLnYqZm2ushZbZSX126MPdpvLQJdIlYJAY5p0x0dhnzQkznadobCSKyHGluzQVf8mFyEhwnU2hsTUXYseDeQxvuQiom78xjKjRWahmiJawYmNo+sEUkihih2gxEe7stmOey9TQOb+WZVJCi/mWggBDQloe/yP0MDycRIw8EQkE3ynCBiBLQRvKPTAIMc8TkYmomLHXa3qGN6PZGLYCDKtlkSGflC9YvWWqIQ1SPSSWdtg2cTjO6RlcyODJX6lz7ViWIZLJdMZ2aTRzBHkyFcmouTgYTAAzc5r2AZwQyFMR9KZAF/kRTjtoXGYAkEyNiWQHdpSsHKIt3ISAI3YYpusF6CoMp0GQMwqAB5snCbAn6hjVALu5/PquJ5VsCjB000ZGx1Xg/5JvIH053ZETgAu08QNty4kqlmJmCCEzKx/SLeBMj5RYMjqiM0sYOSnKDm/D1CSvR+x6KiF20K4p9HF58dgSZi8XRLdZMfEJETj5YjpgREiZqkowEr+TDSfqmjiHL9qJfqWNQi6FJVqsjJAn4s+KdXGSd7bhcnqsQfkHq0gTXxwJN2zKqBmfCodDGWa5NFul9JFrNHxVhtG+Rxu2wxTh/SB8bR9ErQd7nSfTdRIWCYBvOOiJf+SJ0PExMOyK2mSWdkUlGFsFsJYJhG/yhOhzaCC+u9kUB4diM19KYWGHruNTpZ1qzKdmXAYHUabt0lEjmvSIozlzY7VV4bUyy/ZU2ooRguQygM3mO1Vj1FMYrr2VLB2go+SMS5LBZHFvoBPGK5LtuUz6A9oVCHMARD6ZjokE5YK3mSfxKwZHNJoWZzd1SYFDIUMMLE9vbRL0x7S1tlA3IUxp+lDW2zYhpWMAJSFnO5i2yH6CHSNDnp39yE4wmgODzTk3UO+imRYi7K+jk3CBPE18Sp3XJZ7mstUvirDHJbRChY5Do21SBrboDqTB930FoiRLDmUh1ktRjcemRtCO8lRF6o5zDr/IEZl/ButrEiFolYQiKcN9ishH9B20JDXMISYBzLBBywMp74xglD/ryTPUJjTrrX1dQc85O2H8QmIyT8pwEFYyP1u29DjoI3L4SV1TLjQdyHkXULQUfyX7EAMPcLKvfyCRbhiYXk0t/lXYaPM9YYPpCUVh6O6n7poSw0gC0uPlmiWv1UhtHIxJxYhYKX1F1wqVjAcIY2dj5VDddtg1bCc0kIHlYNiHJpmNIt5JrJknJ82WTd0R4hf9UpLIUhCyiGiVWXjfG0FoaguFqWTkTV9RIiax90bR6rO8ITWmOwhBmuMSOGB20ZCYWY5ggYfSc13tps7wUiImPnrqdvE+EaFwdd2FXQT/9CztCXci1aBDaRCmO09pgK5Q9ixc+QMLtxO25/DF9DUefyMG5YUmsUPzx9RQs0eVolsINC1I0YmNonsCCKF7gJI+iLIxZ7QS/cA90u6RuKmLCIeVqYdWNI5KwABhzq1FF/mUw0MylX0H6BPXcoRiJbBBEYszzZYzNoMWcymoQX2IJekvUAdidJk4X7FkkII5/9XtU/KCwhFtURCK3PKSTdeJtWGYDarOX8xZfI5KEclyyqPjeP/SveYzq6AcuhQlhJ24+57uSbuaSAkbPadmmkHMIo1WkBw7is/2ptwXOvK8Yo/HBWicGGKqB6rblMoK7Eg97KHrW6J7I3mmROsKgk9accXm7CYSzzCti16iSvqgbs34YxScKGNJ1ZW3Y5EuJKdrcDZyFnJBQs7rI/D1uDMnnyv8JubJKkzISJ9uE7LFZAyYjBf4voEZuDQdAhIHJ0sWUyVkCoM86soxRDeJpFaGOt3+Pq8R8GD63LX6vU8NtxDV5AUjb2BYGTWWP/P1DAaUB2XB6ecBntJG+TqpYE2Ed1+HUxkmAcwNhW979EOqlKqKkJyeRdJmnkSdqeczLUjhcBJ73LzlPiEcmHV7XHNlfALa+CvT46lfvhJgoWuZgYaMlRc4OAvUxiHtwq7TNWiQzKjMg1T5vJ9UTeje8byOW0XjKvmxHb3EHuvwRIXHeq19jUCQNsIOs92BWmcCafpVCLaQunsmkFisXIikBfnNW0fTDKZRuEPttGb93iXbQpeeFziUjsMLEszCnvIbus2eoOkiU6XS6ueyAE8kpcdl/Bvq+C6OxxxBWzdsSDCPKxM5e6ZEZnbOhyucJOCcdx6DpqyGhdLEO5vBNItmqJZxtOqHJj64KLLnHKEbQPJuKCmF7x9M4JAAouEiXRgCui4NWAgXyNGm6gcvzTwHu8s7EHjFbIOMIdT7Fw8y2uPOtx3E6j0R6zi1hRoXySNxkxiCG+ryM62n0WID4CdOnfvUFMTAwQRHCktuVvFDWUmX/3mtTUQD3EjLtfZFKO6oW1Ek55Th3Au5fAdtcli89okoun4xMjnC57979f97s/Hdv37/H6u0q5c=",
  "metadata": "{\"func_name\": \"countSeniors\"}"
}