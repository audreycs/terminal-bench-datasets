{
  "question_title": "TLD",
  "question_content": "You are given a string S consisting of lowercase English letters and the character ..\r\nPrint the last substring when S is split by .s.\r\nIn other words, print the longest suffix of S that does not contain ..\n\nInput\n\nThe input is given from Standard Input in the following format:\nS\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- S is a string of length between 2 and 100, inclusive, consisting of lowercase English letters and ..\n- S contains at least one ..\n- S does not end with ..\n\nSample Input 1\n\natcoder.jp\n\nSample Output 1\n\njp\r\n\nThe longest suffix of atcoder.jp that does not contain . is jp.\n\nSample Input 2\n\ntranslate.google.com\n\nSample Output 2\n\ncom\r\n\nS may contain multiple .s.\n\nSample Input 3\n\n.z\n\nSample Output 3\n\nz\r\n\nS may start with ..\n\nSample Input 4\n\n..........txt\n\nSample Output 4\n\ntxt\r\n\nS may contain consecutive .s.",
  "platform": "atcoder",
  "question_id": "abc339_a",
  "contest_id": "abc339",
  "contest_date": "2024-02-03T00:00:00",
  "starter_code": "",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"atcoder.jp\\n\", \"output\": \"jp\\n\", \"testtype\": \"stdin\"}, {\"input\": \"translate.google.com\\n\", \"output\": \"com\\n\", \"testtype\": \"stdin\"}, {\"input\": \".z\\n\", \"output\": \"z\\n\", \"testtype\": \"stdin\"}, {\"input\": \"..........txt\\n\", \"output\": \"txt\\n\", \"testtype\": \"stdin\"}]",
  "private_test_cases": "eJy9VEuuFTkM7QFSb+PpjpEX0PtoCQkY5Ff5Vf7/ICQWAfvF9UBqdF9LXAaQQcqpOPbJOXY+vfry7u+/nsebf9F4++GmfWz19s/TLZvOqpmSkqaWhGmP3t752+unW2j1u88PP6sota4ort+lcu1vH18//RAOQAJQqzg0BjjaNaF13sc8H4vHIS+MMMErkJbFtkFlCACaAggosgebrvgTvTwAv8/DH8uztRB0NZiuzDY2iJO0rGX2s0anDDFrjLYk5fpsYdSQZ7Jg75PZx5IhVn+x0531xyYgeb5oWide6zLkxileFs4WwKGRwzOVYEDh6XCQAyDhuhgK5XKxMAD3PFJOUIJ7aPQxaKfGS56V896Oc6kx9TFKUJmXHLxHm/TFppqbtL5V0m4TqUcWunsedtGW+d6DMMtWxVwtwvoudWUjmoGroyL+e2jq0dL67aPfQ+uPQcvAwZ1IO2z8YhleepJvMf1GmUoCJXA3+f+SPe9LCBWcftYY5edYASgsavite/qlba0WpnzRlPIxbN5Ot2I43Jqkm+KiMHZuF/fWdlFZndjRJr0pcIL1bjmtcZimqiHKcBawvxIzYBahtplkBta/LNFwewY2hptxuntsDzj/PrXnKj6SOcWqw2B5+l1NOM8ZezM5YOfQcJTFqq0vKP3Fkz+7gwMqHA1W+JQJSSFvXfEZqfzocgxCj2K4I9Fol1pXJusuSYlbOc2FHo6EbntL9eiLI2+6GWlHkGcsPKrK6PCyvKD+T2X8qX4ql8QHpyzTNuwM+bSnJXLQ3KjkhbXo+6mYGohAs9PIuUKvMx0Cc1e2YkMJuhc8tVOLyFJhJimRjBrRukwO8eKN+2Mp/+fy7z/DV3nWipU=",
  "metadata": "{}"
}