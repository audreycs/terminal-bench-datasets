{
  "question_title": "Synchronized Players",
  "question_content": "There is an N \\times N grid, where each cell is either empty or contains an obstacle. Let (i, j) denote the cell at the i-th row from the top and the j-th column from the left.\nThere are also two players on distinct empty cells of the grid. The information about each cell is given as N strings S_1, S_2, \\ldots, S_N of length N, in the following format:\n\n- \r\nIf the j-th character of S_i is P, then (i, j) is an empty cell with a player on it.\n\n- \r\nIf the j-th character of S_i is ., then (i, j) is an empty cell without a player.\n\n- \r\nIf the j-th character of S_i is #, then (i, j) contains an obstacle.\n\n\nFind the minimum number of moves required to bring the two players to the same cell by repeating the following operation. If it is impossible to bring the two players to the same cell by repeating the operation, print -1.\n\n- Choose one of the four directions: up, down, left, or right. Then, each player attempts to move to the adjacent cell in that direction. Each player moves if the destination cell exists and is empty, and does not move otherwise.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nS_1\r\nS_2\r\n\\vdots\r\nS_N\n\nOutput\n\nPrint the answer.\n\nConstraints\n\n\n- N is an integer between 2 and 60, inclusive.\n- S_i is a string of length N consisting of P, ., and #.\n- There are exactly two pairs (i, j) where the j-th character of S_i is P.\n\nSample Input 1\n\n5\r\n....#\r\n#..#.\r\n.P...\r\n..P..\r\n....#\n\nSample Output 1\n\n3\r\n\nLet us call the player starting at (3, 2) Player 1 and the player starting at (4, 3) Player 2.\nFor example, doing the following brings the two players to the same cell in three moves:\n\n- \r\nChoose left. Player 1 moves to (3, 1), and Player 2 moves to (4, 2).\n\n- \r\nChoose up. Player 1 does not move, and Player 2 moves to (3, 2).\n\n- \r\nChoose left. Player 1 does not move, and Player 2 moves to (3, 1).\n\nSample Input 2\n\n2\r\nP#\r\n#P\n\nSample Output 2\n\n-1\n\nSample Input 3\n\n10\r\n..........\r\n..........\r\n..........\r\n..........\r\n....P.....\r\n.....P....\r\n..........\r\n..........\r\n..........\r\n..........\n\nSample Output 3\n\n10",
  "platform": "atcoder",
  "question_id": "abc339_d",
  "contest_id": "abc339",
  "contest_date": "2024-02-03T00:00:00",
  "starter_code": "",
  "difficulty": "medium",
  "public_test_cases": "[{\"input\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"output\": \"3\\n\", \"testtype\": \"stdin\"}, {\"input\": \"2\\nP#\\n#P\\n\", \"output\": \"-1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"10\\n..........\\n..........\\n..........\\n..........\\n....P.....\\n.....P....\\n..........\\n..........\\n..........\\n..........\\n\", \"output\": \"10\\n\", \"testtype\": \"stdin\"}]",
  "private_test_cases": "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",
  "metadata": "{}"
}