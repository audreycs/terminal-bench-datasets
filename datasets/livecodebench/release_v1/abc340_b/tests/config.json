{
  "question_title": "Append",
  "question_content": "You have an empty sequence A. There are Q queries given, and you need to process them in the order they are given.\nThe queries are of the following two types:\n\n- 1 x: Append x to the end of A.\n- 2 k: Find the k-th value from the end of A. It is guaranteed that the length of A is at least k when this query is given.\n\nInput\n\nThe input is given from Standard Input in the following format:\nQ\n\\mathrm{query}_1\n\\mathrm{query}_2\n\\vdots\n\\mathrm{query}_Q\n\nEach query is in one of the following two formats:\n1 x\n\n2 k\n\nOutput\n\nPrint q lines, where q is the number of queries of the second type.\nThe i-th line should contain the answer to the i-th such query.\n\nConstraints\n\n\n- 1 \\leq Q \\leq 100\n- In the first type of query, x is an integer satisfying 1 \\leq x \\leq 10^9.\n- In the second type of query, k is a positive integer not greater than the current length of sequence A.\n\nSample Input 1\n\n5\n1 20\n1 30\n2 1\n1 40\n2 3\n\nSample Output 1\n\n30\n20\n\n\n- Initially, A is empty.\n- The first query appends 20 to the end of A, making A=(20).\n- The second query appends 30 to the end of A, making A=(20,30).\n- The answer to the third query is 30, which is the 1-st value from the end of A=(20,30).\n- The fourth query appends 40 to the end of A, making A=(20,30,40).\n- The answer to the fifth query is 20, which is the 3-rd value from the end of A=(20,30,40).",
  "platform": "atcoder",
  "question_id": "abc340_b",
  "contest_id": "abc340",
  "contest_date": "2024-02-10T00:00:00",
  "starter_code": "",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"5\\n1 20\\n1 30\\n2 1\\n1 40\\n2 3\\n\", \"output\": \"30\\n20\\n\", \"testtype\": \"stdin\"}]",
  "private_test_cases": "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",
  "metadata": "{}"
}