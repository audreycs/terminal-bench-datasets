{
  "question_title": "remove-adjacent-almost-equal-characters",
  "question_content": "You are given a 0-indexed string word.\nIn one operation, you can pick any index i of word and change word[i] to any lowercase English letter.\nReturn the minimum number of operations needed to remove all adjacent almost-equal characters from word.\nTwo characters a and b are almost-equal if a == b or a and b are adjacent in the alphabet.\n \nExample 1:\n\nInput: word = \"aaaaa\"\nOutput: 2\nExplanation: We can change word into \"acaca\" which does not have any adjacent almost-equal characters.\nIt can be shown that the minimum number of operations needed to remove all adjacent almost-equal characters from word is 2.\n\nExample 2:\n\nInput: word = \"abddez\"\nOutput: 2\nExplanation: We can change word into \"ybdoez\" which does not have any adjacent almost-equal characters.\nIt can be shown that the minimum number of operations needed to remove all adjacent almost-equal characters from word is 2.\nExample 3:\n\nInput: word = \"zyxyxyz\"\nOutput: 3\nExplanation: We can change word into \"zaxaxaz\" which does not have any adjacent almost-equal characters. \nIt can be shown that the minimum number of operations needed to remove all adjacent almost-equal characters from word is 3.\n\n \nConstraints:\n\n1 <= word.length <= 100\nword consists only of lowercase English letters.",
  "platform": "leetcode",
  "question_id": "3230",
  "contest_id": "biweekly-contest-119",
  "contest_date": "2023-12-09T00:00:00",
  "starter_code": "class Solution:\n    def removeAlmostEqualCharacters(self, word: str) -> int:\n        ",
  "difficulty": "medium",
  "public_test_cases": "[{\"input\": \"\\\"aaaaa\\\"\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"\\\"abddez\\\"\", \"output\": \"2\", \"testtype\": \"functional\"}, {\"input\": \"\\\"zyxyxyz\\\"\", \"output\": \"3\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJy9kE0KwjAQhV0U3HmGkrWIiF3oSQR1kaSp1ta02lRnRgQPofc1Kd3YhVAizkCYn/fBmzyC1ygYNLEa2mJ9Y6kua8OWIdvYZOOQFbVpJ1PXGlUZg6Vyg6TW0qSF5jm7j8MPFnzgzAdWPjD3gVMfOPaBKx9Y+MCmvlwBiQsZq2S3Tw9ZftRFeTpXv9t0/c0Xfa77Q3QNRn1+UAJyezKgABIIElEgSiRJxBE4IQeQ5LaSoBUAcCsmbDRO714nILtyra0bvRW7YdfgLPpmcPucvAHldF8q",
  "metadata": "{\"func_name\": \"removeAlmostEqualCharacters\"}"
}