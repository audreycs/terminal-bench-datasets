{
  "question_title": "maximum-value-of-an-ordered-triplet-i",
  "question_content": "You are given a 0-indexed integer array nums.\nReturn the maximum value over all triplets of indices (i, j, k) such that i < j < k. If all such triplets have a negative value, return 0.\nThe value of a triplet of indices (i, j, k) is equal to (nums[i] - nums[j]) * nums[k].\n \nExample 1:\n\nInput: nums = [12,6,1,2,7]\nOutput: 77\nExplanation: The value of the triplet (0, 2, 4) is (nums[0] - nums[2]) * nums[4] = 77.\nIt can be shown that there are no ordered triplets of indices with a value greater than 77. \n\nExample 2:\n\nInput: nums = [1,10,3,4,19]\nOutput: 133\nExplanation: The value of the triplet (1, 2, 4) is (nums[1] - nums[2]) * nums[4] = 133.\nIt can be shown that there are no ordered triplets of indices with a value greater than 133.\n\nExample 3:\n\nInput: nums = [1,2,3]\nOutput: 0\nExplanation: The only ordered triplet of indices (0, 1, 2) has a negative value of (nums[0] - nums[1]) * nums[2] = -3. Hence, the answer would be 0.\n\n \nConstraints:\n\n3 <= nums.length <= 100\n1 <= nums[i] <= 10^6",
  "platform": "leetcode",
  "question_id": "3154",
  "contest_id": "weekly-contest-365",
  "contest_date": "2023-10-01T00:00:00",
  "starter_code": "class Solution:\n    def maximumTripletValue(self, nums: List[int]) -> int:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"[12, 6, 1, 2, 7]\", \"output\": \"77\", \"testtype\": \"functional\"}, {\"input\": \"[1, 10, 3, 4, 19]\", \"output\": \"133\", \"testtype\": \"functional\"}, {\"input\": \"[1, 2, 3]\", \"output\": \"0\", \"testtype\": \"functional\"}]",
  "private_test_cases": "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",
  "metadata": "{\"func_name\": \"maximumTripletValue\"}"
}