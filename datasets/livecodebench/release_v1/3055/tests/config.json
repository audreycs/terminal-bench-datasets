{
  "question_title": "maximum-odd-binary-number",
  "question_content": "You are given a binary string s that contains at least one '1'.\nYou have to rearrange the bits in such a way that the resulting binary number is the maximum odd binary number that can be created from this combination.\nReturn a string representing the maximum odd binary number that can be created from the given combination.\nNote that the resulting string can have leading zeros.\n \nExample 1:\n\nInput: s = \"010\"\nOutput: \"001\"\nExplanation: Because there is just one '1', it must be in the last position. So the answer is \"001\".\n\nExample 2:\n\nInput: s = \"0101\"\nOutput: \"1001\"\nExplanation: One of the '1's must be in the last position. The maximum number that can be made with the remaining digits is \"100\". So the answer is \"1001\".\n\n \nConstraints:\n\n1 <= s.length <= 100\ns consists only of '0' and '1'.\ns contains at least one '1'.",
  "platform": "leetcode",
  "question_id": "3055",
  "contest_id": "weekly-contest-364",
  "contest_date": "2023-09-24T00:00:00",
  "starter_code": "class Solution:\n    def maximumOddBinaryNumber(self, s: str) -> str:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"\\\"010\\\"\", \"output\": \"\\\"001\\\"\", \"testtype\": \"functional\"}, {\"input\": \"\\\"0101\\\"\", \"output\": \"\\\"1001\\\"\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJytUkEKwkAM9KD/KDkXSa6+RLAeRCoUpC24PYgIvfkB/a92N4kUA5LSQLtJNjtMJumXr8dqEW3bf5zdDaq67QJsMiiAsADIM2i6oDmklAvlJYRrWw7ZU1cfQ9XUhzPc82wMQb8Q5INAA8LNwqTh5WGBOJmg2Y27HWMwXiZEFhWaAGOS8eoy4FD8RXfwU2Y4OYeUPrlArRnVczHyE7mwaE4y9Jh3PVgFIZ6kQJVFGuVOMYnwrSQkFVBjDWLxTDK4VPAuFc9O2Mf2VQeZKLdHvCBCS2J5r2pxisO5tsGlxR8Z9s/1G87NZDI=",
  "metadata": "{\"func_name\": \"maximumOddBinaryNumber\"}"
}