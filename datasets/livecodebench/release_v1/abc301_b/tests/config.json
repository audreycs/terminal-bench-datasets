{
  "question_title": "Fill the Gaps",
  "question_content": "We have a sequence of length N consisting of positive integers: A=(A_1,\\ldots,A_N). Any two adjacent terms have different values.\nLet us insert some numbers into this sequence by the following procedure.\n\n- If every pair of adjacent terms in A has an absolute difference of 1, terminate the procedure.\n- Let A_i, A_{i+1} be the pair of adjacent terms nearest to the beginning of A whose absolute difference is not 1.\n- If A_i < A_{i+1}, insert A_i+1,A_i+2,\\ldots,A_{i+1}-1 between A_i and A_{i+1}.\n- If A_i > A_{i+1}, insert A_i-1,A_i-2,\\ldots,A_{i+1}+1 between A_i and A_{i+1}.\n\n\n- Return to step 1.\n\nPrint the sequence when the procedure ends.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nA_1 A_2 \\ldots A_N\n\nOutput\n\nPrint the terms in the sequence when the procedure ends, separated by spaces.\n\nConstraints\n\n\n- 2 \\leq N \\leq 100\n- 1 \\leq A_i \\leq 100\n- A_i \\neq A_{i+1}\n- All values in the input are integers.\n\nSample Input 1\n\n4\r\n2 5 1 2\n\nSample Output 1\n\n2 3 4 5 4 3 2 1 2\r\n\nThe initial sequence is (2,5,1,2). The procedure goes as follows.\n\n- Insert 3,4 between the first term 2 and the second term 5, making the sequence (2,3,4,5,1,2).\n- Insert 4,3,2 between the fourth term 5 and the fifth term 1, making the sequence (2,3,4,5,4,3,2,1,2).\n\nSample Input 2\n\n6\r\n3 4 5 6 5 4\n\nSample Output 2\n\n3 4 5 6 5 4\r\n\nNo insertions may be performed.",
  "platform": "atcoder",
  "question_id": "abc301_b",
  "contest_id": "abc301",
  "contest_date": "2023-05-13T00:00:00",
  "starter_code": "",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"4\\n2 5 1 2\\n\", \"output\": \"2 3 4 5 4 3 2 1 2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"6\\n3 4 5 6 5 4\\n\", \"output\": \"3 4 5 6 5 4\\n\", \"testtype\": \"stdin\"}]",
  "private_test_cases": "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",
  "metadata": "{}"
}