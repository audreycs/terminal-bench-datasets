{
  "question_title": "shortest-string-that-contains-three-strings",
  "question_content": "Given three strings a, b, and c, your task is to find a string that has the minimum length and contains all three strings as substrings.\nIf there are multiple such strings, return the lexicographically smallest one.\nReturn a string denoting the answer to the problem.\nNotes\n\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b.\nA substring is a contiguous sequence of characters within a string.\n\n \nExample 1:\n\nInput: a = \"abc\", b = \"bca\", c = \"aaa\"\nOutput: \"aaabca\"\nExplanation:  We show that \"aaabca\" contains all the given strings: a = ans[2...4], b = ans[3..5], c = ans[0..2]. It can be shown that the length of the resulting string would be at least 6 and \"aaabca\" is the lexicographically smallest one.\nExample 2:\n\nInput: a = \"ab\", b = \"ba\", c = \"aba\"\nOutput: \"aba\"\nExplanation: We show that the string \"aba\" contains all the given strings: a = ans[0..1], b = ans[1..2], c = ans[0..2]. Since the length of c is 3, the length of the resulting string would be at least 3. It can be shown that \"aba\" is the lexicographically smallest one.\n\n \nConstraints:\n\n1 <= a.length, b.length, c.length <= 100\na, b, c consist only of lowercase English letters.",
  "platform": "leetcode",
  "question_id": "2877",
  "contest_id": "weekly-contest-356",
  "contest_date": "2023-07-30T00:00:00",
  "starter_code": "class Solution:\n    def minimumString(self, a: str, b: str, c: str) -> str:\n        ",
  "difficulty": "medium",
  "public_test_cases": "[{\"input\": \"\\\"abc\\\"\\n\\\"bca\\\"\\n\\\"aaa\\\"\", \"output\": \"\\\"aaabca\\\"\", \"testtype\": \"functional\"}, {\"input\": \"\\\"ab\\\"\\n\\\"ba\\\"\\n\\\"aba\\\"\", \"output\": \"\\\"aba\\\"\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJy9VkmOJTUQZcGKU5T+usUBOAkSn4Xt8DzPA0LiEHA/dlwDV2WqW61foM5F/dw4M/Lle+HnCDv/+P6vf3747u36+e9988tvN+lCLbefXm73m7/f7u5+G8cA99vt08vN1/IZAH4cwUJzKTPQ1zCrjhTpHTK33z+9fEUYLD+4VDtG+shJVXuDXaAV5GAzQp684p1kBRFwIC5QFyQOxhaPkZPUH7lfoxv6CrpixwgH6Wn0UgwRix/p/UZ+9fIbBZzhEXitZ+r2v03n9gv2goDCB2Xic3BzPmiPHhUU3uHPsAsSNtkly+mQyxnyqfKooU/sibogko07BWxiGFc7j0cyojOPQm/h/c0X8AUtrU1ugcZBecy6c9xHojUkzRXvFfExxWgO6UqosHY4N0qhYLuujudarNxTJEYrA8oPiRRQAF2KNQxi8VOGtM6avf5dNhHr0i1uKmmBpO0A3Y5UXJY8RRaKNlbHZp2qivMa9dkduDJMQCZsJHUKjM6M4SLD9RQMFNwVLEJJzoYDdjRGrWl+Z72f4OR1R57nxTcWXPdNpMKmtrM4RETbLciiS55L3H3QyLgkFrPVJy2HR7V5lgSJ3pmahRDARF1ilmpZh06t18lje9aYrRScz5oYvFQF6XPpqWDdbDTd8y4wUCnDntoGYvCTpzo9xwjlbmgDDYFO7dnoFKnoHFcjj8hYzladPemjge6tgN3ZK0fc9eJESW+M6G6yqPtYO2shqfYTskW87Jw14WRvyRLPyekixpKOJeMFhoOaOsU1cMP8RLaOx9L60Gl9/IQ+bMkvlF1CVBUXHODkmG6ib3frbERaUFFHnFWa2g2eG05jNVAzNYOVRTEoVjpGGkjjtJk1NV3FsAVAx+5IX8fEeJ8nFR0F0iOjeG5jTIuiW52Vb45WxSRtnODMSI4g9/5AOuJM5tCWJnI3n1SM1777r4IHPGlGri0ZFE0gbenCFsuWTlnIdP5heAEh4J0+cLSXwRKUQ82575OtyryCskQJvwKxbLDFOUtMz5BUZ1ntk0JyHh1Vo9FWrZkQUc5MCW4V94SqVD16pxifofoMD59SEP9Xob/++eO/75o1gg==",
  "metadata": "{\"func_name\": \"minimumString\"}"
}