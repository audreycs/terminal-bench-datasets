{
  "question_title": "Vacation Together",
  "question_content": "There are N people numbered 1 to N.\r\nYou are given their schedule for the following D days. The schedule for person i is represented by a string S_i of length D. If the j-th character of S_i is o, person i is free on the j-th day; if it is x, they are occupied that day.\nFrom these D days, consider choosing some consecutive days when all the people are free.\r\nHow many days can be chosen at most? If no day can be chosen, report 0.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN D\r\nS_1\r\nS_2\r\n\\vdots\r\nS_N\n\nOutput\n\nPrint the maximum number of days that can be chosen, or 0 if no day can be chosen.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- 1 \\leq D \\leq 100\n- N and D are integers.\n- S_i is a string of length D consisting of o and x.\n\nSample Input 1\n\n3 5\r\nxooox\r\noooxx\r\noooxo\n\nSample Output 1\n\n2\r\n\nAll the people are free on the second and third days, so we can choose them.\r\nChoosing these two days will maximize the number of days among all possible choices.\n\nSample Input 2\n\n3 3\r\noxo\r\noxo\r\noxo\n\nSample Output 2\n\n1\r\n\nNote that the chosen days must be consecutive. (All the people are free on the first and third days, so we can choose either of them, but not both.)\n\nSample Input 3\n\n3 3\r\noox\r\noxo\r\nxoo\n\nSample Output 3\n\n0\r\n\nPrint 0 if no day can be chosen.\n\nSample Input 4\n\n1 7\r\nooooooo\n\nSample Output 4\n\n7\n\nSample Input 5\n\n5 15\r\noxooooooooooooo\r\noxooxooooooooox\r\noxoooooooooooox\r\noxxxooooooxooox\r\noxooooooooxooox\n\nSample Output 5\n\n5",
  "platform": "atcoder",
  "question_id": "abc311_b",
  "contest_id": "abc311",
  "contest_date": "2023-07-22T00:00:00",
  "starter_code": "",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"output\": \"2\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\noxo\\noxo\\noxo\\n\", \"output\": \"1\\n\", \"testtype\": \"stdin\"}, {\"input\": \"3 3\\noox\\noxo\\nxoo\\n\", \"output\": \"0\\n\", \"testtype\": \"stdin\"}, {\"input\": \"1 7\\nooooooo\\n\", \"output\": \"7\\n\", \"testtype\": \"stdin\"}, {\"input\": \"5 15\\noxooooooooooooo\\noxooxooooooooox\\noxoooooooooooox\\noxxxooooooxooox\\noxooooooooxooox\\n\", \"output\": \"5\\n\", \"testtype\": \"stdin\"}]",
  "private_test_cases": "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",
  "metadata": "{}"
}