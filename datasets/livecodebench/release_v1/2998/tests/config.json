{
  "question_title": "count-symmetric-integers",
  "question_content": "You are given two positive integers low and high.\nAn integer x consisting of 2 * n digits is symmetric if the sum of the first n digits of x is equal to the sum of the last n digits of x. Numbers with an odd number of digits are never symmetric.\nReturn the number of symmetric integers in the range [low, high].\n \nExample 1:\n\nInput: low = 1, high = 100\nOutput: 9\nExplanation: There are 9 symmetric integers between 1 and 100: 11, 22, 33, 44, 55, 66, 77, 88, and 99.\n\nExample 2:\n\nInput: low = 1200, high = 1230\nOutput: 4\nExplanation: There are 4 symmetric integers between 1200 and 1230: 1203, 1212, 1221, and 1230.\n\n \nConstraints:\n\n1 <= low <= high <= 10^4",
  "platform": "leetcode",
  "question_id": "2998",
  "contest_id": "weekly-contest-361",
  "contest_date": "2023-09-03T00:00:00",
  "starter_code": "class Solution:\n    def countSymmetricIntegers(self, low: int, high: int) -> int:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"1\\n100\", \"output\": \"9\", \"testtype\": \"functional\"}, {\"input\": \"1200\\n1230\", \"output\": \"4\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJxrYJn6nYkBDCI+ABnR1UqZeQWlJUpWCkqGMXmGSjoKSvmlJVARAxC3JLW4pKSyIBUkkFaal1ySmZ+XmKNUq6OAqtecXL0WMXnGaBYbEa3ZGOhoNJsNidZsEpNnYomq2YRozeYxeZbGqJotiNZsCXS2IQXONjQhVzMwtI2MyQ5tY1NgTJsaWaBbDwlG4lxvYQr0gJmZgSmaGcbmxCc3AwMDYCAASQNUQ8wMTfEZEjtFDwC1PejI",
  "metadata": "{\"func_name\": \"countSymmetricIntegers\"}"
}