{
  "question_title": "longest-even-odd-subarray-with-threshold",
  "question_content": "You are given a 0-indexed integer array nums and an integer threshold.\nFind the length of the longest subarray of nums starting at index l and ending at index r (0 <= l <= r < nums.length) that satisfies the following conditions:\n\nnums[l] % 2 == 0\nFor all indices i in the range [l, r - 1], nums[i] % 2 != nums[i + 1] % 2\nFor all indices i in the range [l, r], nums[i] <= threshold\n\nReturn an integer denoting the length of the longest such subarray.\nNote: A subarray is a contiguous non-empty sequence of elements within an array.\n \nExample 1:\n\nInput: nums = [3,2,5,4], threshold = 5\nOutput: 3\nExplanation: In this example, we can select the subarray that starts at l = 1 and ends at r = 3 => [2,5,4]. This subarray satisfies the conditions.\nHence, the answer is the length of the subarray, 3. We can show that 3 is the maximum possible achievable length.\nExample 2:\n\nInput: nums = [1,2], threshold = 2\nOutput: 1\nExplanation: In this example, we can select the subarray that starts at l = 1 and ends at r = 1 => [2]. \nIt satisfies all the conditions and we can show that 1 is the maximum possible achievable length.\n\nExample 3:\n\nInput: nums = [2,3,4,5], threshold = 4\nOutput: 3\nExplanation: In this example, we can select the subarray that starts at l = 0 and ends at r = 2 => [2,3,4]. \nIt satisfies all the conditions.\nHence, the answer is the length of the subarray, 3. We can show that 3 is the maximum possible achievable length.\n\n \nConstraints:\n\n1 <= nums.length <= 100 \n1 <= nums[i] <= 100 \n1 <= threshold <= 100",
  "platform": "leetcode",
  "question_id": "2866",
  "contest_id": "weekly-contest-352",
  "contest_date": "2023-07-02T00:00:00",
  "starter_code": "class Solution:\n    def longestAlternatingSubarray(self, nums: List[int], threshold: int) -> int:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"[3, 2, 5, 4]\\n5\", \"output\": \"3\", \"testtype\": \"functional\"}, {\"input\": \"[1, 2]\\n2\", \"output\": \"1\", \"testtype\": \"functional\"}, {\"input\": \"[2, 3, 4, 5]\\n4\", \"output\": \"3\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJylk0trFUEQhV2Iv6OZ9SDTj+pHfokQsxCJEJCbgHMXIkLW7gT9v9ZX1YnGheh4ufPqrjp1zqnq++ffv754Zr9XX/Tl8tNyc7o778tFWC7LuHp9qtuyhuX2vM9V+9yvP+z7x7trFt6dT2/3m9vTm/fL5zX8mt/WkBShPwWIfw9Q+hqGrCFmhRn1KU76B5w15DUonaFYaDqMhKQ1dPvjzjiMFBWqKqsMMzAhNsphPIVRmXEzqd3uVV8UVA77LwYDZjX7/F8Us/1nL8Bs9uaNocHHtUdTnIymPDJVyLgd50mTFTINnxwlnCCKtVoj6VP0qlq76XqEA6FKoUQjI8PDmeDZGnYi8jWjN0fiu2r40D3hide4QqpeTXMhkzRWFCNWZ2OHI5qBJRlHvUdqiU8WQFZbeQiA0flUXIJi8QKZlmi6iBchD1lFi3T97ttcT479mOcpXT/bmHzYnvrgWOGLU8XLs4aeTszwsjg2spfIw/VBEW8y85sOz++YttXZoDLPBYIQk10ky7V4u1EjMGquhJhYZneYrc1jLb/48cX+h04SI7OTphRFyZWCiUOotZlpPiQ2AThQ/aIetTOHOfqcUS9u2xy05OMEGGKq/OyWjQbkiYuTfPEikCG3+PRVl0sZhq13z8J8ZI7hcqgIfbPmwbo0nz5yEECxzNEiBcfs8LBHH+tvjZQ/NfLq28sfNoON5g==",
  "metadata": "{\"func_name\": \"longestAlternatingSubarray\"}"
}