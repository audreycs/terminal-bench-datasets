{
  "question_title": "find-champion-i",
  "question_content": "There are n teams numbered from 0 to n - 1 in a tournament.\nGiven a 0-indexed 2D boolean matrix grid of size n * n. For all i, j that 0 <= i, j <= n - 1 and i != j team i is stronger than team j if grid[i][j] == 1, otherwise, team j is stronger than team i.\nTeam a will be the champion of the tournament if there is no team b that is stronger than team a.\nReturn the team that will be the champion of the tournament.\n \nExample 1:\n\nInput: grid = [[0,1],[0,0]]\nOutput: 0\nExplanation: There are two teams in this tournament.\ngrid[0][1] == 1 means that team 0 is stronger than team 1. So team 0 will be the champion.\n\nExample 2:\n\nInput: grid = [[0,0,1],[1,0,1],[0,0,0]]\nOutput: 1\nExplanation: There are three teams in this tournament.\ngrid[1][0] == 1 means that team 1 is stronger than team 0.\ngrid[1][2] == 1 means that team 1 is stronger than team 2.\nSo team 1 will be the champion.\n\n \nConstraints:\n\nn == grid.length\nn == grid[i].length\n2 <= n <= 100\ngrid[i][j] is either 0 or 1.\nFor all i grid[i][i] is 0.\nFor all i, j that i != j, grid[i][j] != grid[j][i].\nThe input is generated such that if team a is stronger than team b and team b is stronger than team c, then team a is stronger than team c.",
  "platform": "leetcode",
  "question_id": "3188",
  "contest_id": "weekly-contest-370",
  "contest_date": "2023-11-05T00:00:00",
  "starter_code": "class Solution:\n    def findChampion(self, grid: List[List[int]]) -> int:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"[[0, 1], [0, 0]]\", \"output\": \"0\", \"testtype\": \"functional\"}, {\"input\": \"[[0, 0, 1], [1, 0, 1], [0, 0, 0]]\", \"output\": \"1\", \"testtype\": \"functional\"}]",
  "private_test_cases": "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",
  "metadata": "{\"func_name\": \"findChampion\"}"
}