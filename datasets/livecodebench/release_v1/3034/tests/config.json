{
  "question_title": "points-that-intersect-with-cars",
  "question_content": "You are given a 0-indexed 2D integer array nums representing the coordinates of the cars parking on a number line. For any index i, nums[i] = [start_i, end_i] where start_i is the starting point of the i^th car and end_i is the ending point of the i^th car.\nReturn the number of integer points on the line that are covered with any part of a car.\n \nExample 1:\n\nInput: nums = [[3,6],[1,5],[4,7]]\nOutput: 7\nExplanation: All the points from 1 to 7 intersect at least one car, therefore the answer would be 7.\n\nExample 2:\n\nInput: nums = [[1,3],[5,8]]\nOutput: 7\nExplanation: Points intersecting at least one car are 1, 2, 3, 5, 6, 7, 8. There are a total of 7 points, therefore the answer would be 7.\n\n \nConstraints:\n\n1 <= nums.length <= 100\nnums[i].length == 2\n1 <= start_i <= end_i <= 100",
  "platform": "leetcode",
  "question_id": "3034",
  "contest_id": "weekly-contest-362",
  "contest_date": "2023-09-10T00:00:00",
  "starter_code": "class Solution:\n    def numberOfPoints(self, nums: List[List[int]]) -> int:\n        ",
  "difficulty": "easy",
  "public_test_cases": "[{\"input\": \"[[3, 6], [1, 5], [4, 7]]\", \"output\": \"7\", \"testtype\": \"functional\"}, {\"input\": \"[[1, 3], [5, 8]]\", \"output\": \"7\", \"testtype\": \"functional\"}]",
  "private_test_cases": "eJylWMuKJDcQ9MFH3/YHmjk3pvSW/CWGYQ7GrGHBzC5sz8EYgz/C/l/nQxFq1RhD47lMjUpKZWZERmbNn9/+/eHDN/bz43fy8Pz706fXL2+3px8uT8/P+XqpL9fLc7lexsvL0/Xy9PntNt9W/fP28evt9tuXj7rwy9vrz7dPn19/+vXpj+tls9Oul3CooXq9tLOh8oChkK6XaJZCFJvJnq6XfrYZ2iNGG4zGQ54in/LZbH/Eaoctsx/odHnn7PGAWclgGGora9hqU1f6XHlv+xGYxgaTp9YXuhJAfqd/y/Uj7vOKcAA/kkOSE+dlIf6f1EdNuPsrNlPaQYgzlioeVKN3lTirBZyE6cnWQmBaZS3b2yJ5Kfa2aSI8VVojDoj4XWwty9m8APcoZV9zewfshUE2yx2xTO/sXRVrzdKRZVfx++XWYtaK2Ci2P4vdPGAj2L4W6d3ArSXA9yJr1c4mecq2FgfyFGVftBNJLCfPosSds9mTO9ryoCLH2eNu8FQ9aHaiy75u9ppY6Xk/axh43IqPRymR1wBm2GU5wVEFo2QANKu2EGQllTuakL4ka8nWhhUf4l4cOIheIWfM46hPcfLe38muHJmdTvY4xgey3XFVjfDDEtvwlNzzDiN21E40ca5D2AJ+B/LK/I6ZJiKZU+Btk32NyM1YGk7kSj4P8N4QSUxXuBeYJid7wztH2tYi2Rxwf6wTt04vI72sTEPeQzYbiTyMZLPXS7S6OuvBI4KgtHWalQKYjZiBpVmYuAj+OKhD0jU8LCV/3c8OeRrhXiJLRCqN0n0yz971ilQu4g3ZNRqTlCg+keTym+RpLN/yKYaBkldye9lqswynfb2hHJeYdYmrVwhSOBXG0MAGyO+Wh2qoy0BGPVpmWaO5kH4NhGmN9PN7lWHlJGyavbhb7hFkU0I5eUwUD8jKneXGE2lfC4eKw3HsSKbAokHPYw5UiIrj1pG1lKA1xppF5LCvrezGSurL0R3TxQejeyEfOksFHXHcW1heaHF46SwfLboTnxfvFz9NwjKFJVISjnv1GbJrlL0SbC1PYVwMc74kcGPhttCyaWW12sLYK4XgIC6ufh1CEDL4rGxv7ybSHh6RBAXBnWvs24tAKOaBXbVCKw3QsZfVgtuSujra2JWuNECfGopJO33texHb2ipit3dggjG1PlgQTq4E8bAkZhKtEGB/i+knIZ67GSWgLKyRhr1crYQ9K2ETUacQp5/VI62AXMMTfMInRVVrx0nEDqxZHzjoU8EJz8nqEmvOMGLVHalJE4jJ2O+wKMKOlDWKwXyeSnMJumVlsOTHLkRmpfLeEwLLZ2PSSRRXXsxepTzW3ReTgFO8NovWPSLjGYZ5y9kA3GbipKYKY15jDUbSAjjnYNYB2dploXa8bRygZoAJPWGVlBaDnzAK5lP5cGSw0d2HLvY2C7WR7oFaWN+pQn5AFWwypFB1Cv3g8DDrabCXaDyu1+rTfKIGKjgOtgIxxaXw8H1TCvymSGwQec1IHY2xsW1qa8bhe+lKa7BwLgcArc56q1InXMJLoBWTQo7IPhMkipLJjsdSEGnhnG3zieOfoPvKsE7izrUC1K2LVLg6XYhU4zE4eOT7oaByzPLqmLA7w9O7Xq9e+9w0FmimpT6pdwxwFQWlETd+5jmOit789Bvo2VYPFaU6owtIsApIgeR5LSrNXXH06KBGznrvSIcOX869wgauOuglF1d5cXwnYeyzMVNmvHURS6WT514nD586bR5wOkXyl/OTzmgDs0c+m+OwoL1hUKXXIDorSN9ymARjgakSYn4tc5gO/CIfdGDxIaPpxNV2BxCw1LoyBFBJ27Pg+O4fF//5n4uXv77/By4rWUY=",
  "metadata": "{\"func_name\": \"numberOfPoints\"}"
}